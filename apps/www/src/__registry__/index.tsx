// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  "default": {
    "ai-menu": {
      name: "ai-menu",
      title: "AI Menu",
      description: "A menu for AI-powered content generation and insertion.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/use-chat.json","https://platejs.org/r/command.json","https://platejs.org/r/popover.json","https://platejs.org/r/editor.json"],
      files: [{
        path: "src/registry/ui/ai-menu.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/ai-loading-bar.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/ai-anchor-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/ai-menu-items.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/ai-chat-editor.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/ai-menu.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/ai","title":"AI"},{"route":"https://pro.platejs.org/docs/components/ai-menu","title":"AI Menu"}],"examples":["ai-demo","ai-pro"],"label":"New"},
    },
    "ai-toolbar-button": {
      name: "ai-toolbar-button",
      title: "AI Toolbar Button",
      description: "A toolbar button for accessing AI features.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/ai-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/ai-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/ai","title":"AI"},{"route":"https://pro.platejs.org/docs/components/ai-toolbar-button"}],"examples":["ai-demo","floating-toolbar-demo","ai-pro"],"label":"New"},
    },
    "align-dropdown-menu": {
      name: "align-dropdown-menu",
      title: "Align Dropdown Menu",
      description: "A dropdown menu for text alignment controls.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/dropdown-menu.json","https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/align-dropdown-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/align-dropdown-menu.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/alignment"}],"examples":["align-demo"]},
    },
    "block-context-menu": {
      name: "block-context-menu",
      title: "Block Context Menu",
      description: "A context menu for block-level operations.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/calendar.json","https://platejs.org/r/context-menu.json","https://platejs.org/r/use-is-touch-device.json"],
      files: [{
        path: "src/registry/ui/block-context-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/block-context-menu.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/block-menu"},{"route":"https://pro.platejs.org/docs/components/block-context-menu"}],"examples":["block-menu-demo","block-menu-pro"],"label":"New"},
    },
    "block-selection": {
      name: "block-selection",
      title: "Block Selection",
      description: "A visual overlay for selected blocks.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/block-selection.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/block-selection.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/block-selection"},{"route":"https://pro.platejs.org/docs/components/block-selection"}],"examples":["block-selection-demo","block-selection-pro"],"label":"New"},
    },
    "import-toolbar-button": {
      name: "import-toolbar-button",
      title: "Import Toolbar Button",
      description: "A toolbar button to import editor content from a file.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/dropdown-menu.json","https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/import-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/import-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/import","title":"Import"}],"examples":["basic-nodes-demo"],"label":"New"},
    },
    "export-toolbar-button": {
      name: "export-toolbar-button",
      title: "Export Toolbar Button",
      description: "A toolbar button to export editor content as PDF.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/export-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/export-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/export","title":"Export"}],"examples":["basic-nodes-demo"],"label":"New"},
    },
    "caption": {
      name: "caption",
      title: "Caption",
      description: "A text field for adding captions to media elements.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/button.json"],
      files: [{
        path: "src/registry/ui/caption.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/caption.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/caption"},{"route":"https://pro.platejs.org/docs/components/caption"}],"examples":["media-demo"]},
    },
    "color-dropdown-menu": {
      name: "color-dropdown-menu",
      title: "Color Dropdown Menu",
      description: "A color picker with text and background color controls.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/dropdown-menu.json","https://platejs.org/r/toolbar.json","https://platejs.org/r/separator.json","https://platejs.org/r/button.json","https://platejs.org/r/tooltip.json"],
      files: [{
        path: "src/registry/ui/color-constants.ts",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/color-dropdown-menu-items.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/color-dropdown-menu.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/color-input.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/color-picker.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/colors-custom.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/color-constants.ts")),
      source: "",
      meta: {"docs":[{"route":"/docs/font"},{"route":"https://pro.platejs.org/docs/components/color-dropdown-menu"}],"examples":["font-demo"]},
    },
    "comment-toolbar-button": {
      name: "comment-toolbar-button",
      title: "Comment Toolbar Button",
      description: "A toolbar button for adding inline comments.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/comments-plugin.json"],
      files: [{
        path: "src/registry/ui/comment-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/comment-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/comments"},{"route":"https://pro.platejs.org/docs/components/comment-toolbar-button"}],"examples":["comments-demo","floating-toolbar-demo","comments-pro"]},
    },
    "block-discussion": {
      name: "block-discussion",
      title: "Block Discussion",
      description: "A popover interface for managing discussions: comments, replies, suggestions.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/suggestion-plugin.json","https://platejs.org/r/button.json","https://platejs.org/r/popover.json","https://platejs.org/r/avatar.json","https://platejs.org/r/dropdown-menu.json","https://platejs.org/r/editor.json","https://platejs.org/r/ai-leaf.json","https://platejs.org/r/avatar.json","https://platejs.org/r/date-element.json","https://platejs.org/r/emoji-input-element.json","https://platejs.org/r/inline-equation-element.json","https://platejs.org/r/link-element.json","https://platejs.org/r/mention-element.json","https://platejs.org/r/mention-input-element.json"],
      files: [{
        path: "src/registry/ui/block-discussion.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/block-suggestion.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/comment.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/comment-create-form.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/block-discussion.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/comments"},{"route":"https://pro.platejs.org/docs/components/block-discussion"}],"examples":["comments-demo","comments-pro"]},
    },
    "cursor-overlay": {
      name: "cursor-overlay",
      title: "Cursor Overlay",
      description: "A visual overlay for cursors and selections.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/cursor-overlay.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/cursor-overlay.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/cursor-overlay"},{"route":"https://pro.platejs.org/docs/components/cursor-overlay"}],"examples":["ai-demo"]},
    },
    "draggable": {
      name: "draggable",
      title: "Draggable",
      description: "A drag handle for moving editor blocks.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/tooltip.json","https://platejs.org/r/use-mounted.json"],
      files: [{
        path: "src/registry/ui/draggable.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/draggable.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/dnd","title":"Drag & Drop"},{"route":"https://pro.platejs.org/docs/components/draggable"}],"examples":["dnd-demo","dnd-pro"],"usage":["import { DndPlugin } from '@udecode/plate-dnd';\nimport { NodeIdPlugin } from '@udecode/plate-node-id';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';","export function MyEditor() {\n  const editor = usePlateEditor({\n    plugins: [\n      // ...otherPlugins,\n      NodeIdPlugin,\n      DndPlugin.configure({ options: { enableScroller: true } }),\n    ],\n    override: {\n      components: {\n        // ...components\n      },\n    }\n  });\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Plate editor={editor}>\n        <PlateContent />\n      </Plate>\n    </DndProvider>\n  );\n}"]},
    },
    "editor": {
      name: "editor",
      title: "Editor",
      description: "A container for the editor content and styling.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/editor.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/editor-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/editor.tsx")),
      source: "",
      meta: {"docs":[{"route":"https://pro.platejs.org/docs/components/editor"}],"examples":["editor-default","editor-disabled","editor-full-width"]},
    },
    "select-editor": {
      name: "select-editor",
      title: "Select Editor",
      description: "An editor to select tags.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/editor","command","popover","https://platejs.org/r/tag-element"],
      files: [{
        path: "src/registry/ui/select-editor.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/select-editor.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/multi-select"}],"examples":["select-editor-demo"],"label":"New"},
    },
    "emoji-dropdown-menu": {
      name: "emoji-dropdown-menu",
      title: "Emoji Dropdown Menu",
      description: "A dropdown menu for emoji selection and insertion.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/emoji-dropdown-menu.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/emoji-icons.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/emoji-picker-content.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/emoji-picker-navigation.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/emoji-picker-preview.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/emoji-picker-search-and-clear.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/emoji-picker-search-bar.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/emoji-picker.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/emoji-toolbar-dropdown.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/emoji-dropdown-menu.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/emoji"},{"route":"https://pro.platejs.org/docs/components/emoji-picker"}],"examples":["emoji-demo","emoji-pro"]},
    },
    "fixed-toolbar-buttons": {
      name: "fixed-toolbar-buttons",
      title: "Fixed Toolbar Buttons",
      description: "A set of commonly used formatting buttons.",
      type: "registry:ui",
      registryDependencies: ["toolbar","https://platejs.org/r/ai-toolbar-button","https://platejs.org/r/align-dropdown-menu","https://platejs.org/r/color-dropdown-menu","https://platejs.org/r/comment-toolbar-button","https://platejs.org/r/emoji-dropdown-menu","https://platejs.org/r/font-size-toolbar-button","https://platejs.org/r/history-toolbar-button","https://platejs.org/r/indent-list-toolbar-button","https://platejs.org/r/indent-todo-toolbar-button","https://platejs.org/r/indent-toolbar-button","https://platejs.org/r/import-toolbar-button","https://platejs.org/r/insert-dropdown-menu","https://platejs.org/r/line-height-dropdown-menu","https://platejs.org/r/link-toolbar-button","https://platejs.org/r/mark-toolbar-button","https://platejs.org/r/media-toolbar-button","https://platejs.org/r/mode-dropdown-menu","https://platejs.org/r/more-dropdown-menu","https://platejs.org/r/outdent-toolbar-button","https://platejs.org/r/table-dropdown-menu","https://platejs.org/r/toggle-toolbar-button","https://platejs.org/r/turn-into-dropdown-menu","https://platejs.org/r/export-toolbar-button"],
      files: [{
        path: "src/registry/ui/fixed-toolbar-buttons.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/fixed-toolbar-buttons.tsx")),
      source: "",
      meta: {"examples":["basic-nodes-demo"]},
    },
    "fixed-toolbar-list-buttons": {
      name: "fixed-toolbar-list-buttons",
      title: "Fixed Toolbar List Buttons",
      description: "",
      type: "registry:ui",
      registryDependencies: ["toolbar","https://platejs.org/r/ai-toolbar-button","https://platejs.org/r/align-dropdown-menu","https://platejs.org/r/color-dropdown-menu","https://platejs.org/r/comment-toolbar-button","https://platejs.org/r/emoji-dropdown-menu","https://platejs.org/r/insert-dropdown-menu","https://platejs.org/r/line-height-dropdown-menu","https://platejs.org/r/list-indent-toolbar-button","https://platejs.org/r/link-toolbar-button","https://platejs.org/r/mark-toolbar-button","https://platejs.org/r/media-toolbar-button","https://platejs.org/r/mode-dropdown-menu","https://platejs.org/r/more-dropdown-menu","https://platejs.org/r/table-dropdown-menu","https://platejs.org/r/toggle-toolbar-button","https://platejs.org/r/turn-into-dropdown-menu"],
      files: [{
        path: "src/registry/ui/fixed-toolbar-list-buttons.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/fixed-toolbar-list-buttons.tsx")),
      source: "",
      meta: {},
    },
    "fixed-toolbar": {
      name: "fixed-toolbar",
      title: "Fixed Toolbar",
      description: "A fixed toolbar that stays at the top of the editor.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/fixed-toolbar.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/fixed-toolbar.tsx")),
      source: "",
      meta: {"examples":["basic-nodes-demo"]},
    },
    "floating-toolbar-buttons": {
      name: "floating-toolbar-buttons",
      title: "Floating Toolbar Buttons",
      description: "A set of formatting buttons for the floating toolbar.",
      type: "registry:ui",
      registryDependencies: ["toolbar","https://platejs.org/r/ai-toolbar-button","https://platejs.org/r/comment-toolbar-button","https://platejs.org/r/link-toolbar-button","https://platejs.org/r/mark-toolbar-button","https://platejs.org/r/more-dropdown-menu","https://platejs.org/r/turn-into-dropdown-menu"],
      files: [{
        path: "src/registry/ui/floating-toolbar-buttons.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/floating-toolbar-buttons.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/api/floating"},{"route":"https://pro.platejs.org/docs/components/floating-toolbar-buttons"}],"examples":["floating-toolbar-demo","floating-toolbar-pro"]},
    },
    "floating-toolbar": {
      name: "floating-toolbar",
      title: "Floating Toolbar",
      description: "A contextual toolbar that appears over selected text.",
      type: "registry:ui",
      registryDependencies: ["toolbar"],
      files: [{
        path: "src/registry/ui/floating-toolbar.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/floating-toolbar.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/api/floating"},{"route":"https://pro.platejs.org/docs/components/floating-toolbar"}],"examples":["floating-toolbar-demo","floating-toolbar-pro"]},
    },
    "ghost-text": {
      name: "ghost-text",
      title: "Ghost Text",
      description: "A text suggestion system that displays AI-generated content after the cursor.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/ghost-text.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/ghost-text.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/copilot"},{"route":"https://pro.platejs.org/docs/components/ghost-text"}],"examples":["copilot-demo","copilot-pro"],"label":"New"},
    },
    "indent-fire-marker": {
      name: "indent-fire-marker",
      title: "Indent Fire Marker",
      description: "",
      type: "registry:ui",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/ui/indent-fire-marker.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/indent-fire-marker.tsx")),
      source: "",
      meta: undefined,
    },
    "history-toolbar-button": {
      name: "history-toolbar-button",
      title: "History Toolbar Button",
      description: "Toolbar buttons for undo and redo operations.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/history-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/history-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"https://docs.slatejs.org/libraries/slate-history","title":"Slate History"}],"examples":["basic-nodes-demo"]},
    },
    "indent-list-toolbar-button": {
      name: "indent-list-toolbar-button",
      title: "Indent List Toolbar Button",
      description: "A toolbar control for adjusting list indentation.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/indent-list-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/indent-list-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/indent-list"}],"examples":["list-demo"]},
    },
    "indent-todo-marker": {
      name: "indent-todo-marker",
      title: "Indent Todo Marker",
      description: "A checkbox marker for interactive todo lists.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/checkbox.json"],
      files: [{
        path: "src/registry/ui/indent-todo-marker.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/indent-todo-marker-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/indent-todo-marker.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/indent-list"},{"route":"https://pro.platejs.org/docs/components/indent-todo-marker"}],"examples":["list-demo"]},
    },
    "indent-todo-toolbar-button": {
      name: "indent-todo-toolbar-button",
      title: "Indent Todo Toolbar Button",
      description: "A toolbar control for creating todo list items.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/indent-todo-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/indent-todo-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/indent-list"}],"examples":["list-demo"]},
    },
    "indent-toolbar-button": {
      name: "indent-toolbar-button",
      title: "Indent Toolbar Button",
      description: "A toolbar control for block indentation.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/indent-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/indent-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/indent"}],"examples":["indent-demo"]},
    },
    "inline-combobox": {
      name: "inline-combobox",
      title: "Inline Combobox",
      description: "A combobox for inline suggestions.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/inline-combobox.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/inline-combobox.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/combobox"},{"route":"https://pro.platejs.org/docs/components/inline-combobox"}],"examples":["mention-demo","slash-command-demo","emoji-demo"]},
    },
    "insert-dropdown-menu": {
      name: "insert-dropdown-menu",
      title: "Insert Dropdown Menu",
      description: "A menu for inserting different types of blocks.",
      type: "registry:ui",
      registryDependencies: ["dropdown-menu","toolbar","https://platejs.org/r/transforms.json"],
      files: [{
        path: "src/registry/ui/insert-dropdown-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/insert-dropdown-menu.tsx")),
      source: "",
      meta: {"examples":["basic-nodes-demo"]},
    },
    "line-height-dropdown-menu": {
      name: "line-height-dropdown-menu",
      title: "Line Height Dropdown Menu",
      description: "A menu for controlling text line spacing.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json","https://platejs.org/r/dropdown-menu.json"],
      files: [{
        path: "src/registry/ui/line-height-dropdown-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/line-height-dropdown-menu.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/line-height"}],"examples":["line-height-demo"]},
    },
    "link-floating-toolbar": {
      name: "link-floating-toolbar",
      title: "Link Floating Toolbar",
      description: "A floating interface for link editing.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/button.json","https://platejs.org/r/input.json","https://platejs.org/r/popover.json","https://platejs.org/r/separator.json"],
      files: [{
        path: "src/registry/ui/link-floating-toolbar.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/link-floating-toolbar.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/link"},{"route":"/docs/api/floating"},{"route":"https://pro.platejs.org/docs/components/link-floating-toolbar"}],"examples":["link-demo","link-pro"]},
    },
    "link-toolbar-button": {
      name: "link-toolbar-button",
      title: "Link Toolbar Button",
      description: "A toolbar control for link management.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/link-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/link-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/link"},{"route":"https://pro.platejs.org/docs/components/link-toolbar-button"}],"examples":["link-demo","link-pro"]},
    },
    "list-indent-toolbar-button": {
      name: "list-indent-toolbar-button",
      title: "List Indent Toolbar Button",
      description: "A toolbar control for indenting lists.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/list-indent-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/list-indent-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/list"}],"examples":["list-demo"]},
    },
    "list-toolbar-button": {
      name: "list-toolbar-button",
      title: "List Toolbar Button",
      description: "A toolbar control for list creation and management.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/list-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/list-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/list"}],"examples":["list-demo"]},
    },
    "mark-toolbar-button": {
      name: "mark-toolbar-button",
      title: "Mark Toolbar Button",
      description: "A toolbar control for basic text formatting.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/mark-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/mark-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/basic-marks"}],"examples":["basic-marks-demo","basic-nodes-pro"]},
    },
    "media-popover": {
      name: "media-popover",
      title: "Media Popover",
      description: "A popover interface for media settings.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/button.json","https://platejs.org/r/input.json","https://platejs.org/r/popover.json","https://platejs.org/r/separator.json"],
      files: [{
        path: "src/registry/ui/media-popover.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/media-popover.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/media"}],"examples":["media-demo","media-toolbar-pro"]},
    },
    "media-toolbar-button": {
      name: "media-toolbar-button",
      title: "Media Toolbar Button",
      description: "Toolbar button for inserting and managing media.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json","https://platejs.org/r/input.json","https://platejs.org/r/dropdown-menu.json","https://platejs.org/r/alert-dialog.json"],
      files: [{
        path: "src/registry/ui/media-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/media-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/media"}],"examples":["media-demo","upload-pro"]},
    },
    "media-upload-toast": {
      name: "media-upload-toast",
      title: "Media Upload Toast",
      description: "Show toast notifications for media uploads.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/media-upload-toast.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/media-upload-toast.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/media"}],"examples":["media-demo","upload-pro"]},
    },
    "mode-dropdown-menu": {
      name: "mode-dropdown-menu",
      title: "Mode Dropdown Menu",
      description: "A menu for switching between editor modes.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/dropdown-menu.json","https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/mode-dropdown-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/mode-dropdown-menu.tsx")),
      source: "",
      meta: {"examples":["basic-nodes-demo"]},
    },
    "more-dropdown-menu": {
      name: "more-dropdown-menu",
      title: "More Dropdown Menu",
      description: "A menu for additional text formatting options.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/dropdown-menu.json","https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/more-dropdown-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/more-dropdown-menu.tsx")),
      source: "",
      meta: {"docs":[{"route":"https://pro.platejs.org/docs/components/more-dropdown-menu"}],"examples":["basic-marks-demo","basic-nodes-pro"]},
    },
    "outdent-toolbar-button": {
      name: "outdent-toolbar-button",
      title: "Outdent Toolbar Button",
      description: "A toolbar button for decreasing block indentation.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/outdent-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/outdent-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/indent"}],"examples":["indent-demo"]},
    },
    "placeholder": {
      name: "placeholder",
      title: "Placeholder",
      description: "A text placeholder for empty editor blocks.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/placeholder.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/placeholder.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/basic-elements"},{"route":"https://pro.platejs.org/docs/components/placeholder"}],"examples":["basic-elements-demo","placeholder-pro"]},
    },
    "resizable": {
      name: "resizable",
      title: "Resizable",
      description: "A resizable wrapper with resize handles.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/resizable.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/resizable.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/api/resizable"},{"route":"https://pro.platejs.org/docs/components/resizable"}],"examples":["media-demo","media-toolbar-pro"]},
    },
    "table-dropdown-menu": {
      name: "table-dropdown-menu",
      title: "Table Dropdown Menu",
      description: "A menu for table manipulation and formatting.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/dropdown-menu.json","https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/table-dropdown-menu.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/table-icons.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/table-dropdown-menu.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/table"}],"examples":["table-demo"]},
    },
    "toggle-toolbar-button": {
      name: "toggle-toolbar-button",
      title: "Toggle Toolbar Button",
      description: "A toolbar button for expanding and collapsing blocks.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/toggle-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/toggle-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/toggle"}],"examples":["toggle-demo"]},
    },
    "turn-into-dropdown-menu": {
      name: "turn-into-dropdown-menu",
      title: "Turn Into Dropdown Menu",
      description: "A menu for converting between different block types.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/dropdown-menu.json","https://platejs.org/r/toolbar.json","https://platejs.org/r/transforms.json"],
      files: [{
        path: "src/registry/ui/turn-into-dropdown-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/turn-into-dropdown-menu.tsx")),
      source: "",
      meta: {"docs":[{"route":"https://pro.platejs.org/docs/components/turn-into-dropdown-menu"}],"examples":["basic-nodes-demo","basic-nodes-pro"]},
    },
    "remote-cursor-overlay": {
      name: "remote-cursor-overlay",
      title: "Remote Cursor Overlay",
      description: "A cursor overlay to display multiplayer cursors in the yjs plugin.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/remote-cursor-overlay.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/remote-cursor-overlay.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/collaboration"}],"examples":[]},
    },
    "ai-leaf": {
      name: "ai-leaf",
      title: "AI Leaf",
      description: "A text highlighter for AI-generated content.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/ai-leaf.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/ai-leaf.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/ai","title":"AI"},{"route":"https://pro.platejs.org/docs/components/ai-leaf","title":"AI Leaf"}],"examples":["ai-demo","ai-pro"],"label":"New"},
    },
    "blockquote-element": {
      name: "blockquote-element",
      title: "Blockquote Element",
      description: "A quote component for block quotes.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/blockquote-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/blockquote-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/blockquote-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/basic-elements"},{"route":"https://pro.platejs.org/docs/components/blockquote-element"}],"examples":["basic-elements-demo","basic-nodes-pro"]},
    },
    "code-block-element": {
      name: "code-block-element",
      title: "Code Block Element",
      description: "A code block with syntax highlighting and language selection.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/command.json"],
      files: [{
        path: "src/registry/ui/code-block-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/code-block-element-static.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/code-block-combobox.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/code-block-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/basic-elements"},{"route":"https://pro.platejs.org/docs/components/code-block-element"}],"examples":["basic-elements-demo"]},
    },
    "code-leaf": {
      name: "code-leaf",
      title: "Code Leaf",
      description: "An inline component for code snippets.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/code-leaf.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/code-leaf-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/code-leaf.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/basic-marks"},{"route":"https://pro.platejs.org/docs/components/code-leaf"}],"examples":["basic-marks-demo"]},
    },
    "code-line-element": {
      name: "code-line-element",
      title: "Code Line Element",
      description: "A line component for code blocks.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/code-line-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/code-line-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/code-line-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/basic-elements"},{"route":"https://pro.platejs.org/docs/components/code-line-element"}],"examples":["basic-elements-demo","basic-nodes-pro"]},
    },
    "code-syntax-leaf": {
      name: "code-syntax-leaf",
      title: "Code Syntax Leaf",
      description: "A syntax highlighting component for code blocks.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/code-syntax-leaf.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/code-syntax-leaf-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/code-syntax-leaf.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/basic-elements"},{"route":"https://pro.platejs.org/docs/components/code-syntax-leaf"}],"examples":["basic-elements-demo","basic-nodes-pro"]},
    },
    "column-element": {
      name: "column-element",
      title: "Column Element",
      description: "A resizable column component for layout.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/resizable.json"],
      files: [{
        path: "src/registry/ui/column-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/column-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/column-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/column"},{"route":"https://pro.platejs.org/docs/components/column-element"}],"examples":["column-demo"]},
    },
    "column-group-element": {
      name: "column-group-element",
      title: "Column Group Element",
      description: "A resizable column component for layout.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/command.json","https://platejs.org/r/resizable.json"],
      files: [{
        path: "src/registry/ui/column-group-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/column-group-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/column-group-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/column"},{"route":"https://pro.platejs.org/docs/components/column-group-element"}],"examples":["column-demo"]},
    },
    "comment-leaf": {
      name: "comment-leaf",
      title: "Comment Leaf",
      description: "A text component for displaying comments with visual indicators.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/comment-leaf.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/comment-leaf-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/comment-leaf.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/comments"},{"route":"https://pro.platejs.org/docs/components/comment-leaf"}],"examples":["comments-demo","comments-pro"]},
    },
    "suggestion-leaf": {
      name: "suggestion-leaf",
      title: "Suggestion Leaf",
      description: "A text component for suggestion.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/suggestion-plugin.json"],
      files: [{
        path: "src/registry/ui/suggestion-leaf.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/suggestion-leaf-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/suggestion-leaf.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/suggestion"}],"examples":["comments-demo","comments-pro"]},
    },
    "suggestion-line-break": {
      name: "suggestion-line-break",
      title: "Suggestion Line Break",
      description: "A line break component for suggestion.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/suggestion-plugin.json"],
      files: [{
        path: "src/registry/ui/suggestion-line-break.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/suggestion-line-break.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/suggestion"}],"examples":["comments-demo","comments-pro"]},
    },
    "date-element": {
      name: "date-element",
      title: "Date Element",
      description: "A date field component with calendar picker.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/calendar.json"],
      files: [{
        path: "src/registry/ui/date-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/date-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/date-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/date"},{"route":"https://pro.platejs.org/docs/components/date-element"}],"examples":["date-demo"],"label":"New"},
    },
    "equation-element": {
      name: "equation-element",
      title: "Equation Element",
      description: "Displays a LaTeX equation element with an editable popover for inputting and rendering mathematical expressions.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/popover.json"],
      files: [{
        path: "src/registry/ui/equation-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/equation-element-static.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/equation-popover.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/equation-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"https://platejs.org/docs/equation","title":"Equation"}],"examples":["equation-demo"]},
    },
    "inline-equation-element": {
      name: "inline-equation-element",
      title: "Inline Equation Element",
      description: "An inline LaTeX equation element with an editable popover for inputting and rendering mathematical expressions.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/popover.json"],
      files: [{
        path: "src/registry/ui/inline-equation-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/inline-equation-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/inline-equation-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"https://platejs.org/docs/equation","title":"Equation"}],"examples":["equation-demo"]},
    },
    "inline-equation-toolbar-button": {
      name: "inline-equation-toolbar-button",
      title: "Inline Equation Toolbar Button",
      description: "A toolbar button for inserting and editing inline equations.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/inline-equation-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/inline-equation-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"https://platejs.org/docs/equation","title":"Equation"}],"examples":["equation-demo","floating-toolbar-demo"]},
    },
    "emoji-input-element": {
      name: "emoji-input-element",
      title: "Emoji Input Element",
      description: "An input component for emoji search and insertion.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/inline-combobox.json","https://platejs.org/r/use-debounce.json"],
      files: [{
        path: "src/registry/ui/emoji-input-element.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/emoji-input-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/emoji"},{"route":"https://pro.platejs.org/docs/components/emoji-input-element"}],"examples":["emoji-demo"]},
    },
    "excalidraw-element": {
      name: "excalidraw-element",
      title: "Excalidraw Element",
      description: "A drawing component powered by Excalidraw.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/excalidraw-element.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/excalidraw-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/excalidraw"}]},
    },
    "font-size-toolbar-button": {
      name: "font-size-toolbar-button",
      title: "Font Size Toolbar Button",
      description: "A toolbar control for adjusting font size.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/popover.json","https://platejs.org/r/toolbar.json"],
      files: [{
        path: "src/registry/ui/font-size-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/font-size-toolbar-button.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/font"}],"examples":["list-demo"]},
    },
    "heading-element": {
      name: "heading-element",
      title: "Heading Element",
      description: "A heading with multiple level support.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/heading-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/heading-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/heading-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/basic-elements"},{"route":"https://pro.platejs.org/docs/components/heading-element"}],"examples":["basic-elements-demo","basic-nodes-pro"]},
    },
    "highlight-leaf": {
      name: "highlight-leaf",
      title: "Highlight Leaf",
      description: "A text highlighter with customizable colors.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/highlight-leaf.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/highlight-leaf-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/highlight-leaf.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/highlight"}],"examples":["highlight-demo"]},
    },
    "hr-element": {
      name: "hr-element",
      title: "Horizontal Rule Element",
      description: "A horizontal rule component with focus states.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/hr-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/hr-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/hr-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/horizontal-rule"},{"route":"https://pro.platejs.org/docs/components/hr-element"}],"examples":["horizontal-rule-demo"]},
    },
    "image-element": {
      name: "image-element",
      title: "Image Element",
      description: "Image element with lazy loading, resizing capabilities, and optional caption.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/media-popover.json","https://platejs.org/r/caption.json","https://platejs.org/r/resizable.json"],
      files: [{
        path: "src/registry/ui/image-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/image-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/image-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/media"},{"route":"/docs/api/resizable"},{"route":"https://pro.platejs.org/docs/components/image-element"}],"examples":["media-demo","media-toolbar-pro"]},
    },
    "image-preview": {
      name: "image-preview",
      title: "Image Preview",
      description: "A modal component for previewing and manipulating images.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/image-preview.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/image-preview.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/media"},{"route":"https://pro.platejs.org/docs/components/image-preview"}],"examples":["media-demo","media-toolbar-pro"]},
    },
    "kbd-leaf": {
      name: "kbd-leaf",
      title: "Keyboard Input Leaf",
      description: "A component for styling keyboard shortcuts.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/kbd-leaf.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/kbd-leaf-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/kbd-leaf.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/kbd","title":"Keyboard Input"}],"examples":["kbd-demo"]},
    },
    "link-element": {
      name: "link-element",
      title: "Link Element",
      description: "A component for rendering hyperlinks with hover states.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/link-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/link-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/link-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/link"},{"route":"https://pro.platejs.org/docs/components/link-element"}],"examples":["link-demo"]},
    },
    "list-element": {
      name: "list-element",
      title: "List Element",
      description: "A list element for ordered and unordered items.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/list-element.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/list-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/list"}],"examples":["list-demo"]},
    },
    "media-audio-element": {
      name: "media-audio-element",
      title: "Media Audio Element",
      description: "An audio player component with caption support.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/caption.json"],
      files: [{
        path: "src/registry/ui/media-audio-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/media-audio-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/media-audio-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/media"},{"route":"https://pro.platejs.org/docs/components/media-audio-element"}],"examples":["media-demo","upload-pro"]},
    },
    "media-embed-element": {
      name: "media-embed-element",
      title: "Media Embed Element",
      description: "A component for embedded media content with resizing and caption support.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/media-popover.json","https://platejs.org/r/caption.json","https://platejs.org/r/resizable.json"],
      files: [{
        path: "src/registry/ui/media-embed-element.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/media-embed-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/media"},{"route":"/docs/api/resizable"},{"route":"https://pro.platejs.org/docs/components/media-embed-element"}],"examples":["media-demo","upload-pro"]},
    },
    "media-file-element": {
      name: "media-file-element",
      title: "Media File Element",
      description: "A file attachment component with download capability and caption.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/caption.json"],
      files: [{
        path: "src/registry/ui/media-file-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/media-file-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/media-file-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/media"},{"route":"https://pro.platejs.org/docs/components/media-file-element"}],"examples":["media-demo","upload-pro"]},
    },
    "media-placeholder-element": {
      name: "media-placeholder-element",
      title: "Media Placeholder Element",
      description: "A placeholder for media upload progress indication.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/spinner.json","https://platejs.org/r/uploadthing.json"],
      files: [{
        path: "src/registry/ui/media-placeholder-element.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/media-placeholder-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/media"},{"route":"https://pro.platejs.org/docs/components/media-placeholder-element"}],"examples":["media-demo","upload-pro"]},
    },
    "media-video-element": {
      name: "media-video-element",
      title: "Media Video Element",
      description: "A video player component with YouTube and file upload support.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/media-popover.json","https://platejs.org/r/caption.json","https://platejs.org/r/resizable.json"],
      files: [{
        path: "src/registry/ui/media-video-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/media-video-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/media-video-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/media"},{"route":"/docs/api/resizable"},{"route":"https://pro.platejs.org/docs/components/media-video-element"}],"examples":["media-demo","upload-pro"]},
    },
    "mention-element": {
      name: "mention-element",
      title: "Mention Element",
      description: "A mention element with customizable prefix and label.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/use-mounted.json"],
      files: [{
        path: "src/registry/ui/mention-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/mention-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/mention-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/mention"},{"route":"https://pro.platejs.org/docs/components/mention-element"}],"examples":["mention-demo"]},
    },
    "mention-input-element": {
      name: "mention-input-element",
      title: "Mention Input Element",
      description: "An input component for user mentions with autocomplete.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/inline-combobox.json"],
      files: [{
        path: "src/registry/ui/mention-input-element.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/mention-input-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/mention"},{"route":"https://pro.platejs.org/docs/components/mention-input-element"}],"examples":["mention-demo"]},
    },
    "paragraph-element": {
      name: "paragraph-element",
      title: "Paragraph Element",
      description: "A paragraph block with background color support.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/paragraph-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/paragraph-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/paragraph-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/basic-elements"},{"route":"https://pro.platejs.org/docs/components/paragraph-element"}],"examples":["basic-elements-demo","basic-nodes-pro"]},
    },
    "search-highlight-leaf": {
      name: "search-highlight-leaf",
      title: "Search Highlight Leaf",
      description: "A component that highlights search results in text.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/search-highlight-leaf.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/search-highlight-leaf.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/highlight"}]},
    },
    "slash-input-element": {
      name: "slash-input-element",
      title: "Slash Input Element",
      description: "A command input component for inserting various elements.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/inline-combobox.json","https://platejs.org/r/transforms.json"],
      files: [{
        path: "src/registry/ui/slash-input-element.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/slash-input-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/slash-command","title":"Slash"},{"route":"https://pro.platejs.org/docs/components/slash-input-element"}],"examples":["slash-command-demo","slash-menu-pro"],"label":"New"},
    },
    "table-cell-element": {
      name: "table-cell-element",
      title: "Table Cell Element",
      description: "A table cell with resizable borders and selection.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/resizable.json"],
      files: [{
        path: "src/registry/ui/table-cell-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/table-cell-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/table-cell-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/table"},{"route":"https://pro.platejs.org/docs/components/table-cell-element"}],"examples":["table-demo"]},
    },
    "table-element": {
      name: "table-element",
      title: "Table Element",
      description: "A table component with floating toolbar and border customization.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/dropdown-menu.json"],
      files: [{
        path: "src/registry/ui/table-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/table-icons.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/table-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/table-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/table"},{"route":"https://pro.platejs.org/docs/components/table-element"}],"examples":["table-demo"]},
    },
    "table-row-element": {
      name: "table-row-element",
      title: "Table Row Element",
      description: "A table row component with optional border hiding.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/table-row-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/table-row-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/table-row-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/table"},{"route":"https://pro.platejs.org/docs/components/table-row-element"}],"examples":["table-demo"]},
    },
    "tag-element": {
      name: "tag-element",
      title: "Tag Element",
      description: "A tag element component with selection states and styling.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/tag-element.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/tag-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/multi-select"}],"examples":["select-editor-demo"]},
    },
    "toc-element": {
      name: "toc-element",
      title: "TOC Element",
      description: "A table of contents component with links to document headings.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/toc-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/toc-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/toc-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/basic-elements"},{"route":"https://pro.platejs.org/docs/components/toc-element"}],"examples":["toc-demo","toc-pro"],"label":"New"},
    },
    "todo-list-element": {
      name: "todo-list-element",
      title: "Todo List Element",
      description: "A checkbox list element with interactive todo items.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/checkbox.json"],
      files: [{
        path: "src/registry/ui/todo-list-element.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/todo-list-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/list"}],"examples":["list-demo"]},
    },
    "toggle-element": {
      name: "toggle-element",
      title: "Toggle Element",
      description: "A collapsible component for toggling content visibility.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/button.json"],
      files: [{
        path: "src/registry/ui/toggle-element.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/toggle-element-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/toggle-element.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/toggle"}],"examples":["toggle-demo"]},
    },
    "alert-dialog": {
      name: "alert-dialog",
      title: "Alert Dialog",
      description: "A modal dialog that interrupts the user with important content and expects a response.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/button.json"],
      files: [{
        path: "src/registry/ui/alert-dialog.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/alert-dialog.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/alert-dialog"}},
    },
    "avatar": {
      name: "avatar",
      title: "Avatar",
      description: "An image element with a fallback for representing the user.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/avatar.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/avatar.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/avatar"}},
    },
    "button": {
      name: "button",
      title: "Button",
      description: "Displays a button or a component that looks like a button.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/button.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/button"}},
    },
    "calendar": {
      name: "calendar",
      title: "Calendar",
      description: "A date field component that allows users to enter and edit date.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/button.json"],
      files: [{
        path: "src/registry/ui/calendar.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/calendar.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/calendar"}},
    },
    "checkbox": {
      name: "checkbox",
      title: "Checkbox",
      description: "A control that allows the user to toggle between checked and not checked.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/checkbox.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/checkbox-static.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/checkbox.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/checkbox"}},
    },
    "command": {
      name: "command",
      title: "Command",
      description: "Fast, composable, unstyled command menu for React.",
      type: "registry:ui",
      registryDependencies: ["dialog","https://platejs.org/r/input.json"],
      files: [{
        path: "src/registry/ui/command.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/command.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/command"}},
    },
    "context-menu": {
      name: "context-menu",
      title: "Context Menu",
      description: "Displays a menu to the user — such as a set of actions or functions — triggered by a button.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/context-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/context-menu.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/context-menu"}},
    },
    "dropdown-menu": {
      name: "dropdown-menu",
      title: "Dropdown Menu",
      description: "Displays a menu to the user — such as a set of actions or functions — triggered by a button.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/dropdown-menu.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/dropdown-menu.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/dropdown-menu"}},
    },
    "form": {
      name: "form",
      title: "Form",
      description: "Building forms with React Hook Form and Zod.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/label.json"],
      files: [{
        path: "src/registry/ui/form.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/form.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/form"}},
    },
    "input": {
      name: "input",
      title: "Input",
      description: "Displays a form input field or a component that looks like an input field.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/input.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/input.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/input"}},
    },
    "label": {
      name: "label",
      title: "Label",
      description: "Renders an accessible label associated with controls.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/label.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/label.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/label"}},
    },
    "popover": {
      name: "popover",
      title: "Popover",
      description: "Displays rich content in a portal, triggered by a button.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/popover.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/popover.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/popover"}},
    },
    "separator": {
      name: "separator",
      title: "Separator",
      description: "Visually or semantically separates content.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/separator.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/separator.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/separator"}},
    },
    "toolbar": {
      name: "toolbar",
      title: "Toolbar",
      description: "A customizable toolbar component with various button styles and group",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/tooltip.json","https://platejs.org/r/separator.json"],
      files: [{
        path: "src/registry/ui/toolbar.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/toolbar.tsx")),
      source: "",
      meta: {},
    },
    "tooltip": {
      name: "tooltip",
      title: "Tooltip",
      description: "A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.",
      type: "registry:ui",
      registryDependencies: ["https://platejs.org/r/button.json"],
      files: [{
        path: "src/registry/ui/tooltip.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/tooltip.tsx")),
      source: "",
      meta: {"links":{"doc":"https://ui.shadcn.com/docs/components/tooltip"}},
    },
    "spinner": {
      name: "spinner",
      title: "Spinner",
      description: "A loading spinner component with size variants.",
      type: "registry:ui",
      registryDependencies: [],
      files: [{
        path: "src/registry/ui/spinner.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/ui/spinner.tsx")),
      source: "",
      meta: {},
    },
    "editor-plugins": {
      name: "editor-plugins",
      title: "Editor Plugins",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/ai-plugins.json","https://platejs.org/r/markdown-plugin.json","https://platejs.org/r/basic-nodes-plugins.json","https://platejs.org/r/align-plugin.json","https://platejs.org/r/autoformat-plugin.json","https://platejs.org/r/block-menu-plugins.json","https://platejs.org/r/equation-plugins.json","https://platejs.org/r/cursor-overlay-plugin.json","https://platejs.org/r/comments-plugin.json","https://platejs.org/r/delete-plugins.json","https://platejs.org/r/dnd-plugins.json","https://platejs.org/r/exit-break-plugin.json","https://platejs.org/r/indent-list-plugins.json","https://platejs.org/r/line-height-plugin.json","https://platejs.org/r/link-plugin.json","https://platejs.org/r/media-plugins.json","https://platejs.org/r/mention-plugin.json","https://platejs.org/r/reset-block-type-plugin.json","https://platejs.org/r/skip-mark-plugin.json","https://platejs.org/r/suggestion-plugin.json","https://platejs.org/r/soft-break-plugin.json","https://platejs.org/r/table-plugin.json","https://platejs.org/r/toc-plugin.json"],
      files: [{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/editor-plugins.tsx")),
      source: "",
      meta: undefined,
    },
    "ai-plugins": {
      name: "ai-plugins",
      title: "Ai Plugins",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/basic-nodes-plugins.json","https://platejs.org/r/block-selection-plugins.json","https://platejs.org/r/cursor-overlay-plugin.json","https://platejs.org/r/indent-list-plugins.json","https://platejs.org/r/link-plugin.json","https://platejs.org/r/ai-menu.json","https://platejs.org/r/blockquote-element.json","https://platejs.org/r/code-block-element.json","https://platejs.org/r/code-leaf.json","https://platejs.org/r/code-line-element.json","https://platejs.org/r/code-syntax-leaf.json","https://platejs.org/r/cursor-overlay.json","https://platejs.org/r/heading-element.json","https://platejs.org/r/hr-element.json","https://platejs.org/r/link-element.json","https://platejs.org/r/paragraph-element.json"],
      files: [{
        path: "src/registry/components/editor/plugins/ai-plugins.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/ai-plugins.tsx")),
      source: "",
      meta: undefined,
    },
    "equation-plugins": {
      name: "equation-plugins",
      title: "Equation Plugins",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/equation-element.json","https://platejs.org/r/inline-equation-toolbar-button.json"],
      files: [{
        path: "src/registry/components/editor/plugins/equation-plugins.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/equation-plugins.ts")),
      source: "",
      meta: undefined,
    },
    "align-plugin": {
      name: "align-plugin",
      title: "Align Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/align-plugin.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/align-plugin.ts")),
      source: "",
      meta: undefined,
    },
    "autoformat-plugin": {
      name: "autoformat-plugin",
      title: "Autoformat Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/autoformat-plugin.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/autoformat-plugin.ts")),
      source: "",
      meta: undefined,
    },
    "autoformat-list-plugin": {
      name: "autoformat-list-plugin",
      title: "Autoformat List Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/autoformat-list-plugin.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/autoformat-list-plugin.ts")),
      source: "",
      meta: undefined,
    },
    "basic-nodes-plugins": {
      name: "basic-nodes-plugins",
      title: "Basic Nodes Plugins",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/basic-nodes-plugins.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/basic-nodes-plugins.tsx")),
      source: "",
      meta: undefined,
    },
    "block-selection-plugins": {
      name: "block-selection-plugins",
      title: "Block Selection Plugins",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/block-selection.json"],
      files: [{
        path: "src/registry/components/editor/plugins/block-selection-plugins.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/block-selection-plugins.tsx")),
      source: "",
      meta: undefined,
    },
    "block-menu-plugins": {
      name: "block-menu-plugins",
      title: "Block Menu Plugins",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/block-context-menu.json","https://platejs.org/r/block-selection-plugins.json"],
      files: [{
        path: "src/registry/components/editor/plugins/block-menu-plugins.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/block-menu-plugins.ts")),
      source: "",
      meta: undefined,
    },
    "comments-plugin": {
      name: "comments-plugin",
      title: "Comments Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/discussion-plugin.json"],
      files: [{
        path: "src/registry/components/editor/plugins/comments-plugin.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/comments-plugin.tsx")),
      source: "",
      meta: undefined,
    },
    "skip-mark-plugin": {
      name: "skip-mark-plugin",
      title: "Skip Mark Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/skip-mark-plugin.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/skip-mark-plugin.ts")),
      source: "",
      meta: undefined,
    },
    "suggestion-plugin": {
      name: "suggestion-plugin",
      title: "Suggestion Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/discussion-plugin.json"],
      files: [{
        path: "src/registry/components/editor/plugins/suggestion-plugin.tsx",
        type: "registry:component",
        target: ""
      },{
        path: "src/registry/ui/suggestion-line-break.tsx",
        type: "registry:ui",
        target: ""
      },{
        path: "src/registry/ui/suggestion-toolbar-button.tsx",
        type: "registry:ui",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/suggestion-plugin.tsx")),
      source: "",
      meta: undefined,
    },
    "cursor-overlay-plugin": {
      name: "cursor-overlay-plugin",
      title: "Cursor Overlay Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/cursor-overlay.json"],
      files: [{
        path: "src/registry/components/editor/plugins/cursor-overlay-plugin.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/cursor-overlay-plugin.tsx")),
      source: "",
      meta: undefined,
    },
    "markdown-plugin": {
      name: "markdown-plugin",
      title: "Markdown Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: [],
      files: [{
        path: "src/registry/components/editor/plugins/markdown-plugin.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/markdown-plugin.tsx")),
      source: "",
      meta: undefined,
    },
    "copilot-plugins": {
      name: "copilot-plugins",
      title: "Copilot Plugins",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/ghost-text.json"],
      files: [{
        path: "src/registry/components/editor/plugins/copilot-plugins.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/copilot-plugins.tsx")),
      source: "",
      meta: undefined,
    },
    "delete-plugins": {
      name: "delete-plugins",
      title: "Delete Plugins",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/delete-plugins.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/delete-plugins.ts")),
      source: "",
      meta: undefined,
    },
    "dnd-plugins": {
      name: "dnd-plugins",
      title: "Dnd Plugins",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/draggable.json"],
      files: [{
        path: "src/registry/components/editor/plugins/dnd-plugins.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/dnd-plugins.tsx")),
      source: "",
      meta: undefined,
    },
    "exit-break-plugin": {
      name: "exit-break-plugin",
      title: "Exit Break Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/exit-break-plugin.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/exit-break-plugin.ts")),
      source: "",
      meta: undefined,
    },
    "fixed-toolbar-plugin": {
      name: "fixed-toolbar-plugin",
      title: "Fixed Toolbar Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/fixed-toolbar.json","https://platejs.org/r/fixed-toolbar-buttons.json"],
      files: [{
        path: "src/registry/components/editor/plugins/fixed-toolbar-plugin.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/fixed-toolbar-plugin.tsx")),
      source: "",
      meta: undefined,
    },
    "fixed-toolbar-list-plugin": {
      name: "fixed-toolbar-list-plugin",
      title: "Fixed Toolbar List Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/fixed-toolbar.json","https://platejs.org/r/fixed-toolbar-buttons.json"],
      files: [{
        path: "src/registry/components/editor/plugins/fixed-toolbar-list-plugin.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/fixed-toolbar-list-plugin.tsx")),
      source: "",
      meta: undefined,
    },
    "floating-toolbar-plugin": {
      name: "floating-toolbar-plugin",
      title: "Floating Toolbar Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/floating-toolbar.json","https://platejs.org/r/floating-toolbar-buttons.json"],
      files: [{
        path: "src/registry/components/editor/plugins/floating-toolbar-plugin.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/floating-toolbar-plugin.tsx")),
      source: "",
      meta: undefined,
    },
    "indent-list-plugins": {
      name: "indent-list-plugins",
      title: "Indent List Plugins",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/indent-fire-marker.json","https://platejs.org/r/indent-todo-marker.json"],
      files: [{
        path: "src/registry/components/editor/plugins/indent-list-plugins.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/indent-list-plugins.ts")),
      source: "",
      meta: undefined,
    },
    "line-height-plugin": {
      name: "line-height-plugin",
      title: "Line Height Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/line-height-plugin.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/line-height-plugin.ts")),
      source: "",
      meta: undefined,
    },
    "link-plugin": {
      name: "link-plugin",
      title: "Link Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/link-floating-toolbar.json"],
      files: [{
        path: "src/registry/components/editor/plugins/link-plugin.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/link-plugin.tsx")),
      source: "",
      meta: undefined,
    },
    "media-plugins": {
      name: "media-plugins",
      title: "Media Plugins",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/image-preview.json","https://platejs.org/r/media-upload-toast.json"],
      files: [{
        path: "src/registry/components/editor/plugins/media-plugins.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/media-plugins.tsx")),
      source: "",
      meta: undefined,
    },
    "mention-plugin": {
      name: "mention-plugin",
      title: "Mention Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/mention-plugin.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/mention-plugin.ts")),
      source: "",
      meta: undefined,
    },
    "reset-block-type-plugin": {
      name: "reset-block-type-plugin",
      title: "Reset Block Type Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/reset-block-type-plugin.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/reset-block-type-plugin.ts")),
      source: "",
      meta: undefined,
    },
    "soft-break-plugin": {
      name: "soft-break-plugin",
      title: "Soft Break Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/soft-break-plugin.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/soft-break-plugin.ts")),
      source: "",
      meta: undefined,
    },
    "tabbable-plugin": {
      name: "tabbable-plugin",
      title: "Tabbable Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/tabbable-plugin.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/tabbable-plugin.ts")),
      source: "",
      meta: undefined,
    },
    "table-plugin": {
      name: "table-plugin",
      title: "Table Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/table-plugin.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/table-plugin.ts")),
      source: "",
      meta: undefined,
    },
    "toc-plugin": {
      name: "toc-plugin",
      title: "Toc Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plugins/toc-plugin.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/toc-plugin.ts")),
      source: "",
      meta: undefined,
    },
    "discussion-plugin": {
      name: "discussion-plugin",
      title: "Discussion Plugin",
      description: "",
      type: "registry:component",
      registryDependencies: ["https://platejs.org/r/block-discussion.json"],
      files: [{
        path: "src/registry/components/editor/plugins/discussion-plugin.tsx",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plugins/discussion-plugin.tsx")),
      source: "",
      meta: undefined,
    },
    "use-chat": {
      name: "use-chat",
      title: "Use Chat",
      description: "",
      type: "registry:component",
      registryDependencies: [],
      files: [{
        path: "src/registry/components/editor/use-chat.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/use-chat.ts")),
      source: "",
      meta: undefined,
    },
    "transforms": {
      name: "transforms",
      title: "Transforms",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/transforms.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/transforms.ts")),
      source: "",
      meta: undefined,
    },
    "plate-types": {
      name: "plate-types",
      title: "Plate Types",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plate-types.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plate-types.ts")),
      source: "",
      meta: undefined,
    },
    "plate-list-types": {
      name: "plate-list-types",
      title: "Plate List Types",
      description: "",
      type: "registry:component",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/components/editor/plate-list-types.ts",
        type: "registry:component",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/components/editor/plate-list-types.ts")),
      source: "",
      meta: undefined,
    },
    "api-ai": {
      name: "api-ai",
      title: "Api Ai",
      description: "",
      type: "registry:lib",
      registryDependencies: [],
      files: [{
        path: "src/registry/app/api/ai/command/route.ts",
        type: "registry:lib",
        target: "app/api/ai/command/route.ts"
      },{
        path: "src/registry/app/api/ai/copilot/route.ts",
        type: "registry:lib",
        target: "app/api/ai/copilot/route.ts"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/app/api/ai/command/route.ts")),
      source: "",
      meta: undefined,
    },
    "api-uploadthing": {
      name: "api-uploadthing",
      title: "Api Uploadthing",
      description: "",
      type: "registry:lib",
      registryDependencies: [],
      files: [{
        path: "src/registry/app/api/uploadthing/route.ts",
        type: "registry:lib",
        target: "app/api/uploadthing/route.ts"
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/app/api/uploadthing/route.ts")),
      source: "",
      meta: undefined,
    },
    "editor-ai": {
      name: "editor-ai",
      title: "Editor Ai",
      description: "An AI editor",
      type: "registry:block",
      registryDependencies: ["https://platejs.org/r/api-ai.json","https://platejs.org/r/api-uploadthing.json","https://platejs.org/r/plate-types.json","https://platejs.org/r/editor-plugins.json","https://platejs.org/r/copilot-plugins.json","https://platejs.org/r/floating-toolbar-plugin.json","https://platejs.org/r/fixed-toolbar-plugin.json","https://platejs.org/r/ai-menu.json","https://platejs.org/r/ghost-text.json","https://platejs.org/r/block-discussion.json","https://platejs.org/r/cursor-overlay.json","https://platejs.org/r/editor.json","https://platejs.org/r/block-context-menu.json","https://platejs.org/r/ai-leaf.json","https://platejs.org/r/blockquote-element.json","https://platejs.org/r/code-block-element.json","https://platejs.org/r/code-leaf.json","https://platejs.org/r/code-line-element.json","https://platejs.org/r/code-syntax-leaf.json","https://platejs.org/r/column-element.json","https://platejs.org/r/column-group-element.json","https://platejs.org/r/comment-leaf.json","https://platejs.org/r/suggestion-leaf.json","https://platejs.org/r/date-element.json","https://platejs.org/r/draggable.json","https://platejs.org/r/equation-element.json","https://platejs.org/r/inline-equation-element.json","https://platejs.org/r/emoji-input-element.json","https://platejs.org/r/excalidraw-element.json","https://platejs.org/r/heading-element.json","https://platejs.org/r/highlight-leaf.json","https://platejs.org/r/hr-element.json","https://platejs.org/r/image-element.json","https://platejs.org/r/kbd-leaf.json","https://platejs.org/r/link-element.json","https://platejs.org/r/media-audio-element.json","https://platejs.org/r/media-embed-element.json","https://platejs.org/r/media-file-element.json","https://platejs.org/r/media-placeholder-element.json","https://platejs.org/r/media-video-element.json","https://platejs.org/r/mention-element.json","https://platejs.org/r/mention-input-element.json","https://platejs.org/r/paragraph-element.json","https://platejs.org/r/placeholder.json","https://platejs.org/r/slash-input-element.json","https://platejs.org/r/table-cell-element.json","https://platejs.org/r/table-element.json","https://platejs.org/r/table-row-element.json","https://platejs.org/r/toc-element.json","https://platejs.org/r/toggle-element.json"],
      files: [{
        path: "src/registry/blocks/editor-ai/page.tsx",
        type: "registry:page",
        target: "app/editor/page.tsx"
      },{
        path: "src/registry/blocks/editor-ai/components/editor/plate-editor.tsx",
        type: "registry:component",
        target: "components/editor/plate-editor.tsx"
      },{
        path: "src/registry/blocks/editor-ai/components/editor/use-create-editor.ts",
        type: "registry:component",
        target: "components/editor/use-create-editor.ts"
      },{
        path: "src/registry/components/editor/settings.tsx",
        type: "registry:component",
        target: "components/editor/settings.tsx"
      }],
      categories: ["Editors"],
      component: React.lazy(() => import("@/registry/blocks/editor-ai/page.tsx")),
      source: "src/__registry__/default/blocks/editor-ai/page.tsx",
      meta: undefined,
    },
    "editor-select": {
      name: "editor-select",
      title: "Editor Select",
      description: "A multi-select editor",
      type: "registry:block",
      registryDependencies: ["https://platejs.org/r/select-editor-demo.json"],
      files: [{
        path: "src/registry/blocks/editor-select/page.tsx",
        type: "registry:page",
        target: "app/editor/page.tsx"
      }],
      categories: ["Editors"],
      component: React.lazy(() => import("@/registry/blocks/editor-select/page.tsx")),
      source: "src/__registry__/default/blocks/editor-select/page.tsx",
      meta: undefined,
    },
    "editor-basic": {
      name: "editor-basic",
      title: "Editor Basic",
      description: "A basic editor",
      type: "registry:block",
      registryDependencies: ["https://platejs.org/r/editor.json"],
      files: [{
        path: "src/registry/blocks/editor-basic/page.tsx",
        type: "registry:page",
        target: "app/editor/page.tsx"
      },{
        path: "src/registry/blocks/editor-basic/components/editor/plate-editor.tsx",
        type: "registry:component",
        target: "components/editor/plate-editor.tsx"
      },{
        path: "src/registry/blocks/editor-basic/components/editor/use-create-editor.ts",
        type: "registry:component",
        target: "components/editor/use-create-editor.ts"
      }],
      categories: ["Editors"],
      component: React.lazy(() => import("@/registry/blocks/editor-basic/page.tsx")),
      source: "src/__registry__/default/blocks/editor-basic/page.tsx",
      meta: undefined,
    },
    "slate-to-html": {
      name: "slate-to-html",
      title: "Slate To Html",
      description: "",
      type: "registry:block",
      registryDependencies: [],
      files: [{
        path: "src/registry/blocks/slate-to-html/page.tsx",
        type: "registry:page",
        target: "app/html/page.tsx"
      },{
        path: "src/registry/components/editor/slate-to-html.tsx",
        type: "registry:component",
        target: "components/editor/slate-to-html.tsx"
      }],
      categories: ["Serializers"],
      component: undefined,
      source: "src/__registry__/default/blocks/slate-to-html/page.tsx",
      meta: {"rsc":true},
    },
    "uploadthing": {
      name: "uploadthing",
      title: "Uploadthing",
      description: "",
      type: "registry:lib",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/lib/uploadthing.ts",
        type: "registry:lib",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/lib/uploadthing.ts")),
      source: "",
      meta: undefined,
    },
    "use-debounce": {
      name: "use-debounce",
      title: "Use Debounce",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/hooks/use-debounce.ts",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/hooks/use-debounce.ts")),
      source: "",
      meta: undefined,
    },
    "use-mounted": {
      name: "use-mounted",
      title: "Use Mounted",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/hooks/use-mounted.ts",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/hooks/use-mounted.ts")),
      source: "",
      meta: undefined,
    },
    "use-is-touch-device": {
      name: "use-is-touch-device",
      title: "Use Is Touch Device",
      description: "",
      type: "registry:hook",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/hooks/use-is-touch-device.ts",
        type: "registry:hook",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/hooks/use-is-touch-device.ts")),
      source: "",
      meta: undefined,
    },
    "ai-demo": {
      name: "ai-demo",
      title: "AI",
      description: "AI menu with commands, streaming responses in a preview or directly into the editor.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/basic-nodes-plugins.json","https://platejs.org/r/block-selection-plugins.json","https://platejs.org/r/indent-list-plugins.json","https://platejs.org/r/link-plugin.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/ai-plugins.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/ai-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/ai","title":"AI"}]},
    },
    "align-demo": {
      name: "align-demo",
      title: "Align",
      description: "Text alignment controls for blocks.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/align-plugin.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/align-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "autoformat-demo": {
      name: "autoformat-demo",
      title: "Autoformat",
      description: "Apply formatting automatically using shortcodes.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/autoformat-plugin.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/autoformat-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "basic-elements-demo": {
      name: "basic-elements-demo",
      title: "Basic Elements",
      description: "Basic block elements like headings, quotes, and code blocks.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/basic-nodes-plugins.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/basic-elements-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/basic-elements","title":"Basic Elements"}]},
    },
    "basic-marks-demo": {
      name: "basic-marks-demo",
      title: "Basic Marks",
      description: "Basic text formatting marks like bold, italic, and underline.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/basic-nodes-plugins.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/basic-marks-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/basic-marks","title":"Basic Marks"}]},
    },
    "basic-nodes-demo": {
      name: "basic-nodes-demo",
      title: "Basic Nodes",
      description: "Basic block elements and text marks.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/basic-nodes-plugins.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/basic-nodes-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/basic-elements-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/basic-marks-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/basic-elements","title":"Basic Elements"}],"keywords":["element","leaf"]},
    },
    "block-menu-demo": {
      name: "block-menu-demo",
      title: "Block Menu",
      description: "Block-level context menu with formatting options.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/block-menu-plugins.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/block-menu-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/block-menu","title":"Block Menu"}]},
    },
    "block-selection-demo": {
      name: "block-selection-demo",
      title: "Block Selection",
      description: "Visual block selection with keyboard support.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/block-selection-plugins.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/block-selection-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "column-demo": {
      name: "column-demo",
      title: "Column",
      description: "Column layout.",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/column-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/column","title":"Column"}]},
    },
    "comments-demo": {
      name: "comments-demo",
      title: "Comments",
      description: "Adding and displaying comments within content.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/comments-plugin.json","https://platejs.org/r/discussion-plugin.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/comments-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/comments","title":"Comments"}]},
    },
    "copilot-demo": {
      name: "copilot-demo",
      title: "Copilot",
      description: "Renders AI ghost text suggestions at the cursor position.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/copilot-plugins.json"],
      files: [{
        path: "src/registry/examples/copilot-demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/copilot-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/copilot-demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/copilot","title":"Copilot"}]},
    },
    "cursor-overlay-demo": {
      name: "cursor-overlay-demo",
      title: "Cursor Overlay",
      description: "Visual indicator for cursor position within the editor.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/cursor-overlay-plugin.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/cursor-overlay-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "date-demo": {
      name: "date-demo",
      title: "Date",
      description: "Inline date elements with calendar selection interface.",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/date-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/date","title":"Date"}]},
    },
    "dnd-demo": {
      name: "dnd-demo",
      title: "Drag & Drop",
      description: "Implements draggable functionality for editor blocks, including drag handles and drop indicators.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/dnd-plugins.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/dnd-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/dnd","title":"Drag & Drop"}]},
    },
    "emoji-demo": {
      name: "emoji-demo",
      title: "Emoji",
      description: "Emoji insertion via toolbar or colon-triggered combobox.",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/emoji-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/emoji","title":"Emoji"}]},
    },
    "equation-demo": {
      name: "equation-demo",
      title: "Equation",
      description: "LaTeX equations with inline and block formats.",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/emoji-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/equation","title":"Equation"}]},
    },
    "exit-break-demo": {
      name: "exit-break-demo",
      title: "Exit Break",
      description: "Exit a large block using a shortcut.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/exit-break-plugin.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/exit-break-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "excalidraw-demo": {
      name: "excalidraw-demo",
      title: "Excalidraw",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/excalidraw-demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/excalidraw-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/excalidraw-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "find-replace-demo": {
      name: "find-replace-demo",
      title: "Find Replace",
      description: "Find and replace functionality in text.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/fixed-toolbar.json","https://platejs.org/r/input.json","https://platejs.org/r/search-highlight-leaf.json"],
      files: [{
        path: "src/registry/examples/find-replace-demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/find-replace-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/find-replace-demo.tsx")),
      source: "",
      meta: {},
    },
    "floating-toolbar-demo": {
      name: "floating-toolbar-demo",
      title: "Floating Toolbar",
      description: "Floating toolbar with text formatting and AI assistance options.",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/floating-toolbar-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/ai","title":"AI"}]},
    },
    "font-demo": {
      name: "font-demo",
      title: "Font",
      description: "Color picker for text and background colors.",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/font-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "highlight-demo": {
      name: "highlight-demo",
      title: "Highlight",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/highlight-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: undefined,
    },
    "horizontal-rule-demo": {
      name: "horizontal-rule-demo",
      title: "Horizontal Rule",
      description: "Horizontal lines for visually separating content sections.",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/horizontal-rule-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/horizontal-rule","title":"Horizontal Rule"}]},
    },
    "indent-demo": {
      name: "indent-demo",
      title: "Indent",
      description: "",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/indent-list-plugins.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/indent-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: undefined,
    },
    "indent-list-demo": {
      name: "indent-list-demo",
      title: "Indent List",
      description: "Turn any block into a list item.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/indent-list-plugins.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/indent-list-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/indent","title":"Indent"},{"route":"/docs/indent-list","title":"Indent List"}]},
    },
    "kbd-demo": {
      name: "kbd-demo",
      title: "Kbd",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/kbd-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: undefined,
    },
    "line-height-demo": {
      name: "line-height-demo",
      title: "Line Height",
      description: "Line height adjustment controls.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/line-height-plugin.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/line-height-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "link-demo": {
      name: "link-demo",
      title: "Link",
      description: "Hyperlinks with toolbar insertion and URL pasting support.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/link-plugin.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/link-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/link","title":"Link"}]},
    },
    "list-demo": {
      name: "list-demo",
      title: "List",
      description: "List creation and formatting.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/autoformat-list-plugin.json","https://platejs.org/r/list-element.json","https://platejs.org/r/todo-list-element.json"],
      files: [{
        path: "src/registry/examples/list-demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/list-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/fixed-toolbar-list-plugin.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/ui/fixed-toolbar-list-buttons.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor-list.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/list-demo.tsx")),
      source: "",
      meta: {},
    },
    "media-demo": {
      name: "media-demo",
      title: "Media",
      description: "Media embedding and management.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/media-plugins.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/media-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "mention-demo": {
      name: "mention-demo",
      title: "Mention",
      description: "Mention functionality for referencing users or entities.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/mention-plugin.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/mention-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/mention","title":"Mention"}]},
    },
    "reset-node-demo": {
      name: "reset-node-demo",
      title: "Reset Node",
      description: "",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/reset-block-type-plugin.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/basic-elements-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: undefined,
    },
    "csv-demo": {
      name: "csv-demo",
      title: "Serializing CSV",
      description: "Copy paste from CSV to Slate.",
      type: "registry:example",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/deserialize-csv-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "docx-demo": {
      name: "docx-demo",
      title: "Serializing Docx",
      description: "Copy paste from DOCX to Slate.",
      type: "registry:example",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/deserialize-docx-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "html-demo": {
      name: "html-demo",
      title: "Serializing HTML",
      description: "Copy paste from HTML to Slate.",
      type: "registry:example",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/deserialize-html-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "markdown-demo": {
      name: "markdown-demo",
      title: "Serializing Markdown",
      description: "Copy paste from Markdown to Slate.",
      type: "registry:example",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/deserialize-md-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "select-editor-demo": {
      name: "select-editor-demo",
      title: "Select Editor Form",
      description: "A form with a select editor component for managing labels.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/form.json","https://platejs.org/r/button.json","https://platejs.org/r/select-editor.json"],
      files: [{
        path: "src/registry/examples/select-editor-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/select-editor-demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/multi-select"}]},
    },
    "single-line-demo": {
      name: "single-line-demo",
      title: "Single Line",
      description: "Restrict the editor to a single block.",
      type: "registry:example",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/examples/single-line-demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/single-line-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/single-line-demo.tsx")),
      source: "",
      meta: {},
    },
    "slash-command-demo": {
      name: "slash-command-demo",
      title: "Slash Command",
      description: "Slash command menu for quick insertion of various content types.",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/slash-command-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/slash-command","title":"Slash Command"}]},
    },
    "soft-break-demo": {
      name: "soft-break-demo",
      title: "Soft Break",
      description: "Insert line breaks within a block of text without starting a new block.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/soft-break-plugin.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/soft-break-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "tabbable-demo": {
      name: "tabbable-demo",
      title: "Tabbable",
      description: "",
      type: "registry:example",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/examples/tabbable-demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/tabbable-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/tabbable-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "table-demo": {
      name: "table-demo",
      title: "Table",
      description: "Customizable tables with resizable columns and row merging options.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/table-plugin.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/table-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/table","title":"Table"}]},
    },
    "table-nomerge-demo": {
      name: "table-nomerge-demo",
      title: "Table Nomerge",
      description: "",
      type: "registry:example",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/examples/table-nomerge-demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/table-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/table-nomerge-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "toc-demo": {
      name: "toc-demo",
      title: "Table of Contents",
      description: "Dynamic TOC with in-document element for easy navigation.",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/toc-plugin.json"],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/examples/values/toc-value.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {"docs":[{"route":"/docs/toc","title":"TOC"}]},
    },
    "toggle-demo": {
      name: "toggle-demo",
      title: "Toggle",
      description: "Collapsible content blocks.",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: {},
    },
    "demo": {
      name: "demo",
      title: "Demo",
      description: "",
      type: "registry:example",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: undefined,
    },
    "pro-iframe-demo": {
      name: "pro-iframe-demo",
      title: "Pro Iframe",
      description: "",
      type: "registry:example",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/examples/pro-iframe-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/pro-iframe-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "potion-iframe-demo": {
      name: "potion-iframe-demo",
      title: "Potion Iframe",
      description: "",
      type: "registry:example",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/examples/potion-iframe-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/potion-iframe-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "editor-default": {
      name: "editor-default",
      title: "Default",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/editor-default.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/editor-default.tsx")),
      source: "",
      meta: {},
    },
    "editor-disabled": {
      name: "editor-disabled",
      title: "Disabled",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/editor-disabled.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/editor-disabled.tsx")),
      source: "",
      meta: {},
    },
    "editor-full-width": {
      name: "editor-full-width",
      title: "Full Width",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/editor-full-width.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/editor-full-width.tsx")),
      source: "",
      meta: {},
    },
    "basic-editor-default-demo": {
      name: "basic-editor-default-demo",
      title: "Basic Editor Default",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/basic-editor-default-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/basic-editor-default-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "controlled-demo": {
      name: "controlled-demo",
      title: "Controlled",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/controlled-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/controlled-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "basic-editor-styling-demo": {
      name: "basic-editor-styling-demo",
      title: "Basic Editor Styling",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/basic-editor-styling-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/basic-editor-styling-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "basic-editor-handler-demo": {
      name: "basic-editor-handler-demo",
      title: "Basic Editor Handler",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/basic-editor-handler-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/basic-editor-handler-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "basic-editor-value-demo": {
      name: "basic-editor-value-demo",
      title: "Basic Editor Value",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/basic-editor-value-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/basic-editor-value-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "basic-plugins-components-demo": {
      name: "basic-plugins-components-demo",
      title: "Basic Plugins Components",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/basic-plugins-components-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/basic-plugins-components-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "basic-plugins-default-demo": {
      name: "basic-plugins-default-demo",
      title: "Basic Plugins Default",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/basic-plugins-default-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/basic-plugins-default-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "editable-voids-demo": {
      name: "editable-voids-demo",
      title: "Editable Voids",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/editable-voids-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/editable-voids-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "hundreds-blocks-demo": {
      name: "hundreds-blocks-demo",
      title: "Hundreds Blocks",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/hundreds-blocks-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/hundreds-blocks-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "hundreds-editors-demo": {
      name: "hundreds-editors-demo",
      title: "Hundreds Editors",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/hundreds-editors-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/hundreds-editors-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "mode-toggle": {
      name: "mode-toggle",
      title: "Mode Toggle",
      description: "",
      type: "registry:example",
      registryDependencies: undefined,
      files: [{
        path: "src/registry/examples/mode-toggle.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/mode-toggle.tsx")),
      source: "",
      meta: undefined,
    },
    "multiple-editors-demo": {
      name: "multiple-editors-demo",
      title: "Multiple Editors",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/multiple-editors-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/multiple-editors-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "version-history-demo": {
      name: "version-history-demo",
      title: "Version History",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/version-history-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/version-history-demo.tsx")),
      source: "",
      meta: undefined,
    },
    "playground-demo": {
      name: "playground-demo",
      title: "Playground",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/demo.tsx",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/use-create-editor.ts",
        type: "registry:example",
        target: ""
      },{
        path: "src/registry/components/editor/plugins/editor-plugins.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/demo.tsx")),
      source: "",
      meta: undefined,
    },
    "preview-markdown-demo": {
      name: "preview-markdown-demo",
      title: "Preview Markdown",
      description: "",
      type: "registry:example",
      registryDependencies: [],
      files: [{
        path: "src/registry/examples/preview-markdown-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/preview-markdown-demo.tsx")),
      source: "",
      meta: {},
    },
    "markdown-to-slate-demo": {
      name: "markdown-to-slate-demo",
      title: "Markdown To Slate",
      description: "",
      type: "registry:example",
      registryDependencies: ["https://platejs.org/r/use-debounce.json"],
      files: [{
        path: "src/registry/examples/markdown-to-slate-demo.tsx",
        type: "registry:example",
        target: ""
      }],
      categories: undefined,
      component: React.lazy(() => import("@/registry/examples/markdown-to-slate-demo.tsx")),
      source: "",
      meta: {},
    },
  },
}
