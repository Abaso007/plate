{
  "dependencies": [
    "@udecode/plate-block-quote",
    "@udecode/plate-heading",
    "@udecode/plate-paragraph"
  ],
  "files": [
    {
      "content": "import React from 'react';\n\nimport type { DropdownMenuProps } from '@radix-ui/react-dropdown-menu';\n\nimport { ELEMENT_BLOCKQUOTE } from '@udecode/plate-block-quote';\nimport {\n  focusEditor,\n  insertEmptyElement,\n  useEditorRef,\n} from '@udecode/plate-common';\nimport { ELEMENT_H1, ELEMENT_H2, ELEMENT_H3 } from '@udecode/plate-heading';\nimport { ELEMENT_PARAGRAPH } from '@udecode/plate-paragraph';\n\nimport { Icons } from '@/components/icons';\n\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n  useOpenState,\n} from './dropdown-menu';\nimport { ToolbarButton } from './toolbar';\n\nconst items = [\n  {\n    items: [\n      {\n        description: 'Paragraph',\n        icon: Icons.paragraph,\n        label: 'Paragraph',\n        value: ELEMENT_PARAGRAPH,\n      },\n      {\n        description: 'Heading 1',\n        icon: Icons.h1,\n        label: 'Heading 1',\n        value: ELEMENT_H1,\n      },\n      {\n        description: 'Heading 2',\n        icon: Icons.h2,\n        label: 'Heading 2',\n        value: ELEMENT_H2,\n      },\n      {\n        description: 'Heading 3',\n        icon: Icons.h3,\n        label: 'Heading 3',\n        value: ELEMENT_H3,\n      },\n      {\n        description: 'Quote (⌘+⇧+.)',\n        icon: Icons.blockquote,\n        label: 'Quote',\n        value: ELEMENT_BLOCKQUOTE,\n      },\n      // {\n      //   value: ELEMENT_TABLE,\n      //   label: 'Table',\n      //   description: 'Table',\n      //   icon: Icons.table,\n      // },\n      // {\n      //   value: 'ul',\n      //   label: 'Bulleted list',\n      //   description: 'Bulleted list',\n      //   icon: Icons.ul,\n      // },\n      // {\n      //   value: 'ol',\n      //   label: 'Numbered list',\n      //   description: 'Numbered list',\n      //   icon: Icons.ol,\n      // },\n      // {\n      //   value: ELEMENT_HR,\n      //   label: 'Divider',\n      //   description: 'Divider (---)',\n      //   icon: Icons.hr,\n      // },\n    ],\n    label: 'Basic blocks',\n  },\n  // {\n  //   label: 'Media',\n  //   items: [\n  //     {\n  //       value: ELEMENT_CODE_BLOCK,\n  //       label: 'Code',\n  //       description: 'Code (```)',\n  //       icon: Icons.codeblock,\n  //     },\n  //     {\n  //       value: ELEMENT_IMAGE,\n  //       label: 'Image',\n  //       description: 'Image',\n  //       icon: Icons.image,\n  //     },\n  //     {\n  //       value: ELEMENT_MEDIA_EMBED,\n  //       label: 'Embed',\n  //       description: 'Embed',\n  //       icon: Icons.embed,\n  //     },\n  //     {\n  //       value: ELEMENT_EXCALIDRAW,\n  //       label: 'Excalidraw',\n  //       description: 'Excalidraw',\n  //       icon: Icons.excalidraw,\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Inline',\n  //   items: [\n  //     {\n  //       value: ELEMENT_LINK,\n  //       label: 'Link',\n  //       description: 'Link',\n  //       icon: Icons.link,\n  //     },\n  //   ],\n  // },\n];\n\nexport function InsertDropdownMenu(props: DropdownMenuProps) {\n  const editor = useEditorRef();\n  const openState = useOpenState();\n\n  return (\n    <DropdownMenu modal={false} {...openState} {...props}>\n      <DropdownMenuTrigger asChild>\n        <ToolbarButton isDropdown pressed={openState.open} tooltip=\"Insert\">\n          <Icons.add />\n        </ToolbarButton>\n      </DropdownMenuTrigger>\n\n      <DropdownMenuContent\n        align=\"start\"\n        className=\"flex max-h-[500px] min-w-0 flex-col gap-0.5 overflow-y-auto\"\n      >\n        {items.map(({ items: nestedItems, label }, index) => (\n          <React.Fragment key={label}>\n            {index !== 0 && <DropdownMenuSeparator />}\n\n            <DropdownMenuLabel>{label}</DropdownMenuLabel>\n            {nestedItems.map(\n              ({ icon: Icon, label: itemLabel, value: type }) => (\n                <DropdownMenuItem\n                  className=\"min-w-[180px]\"\n                  key={type}\n                  onSelect={() => {\n                    switch (type) {\n                      // case ELEMENT_CODE_BLOCK: {\n                      //   insertEmptyCodeBlock(editor);\n                      //\n                      //   break;\n                      // }\n                      // case ELEMENT_IMAGE: {\n                      //   await insertMedia(editor, { type: ELEMENT_IMAGE });\n                      //\n                      //   break;\n                      // }\n                      // case ELEMENT_MEDIA_EMBED: {\n                      //   await insertMedia(editor, {\n                      //     type: ELEMENT_MEDIA_EMBED,\n                      //   });\n                      //\n                      //   break;\n                      // }\n                      // case 'ul':\n                      // case 'ol': {\n                      //   insertEmptyElement(editor, ELEMENT_PARAGRAPH, {\n                      //     select: true,\n                      //     nextBlock: true,\n                      //   });\n                      //\n                      //   if (settingsStore.get.checkedId(KEY_LIST_STYLE_TYPE)) {\n                      //     toggleIndentList(editor, {\n                      //       listStyleType: type === 'ul' ? 'disc' : 'decimal',\n                      //     });\n                      //   } else if (settingsStore.get.checkedId('list')) {\n                      //     toggleList(editor, { type });\n                      //   }\n                      //\n                      //   break;\n                      // }\n                      // case ELEMENT_TABLE: {\n                      //   insertTable(editor);\n                      //\n                      //   break;\n                      // }\n                      // case ELEMENT_LINK: {\n                      //   triggerFloatingLink(editor, { focused: true });\n                      //\n                      //   break;\n                      // }\n                      default: {\n                        insertEmptyElement(editor, type, {\n                          nextBlock: true,\n                          select: true,\n                        });\n                      }\n                    }\n\n                    focusEditor(editor);\n                  }}\n                >\n                  <Icon className=\"mr-2 size-5\" />\n                  {itemLabel}\n                </DropdownMenuItem>\n              )\n            )}\n          </React.Fragment>\n        ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n",
      "name": "insert-dropdown-menu.tsx"
    }
  ],
  "name": "insert-dropdown-menu",
  "registryDependencies": [
    "dropdown-menu",
    "toolbar"
  ],
  "type": "components:plate-ui"
}