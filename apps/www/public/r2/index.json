[
  {
    "name": "ai-menu",
    "type": "registry:ui",
    "title": "AI Menu",
    "description": "A menu for AI-powered content generation and insertion.",
    "dependencies": [
      "@udecode/plate-ai",
      "@udecode/plate-markdown",
      "@udecode/plate-selection",
      "ai",
      "@faker-js/faker"
    ],
    "registryDependencies": [
      "https://platejs.org/r/use-chat.json",
      "https://platejs.org/r/command.json",
      "https://platejs.org/r/popover.json",
      "https://platejs.org/r/editor.json"
    ],
    "files": [
      {
        "path": "plate-ui/ai-menu.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/ai-loading-bar.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/ai-anchor-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/ai-menu-items.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/ai-chat-editor.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/ai",
          "title": "AI"
        },
        {
          "route": "https://pro.platejs.org/docs/components/ai-menu",
          "title": "AI Menu"
        }
      ],
      "examples": ["ai-demo", "ai-pro"],
      "label": "New"
    }
  },
  {
    "name": "ai-toolbar-button",
    "type": "registry:ui",
    "title": "AI Toolbar Button",
    "description": "A toolbar button for accessing AI features.",
    "dependencies": ["@udecode/plate-ai"],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/ai-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/ai",
          "title": "AI"
        },
        {
          "route": "https://pro.platejs.org/docs/components/ai-toolbar-button"
        }
      ],
      "examples": ["ai-demo", "floating-toolbar-demo", "ai-pro"],
      "label": "New"
    }
  },
  {
    "name": "align-dropdown-menu",
    "type": "registry:ui",
    "title": "Align Dropdown Menu",
    "description": "A dropdown menu for text alignment controls.",
    "dependencies": [
      "@udecode/plate-alignment",
      "@radix-ui/react-dropdown-menu"
    ],
    "registryDependencies": [
      "https://platejs.org/r/dropdown-menu.json",
      "https://platejs.org/r/toolbar.json"
    ],
    "files": [
      {
        "path": "plate-ui/align-dropdown-menu.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/alignment"
        }
      ],
      "examples": ["align-demo"]
    }
  },
  {
    "name": "block-context-menu",
    "type": "registry:ui",
    "title": "Block Context Menu",
    "description": "A context menu for block-level operations.",
    "dependencies": [
      "@udecode/plate-ai",
      "@udecode/plate-block-quote",
      "@udecode/plate-heading",
      "@udecode/plate-indent-list",
      "@udecode/plate-selection"
    ],
    "registryDependencies": [
      "https://platejs.org/r/calendar.json",
      "https://platejs.org/r/context-menu.json",
      "https://platejs.org/r/use-is-touch-device.json"
    ],
    "files": [
      {
        "path": "plate-ui/block-context-menu.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/block-menu"
        },
        {
          "route": "https://pro.platejs.org/docs/components/block-context-menu"
        }
      ],
      "examples": ["block-menu-demo", "block-menu-pro"],
      "label": "New"
    }
  },
  {
    "name": "block-selection",
    "type": "registry:ui",
    "title": "Block Selection",
    "description": "A visual overlay for selected blocks.",
    "dependencies": ["@udecode/plate-selection"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/block-selection.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/block-selection"
        },
        {
          "route": "https://pro.platejs.org/docs/components/block-selection"
        }
      ],
      "examples": ["block-selection-demo", "block-selection-pro"],
      "label": "New"
    }
  },
  {
    "name": "import-toolbar-button",
    "type": "registry:ui",
    "title": "Import Toolbar Button",
    "description": "A toolbar button to import editor content from a file.",
    "dependencies": ["use-file-picker"],
    "registryDependencies": [
      "https://platejs.org/r/dropdown-menu.json",
      "https://platejs.org/r/toolbar.json"
    ],
    "files": [
      {
        "path": "plate-ui/import-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/import",
          "title": "Import"
        }
      ],
      "examples": ["basic-nodes-demo"],
      "label": "New"
    }
  },
  {
    "name": "export-toolbar-button",
    "type": "registry:ui",
    "title": "Export Toolbar Button",
    "description": "A toolbar button to export editor content as PDF.",
    "dependencies": ["html2canvas-pro", "pdf-lib"],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/export-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/export",
          "title": "Export"
        }
      ],
      "examples": ["basic-nodes-demo"],
      "label": "New"
    }
  },
  {
    "name": "caption",
    "type": "registry:ui",
    "title": "Caption",
    "description": "A text field for adding captions to media elements.",
    "dependencies": ["@udecode/plate-caption"],
    "registryDependencies": ["https://platejs.org/r/button.json"],
    "files": [
      {
        "path": "plate-ui/caption.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/caption"
        },
        {
          "route": "https://pro.platejs.org/docs/components/caption"
        }
      ],
      "examples": ["media-demo"]
    }
  },
  {
    "name": "color-dropdown-menu",
    "type": "registry:ui",
    "title": "Color Dropdown Menu",
    "description": "A color picker with text and background color controls.",
    "dependencies": ["@udecode/plate-font", "@radix-ui/react-dropdown-menu"],
    "registryDependencies": [
      "https://platejs.org/r/dropdown-menu.json",
      "https://platejs.org/r/toolbar.json",
      "https://platejs.org/r/separator.json",
      "https://platejs.org/r/button.json",
      "https://platejs.org/r/tooltip.json"
    ],
    "files": [
      {
        "path": "plate-ui/color-constants.ts",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/color-dropdown-menu-items.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/color-dropdown-menu.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/color-input.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/color-picker.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/colors-custom.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/font"
        },
        {
          "route": "https://pro.platejs.org/docs/components/color-dropdown-menu"
        }
      ],
      "examples": ["font-demo"]
    }
  },
  {
    "name": "comment-toolbar-button",
    "type": "registry:ui",
    "title": "Comment Toolbar Button",
    "description": "A toolbar button for adding inline comments.",
    "dependencies": ["@udecode/plate-comments"],
    "registryDependencies": ["https://platejs.org/r/comments-plugin.json"],
    "files": [
      {
        "path": "plate-ui/comment-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/comments"
        },
        {
          "route": "https://pro.platejs.org/docs/components/comment-toolbar-button"
        }
      ],
      "examples": ["comments-demo", "floating-toolbar-demo", "comments-pro"]
    }
  },
  {
    "name": "block-discussion",
    "type": "registry:ui",
    "title": "Block Discussion",
    "description": "A popover interface for managing discussions: comments, replies, suggestions.",
    "dependencies": ["@udecode/plate-comments", "date-fns"],
    "registryDependencies": [
      "https://platejs.org/r/suggestion-plugin.json",
      "https://platejs.org/r/button.json",
      "https://platejs.org/r/popover.json",
      "https://platejs.org/r/avatar.json",
      "https://platejs.org/r/dropdown-menu.json",
      "https://platejs.org/r/editor.json",
      "https://platejs.org/r/ai-leaf.json",
      "https://platejs.org/r/avatar.json",
      "https://platejs.org/r/date-element.json",
      "https://platejs.org/r/emoji-input-element.json",
      "https://platejs.org/r/inline-equation-element.json",
      "https://platejs.org/r/link-element.json",
      "https://platejs.org/r/mention-element.json",
      "https://platejs.org/r/mention-input-element.json"
    ],
    "files": [
      {
        "path": "plate-ui/block-discussion.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/block-suggestion.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/comment.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/comment-create-form.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/comments"
        },
        {
          "route": "https://pro.platejs.org/docs/components/block-discussion"
        }
      ],
      "examples": ["comments-demo", "comments-pro"]
    }
  },
  {
    "name": "cursor-overlay",
    "type": "registry:ui",
    "title": "Cursor Overlay",
    "description": "A visual overlay for cursors and selections.",
    "dependencies": ["@udecode/plate-selection"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/cursor-overlay.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/cursor-overlay"
        },
        {
          "route": "https://pro.platejs.org/docs/components/cursor-overlay"
        }
      ],
      "examples": ["ai-demo"]
    }
  },
  {
    "name": "draggable",
    "type": "registry:ui",
    "title": "Draggable",
    "description": "A drag handle for moving editor blocks.",
    "dependencies": [
      "@udecode/plate-dnd",
      "@udecode/plate-selection",
      "@udecode/plate-block-quote",
      "@udecode/plate-excalidraw",
      "@udecode/plate-heading",
      "@udecode/plate-layout",
      "@udecode/plate-table",
      "@udecode/plate-toggle",
      "@udecode/plate-media",
      "react-dnd",
      "react-dnd-html5-backend"
    ],
    "registryDependencies": [
      "https://platejs.org/r/tooltip.json",
      "https://platejs.org/r/use-mounted.json"
    ],
    "files": [
      {
        "path": "plate-ui/draggable.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/dnd",
          "title": "Drag & Drop"
        },
        {
          "route": "https://pro.platejs.org/docs/components/draggable"
        }
      ],
      "examples": ["dnd-demo", "dnd-pro"],
      "usage": [
        "import { DndPlugin } from '@udecode/plate-dnd';\nimport { NodeIdPlugin } from '@udecode/plate-node-id';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';",
        "export function MyEditor() {\n  const editor = usePlateEditor({\n    plugins: [\n      // ...otherPlugins,\n      NodeIdPlugin,\n      DndPlugin.configure({ options: { enableScroller: true } }),\n    ],\n    components: {\n      // ...components\n    },\n  });\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Plate editor={editor}>\n        <PlateContent />\n      </Plate>\n    </DndProvider>\n  );\n}"
      ]
    }
  },
  {
    "name": "editor",
    "type": "registry:ui",
    "title": "Editor",
    "description": "A container for the editor content and styling.",
    "dependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/editor.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/editor-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "https://pro.platejs.org/docs/components/editor"
        }
      ],
      "examples": ["editor-default", "editor-disabled", "editor-full-width"]
    }
  },
  {
    "name": "select-editor",
    "type": "registry:ui",
    "title": "Select Editor",
    "description": "An editor to select tags.",
    "dependencies": ["fzf@0.5.2", "@udecode/plate-tag", "@udecode/cmdk"],
    "registryDependencies": [
      "https://platejs.org/r/editor",
      "command",
      "popover",
      "https://platejs.org/r/tag-element"
    ],
    "files": [
      {
        "path": "plate-ui/select-editor.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/multi-select"
        }
      ],
      "examples": ["select-editor-demo"],
      "label": "New"
    }
  },
  {
    "name": "emoji-dropdown-menu",
    "type": "registry:ui",
    "title": "Emoji Dropdown Menu",
    "description": "A dropdown menu for emoji selection and insertion.",
    "dependencies": [
      "@udecode/plate-emoji",
      "@emoji-mart/data@1.2.1",
      "@radix-ui/react-popover"
    ],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/emoji-dropdown-menu.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/emoji-icons.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/emoji-picker-content.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/emoji-picker-navigation.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/emoji-picker-preview.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/emoji-picker-search-and-clear.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/emoji-picker-search-bar.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/emoji-picker.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/emoji-toolbar-dropdown.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/emoji"
        },
        {
          "route": "https://pro.platejs.org/docs/components/emoji-picker"
        }
      ],
      "examples": ["emoji-demo", "emoji-pro"]
    }
  },
  {
    "name": "fixed-toolbar-buttons",
    "type": "registry:ui",
    "title": "Fixed Toolbar Buttons",
    "description": "A set of commonly used formatting buttons.",
    "dependencies": [
      "@udecode/plate-basic-marks",
      "@udecode/plate-font",
      "@udecode/plate-indent-list",
      "@udecode/plate-media",
      "@udecode/plate-highlight"
    ],
    "registryDependencies": [
      "toolbar",
      "https://platejs.org/r/ai-toolbar-button",
      "https://platejs.org/r/align-dropdown-menu",
      "https://platejs.org/r/color-dropdown-menu",
      "https://platejs.org/r/comment-toolbar-button",
      "https://platejs.org/r/emoji-dropdown-menu",
      "https://platejs.org/r/font-size-toolbar-button",
      "https://platejs.org/r/history-toolbar-button",
      "https://platejs.org/r/indent-list-toolbar-button",
      "https://platejs.org/r/indent-todo-toolbar-button",
      "https://platejs.org/r/indent-toolbar-button",
      "https://platejs.org/r/import-toolbar-button",
      "https://platejs.org/r/insert-dropdown-menu",
      "https://platejs.org/r/line-height-dropdown-menu",
      "https://platejs.org/r/link-toolbar-button",
      "https://platejs.org/r/mark-toolbar-button",
      "https://platejs.org/r/media-toolbar-button",
      "https://platejs.org/r/mode-dropdown-menu",
      "https://platejs.org/r/more-dropdown-menu",
      "https://platejs.org/r/outdent-toolbar-button",
      "https://platejs.org/r/table-dropdown-menu",
      "https://platejs.org/r/toggle-toolbar-button",
      "https://platejs.org/r/turn-into-dropdown-menu",
      "https://platejs.org/r/export-toolbar-button"
    ],
    "files": [
      {
        "path": "plate-ui/fixed-toolbar-buttons.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "examples": ["basic-nodes-demo"]
    }
  },
  {
    "name": "fixed-toolbar-list-buttons",
    "type": "registry:ui",
    "title": "Fixed Toolbar List Buttons",
    "dependencies": [
      "@udecode/plate-basic-marks",
      "@udecode/plate-font",
      "@udecode/plate-list",
      "@udecode/plate-media"
    ],
    "registryDependencies": [
      "toolbar",
      "https://platejs.org/r/ai-toolbar-button",
      "https://platejs.org/r/align-dropdown-menu",
      "https://platejs.org/r/color-dropdown-menu",
      "https://platejs.org/r/comment-toolbar-button",
      "https://platejs.org/r/emoji-dropdown-menu",
      "https://platejs.org/r/insert-dropdown-menu",
      "https://platejs.org/r/line-height-dropdown-menu",
      "https://platejs.org/r/list-indent-toolbar-button",
      "https://platejs.org/r/link-toolbar-button",
      "https://platejs.org/r/mark-toolbar-button",
      "https://platejs.org/r/media-toolbar-button",
      "https://platejs.org/r/mode-dropdown-menu",
      "https://platejs.org/r/more-dropdown-menu",
      "https://platejs.org/r/table-dropdown-menu",
      "https://platejs.org/r/toggle-toolbar-button",
      "https://platejs.org/r/turn-into-dropdown-menu"
    ],
    "files": [
      {
        "path": "plate-ui/fixed-toolbar-list-buttons.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {}
  },
  {
    "name": "fixed-toolbar",
    "type": "registry:ui",
    "title": "Fixed Toolbar",
    "description": "A fixed toolbar that stays at the top of the editor.",
    "dependencies": [],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/fixed-toolbar.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "examples": ["basic-nodes-demo"]
    }
  },
  {
    "name": "floating-toolbar-buttons",
    "type": "registry:ui",
    "title": "Floating Toolbar Buttons",
    "description": "A set of formatting buttons for the floating toolbar.",
    "dependencies": ["@udecode/plate-basic-marks"],
    "registryDependencies": [
      "toolbar",
      "https://platejs.org/r/ai-toolbar-button",
      "https://platejs.org/r/comment-toolbar-button",
      "https://platejs.org/r/link-toolbar-button",
      "https://platejs.org/r/mark-toolbar-button",
      "https://platejs.org/r/more-dropdown-menu",
      "https://platejs.org/r/turn-into-dropdown-menu"
    ],
    "files": [
      {
        "path": "plate-ui/floating-toolbar-buttons.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/api/floating"
        },
        {
          "route": "https://pro.platejs.org/docs/components/floating-toolbar-buttons"
        }
      ],
      "examples": ["floating-toolbar-demo", "floating-toolbar-pro"]
    }
  },
  {
    "name": "floating-toolbar",
    "type": "registry:ui",
    "title": "Floating Toolbar",
    "description": "A contextual toolbar that appears over selected text.",
    "dependencies": ["@udecode/plate-floating"],
    "registryDependencies": ["toolbar"],
    "files": [
      {
        "path": "plate-ui/floating-toolbar.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/api/floating"
        },
        {
          "route": "https://pro.platejs.org/docs/components/floating-toolbar"
        }
      ],
      "examples": ["floating-toolbar-demo", "floating-toolbar-pro"]
    }
  },
  {
    "name": "ghost-text",
    "type": "registry:ui",
    "title": "Ghost Text",
    "description": "A text suggestion system that displays AI-generated content after the cursor.",
    "dependencies": ["@udecode/plate-ai"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/ghost-text.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/copilot"
        },
        {
          "route": "https://pro.platejs.org/docs/components/ghost-text"
        }
      ],
      "examples": ["copilot-demo", "copilot-pro"],
      "label": "New"
    }
  },
  {
    "name": "indent-fire-marker",
    "type": "registry:ui",
    "title": "Indent Fire Marker",
    "dependencies": ["@udecode/plate-indent"],
    "files": [
      {
        "path": "plate-ui/indent-fire-marker.tsx",
        "type": "registry:ui"
      }
    ]
  },
  {
    "name": "history-toolbar-button",
    "type": "registry:ui",
    "title": "History Toolbar Button",
    "description": "Toolbar buttons for undo and redo operations.",
    "dependencies": [],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/history-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "https://docs.slatejs.org/libraries/slate-history",
          "title": "Slate History"
        }
      ],
      "examples": ["basic-nodes-demo"]
    }
  },
  {
    "name": "indent-list-toolbar-button",
    "type": "registry:ui",
    "title": "Indent List Toolbar Button",
    "description": "A toolbar control for adjusting list indentation.",
    "dependencies": ["@udecode/plate-indent-list"],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/indent-list-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/indent-list"
        }
      ],
      "examples": ["list-demo"]
    }
  },
  {
    "name": "indent-todo-marker",
    "type": "registry:ui",
    "title": "Indent Todo Marker",
    "description": "A checkbox marker for interactive todo lists.",
    "dependencies": ["@udecode/plate-indent-list"],
    "registryDependencies": ["https://platejs.org/r/checkbox.json"],
    "files": [
      {
        "path": "plate-ui/indent-todo-marker.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/indent-todo-marker-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/indent-list"
        },
        {
          "route": "https://pro.platejs.org/docs/components/indent-todo-marker"
        }
      ],
      "examples": ["list-demo"]
    }
  },
  {
    "name": "indent-todo-toolbar-button",
    "type": "registry:ui",
    "title": "Indent Todo Toolbar Button",
    "description": "A toolbar control for creating todo list items.",
    "dependencies": ["@udecode/plate-indent-list"],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/indent-todo-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/indent-list"
        }
      ],
      "examples": ["list-demo"]
    }
  },
  {
    "name": "indent-toolbar-button",
    "type": "registry:ui",
    "title": "Indent Toolbar Button",
    "description": "A toolbar control for block indentation.",
    "dependencies": ["@udecode/plate-indent"],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/indent-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/indent"
        }
      ],
      "examples": ["indent-demo"]
    }
  },
  {
    "name": "inline-combobox",
    "type": "registry:ui",
    "title": "Inline Combobox",
    "description": "A combobox for inline suggestions.",
    "dependencies": ["@udecode/plate-combobox", "@ariakit/react"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/inline-combobox.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/combobox"
        },
        {
          "route": "https://pro.platejs.org/docs/components/inline-combobox"
        }
      ],
      "examples": ["mention-demo", "slash-command-demo", "emoji-demo"]
    }
  },
  {
    "name": "insert-dropdown-menu",
    "type": "registry:ui",
    "title": "Insert Dropdown Menu",
    "description": "A menu for inserting different types of blocks.",
    "dependencies": [
      "@radix-ui/react-dropdown-menu",
      "@udecode/plate-block-quote",
      "@udecode/plate-code-block",
      "@udecode/plate-date",
      "@udecode/plate-excalidraw",
      "@udecode/plate-heading",
      "@udecode/plate-horizontal-rule",
      "@udecode/plate-indent-list",
      "@udecode/plate-link",
      "@udecode/plate-media",
      "@udecode/plate-table",
      "@udecode/plate-toggle"
    ],
    "registryDependencies": [
      "dropdown-menu",
      "toolbar",
      "https://platejs.org/r/transforms.json"
    ],
    "files": [
      {
        "path": "plate-ui/insert-dropdown-menu.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "examples": ["basic-nodes-demo"]
    }
  },
  {
    "name": "line-height-dropdown-menu",
    "type": "registry:ui",
    "title": "Line Height Dropdown Menu",
    "description": "A menu for controlling text line spacing.",
    "dependencies": [
      "@udecode/plate-line-height",
      "@radix-ui/react-dropdown-menu"
    ],
    "registryDependencies": [
      "https://platejs.org/r/toolbar.json",
      "https://platejs.org/r/dropdown-menu.json"
    ],
    "files": [
      {
        "path": "plate-ui/line-height-dropdown-menu.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/line-height"
        }
      ],
      "examples": ["line-height-demo"]
    }
  },
  {
    "name": "link-floating-toolbar",
    "type": "registry:ui",
    "title": "Link Floating Toolbar",
    "description": "A floating interface for link editing.",
    "dependencies": ["@udecode/plate-link", "@udecode/plate-floating"],
    "registryDependencies": [
      "https://platejs.org/r/button.json",
      "https://platejs.org/r/input.json",
      "https://platejs.org/r/popover.json",
      "https://platejs.org/r/separator.json"
    ],
    "files": [
      {
        "path": "plate-ui/link-floating-toolbar.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/link"
        },
        {
          "route": "/docs/api/floating"
        },
        {
          "route": "https://pro.platejs.org/docs/components/link-floating-toolbar"
        }
      ],
      "examples": ["link-demo", "link-pro"]
    }
  },
  {
    "name": "link-toolbar-button",
    "type": "registry:ui",
    "title": "Link Toolbar Button",
    "description": "A toolbar control for link management.",
    "dependencies": ["@udecode/plate-link"],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/link-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/link"
        },
        {
          "route": "https://pro.platejs.org/docs/components/link-toolbar-button"
        }
      ],
      "examples": ["link-demo", "link-pro"]
    }
  },
  {
    "name": "list-indent-toolbar-button",
    "type": "registry:ui",
    "title": "List Indent Toolbar Button",
    "description": "A toolbar control for indenting lists.",
    "dependencies": ["@udecode/plate-list"],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/list-indent-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/list"
        }
      ],
      "examples": ["list-demo"]
    }
  },
  {
    "name": "list-toolbar-button",
    "type": "registry:ui",
    "title": "List Toolbar Button",
    "description": "A toolbar control for list creation and management.",
    "dependencies": ["@udecode/plate-list"],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/list-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/list"
        }
      ],
      "examples": ["list-demo"]
    }
  },
  {
    "name": "mark-toolbar-button",
    "type": "registry:ui",
    "title": "Mark Toolbar Button",
    "description": "A toolbar control for basic text formatting.",
    "dependencies": ["@udecode/plate-basic-marks"],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/mark-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/basic-marks"
        }
      ],
      "examples": ["basic-marks-demo", "basic-nodes-pro"]
    }
  },
  {
    "name": "media-popover",
    "type": "registry:ui",
    "title": "Media Popover",
    "description": "A popover interface for media settings.",
    "dependencies": ["@udecode/plate-media"],
    "registryDependencies": [
      "https://platejs.org/r/button.json",
      "https://platejs.org/r/input.json",
      "https://platejs.org/r/popover.json",
      "https://platejs.org/r/separator.json"
    ],
    "files": [
      {
        "path": "plate-ui/media-popover.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/media"
        }
      ],
      "examples": ["media-demo", "media-toolbar-pro"]
    }
  },
  {
    "name": "media-toolbar-button",
    "type": "registry:ui",
    "title": "Media Toolbar Button",
    "description": "Toolbar button for inserting and managing media.",
    "dependencies": ["@udecode/plate-media", "use-file-picker", "sonner"],
    "registryDependencies": [
      "https://platejs.org/r/toolbar.json",
      "https://platejs.org/r/input.json",
      "https://platejs.org/r/dropdown-menu.json",
      "https://platejs.org/r/alert-dialog.json"
    ],
    "files": [
      {
        "path": "plate-ui/media-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/media"
        }
      ],
      "examples": ["media-demo", "upload-pro"]
    }
  },
  {
    "name": "media-upload-toast",
    "type": "registry:ui",
    "title": "Media Upload Toast",
    "description": "Show toast notifications for media uploads.",
    "dependencies": ["@udecode/plate-media", "sonner"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/media-upload-toast.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/media"
        }
      ],
      "examples": ["media-demo", "upload-pro"]
    }
  },
  {
    "name": "mode-dropdown-menu",
    "type": "registry:ui",
    "title": "Mode Dropdown Menu",
    "description": "A menu for switching between editor modes.",
    "dependencies": ["@radix-ui/react-dropdown-menu"],
    "registryDependencies": [
      "https://platejs.org/r/dropdown-menu.json",
      "https://platejs.org/r/toolbar.json"
    ],
    "files": [
      {
        "path": "plate-ui/mode-dropdown-menu.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "examples": ["basic-nodes-demo"]
    }
  },
  {
    "name": "more-dropdown-menu",
    "type": "registry:ui",
    "title": "More Dropdown Menu",
    "description": "A menu for additional text formatting options.",
    "dependencies": [
      "@radix-ui/react-dropdown-menu",
      "@udecode/plate-basic-marks",
      "@udecode/plate-kbd"
    ],
    "registryDependencies": [
      "https://platejs.org/r/dropdown-menu.json",
      "https://platejs.org/r/toolbar.json"
    ],
    "files": [
      {
        "path": "plate-ui/more-dropdown-menu.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "https://pro.platejs.org/docs/components/more-dropdown-menu"
        }
      ],
      "examples": ["basic-marks-demo", "basic-nodes-pro"]
    }
  },
  {
    "name": "outdent-toolbar-button",
    "type": "registry:ui",
    "title": "Outdent Toolbar Button",
    "description": "A toolbar button for decreasing block indentation.",
    "dependencies": ["@udecode/plate-indent"],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/outdent-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/indent"
        }
      ],
      "examples": ["indent-demo"]
    }
  },
  {
    "name": "placeholder",
    "type": "registry:ui",
    "title": "Placeholder",
    "description": "A text placeholder for empty editor blocks.",
    "dependencies": ["@udecode/plate-heading"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/placeholder.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/basic-elements"
        },
        {
          "route": "https://pro.platejs.org/docs/components/placeholder"
        }
      ],
      "examples": ["basic-elements-demo", "placeholder-pro"]
    }
  },
  {
    "name": "resizable",
    "type": "registry:ui",
    "title": "Resizable",
    "description": "A resizable wrapper with resize handles.",
    "dependencies": ["react-resizable-panels"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/resizable.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/api/resizable"
        },
        {
          "route": "https://pro.platejs.org/docs/components/resizable"
        }
      ],
      "examples": ["media-demo", "media-toolbar-pro"]
    }
  },
  {
    "name": "table-dropdown-menu",
    "type": "registry:ui",
    "title": "Table Dropdown Menu",
    "description": "A menu for table manipulation and formatting.",
    "dependencies": ["@udecode/plate-table", "@radix-ui/react-dropdown-menu"],
    "registryDependencies": [
      "https://platejs.org/r/dropdown-menu.json",
      "https://platejs.org/r/toolbar.json"
    ],
    "files": [
      {
        "path": "plate-ui/table-dropdown-menu.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/table-icons.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/table"
        }
      ],
      "examples": ["table-demo"]
    }
  },
  {
    "name": "toggle-toolbar-button",
    "type": "registry:ui",
    "title": "Toggle Toolbar Button",
    "description": "A toolbar button for expanding and collapsing blocks.",
    "dependencies": ["@udecode/plate-toggle"],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/toggle-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/toggle"
        }
      ],
      "examples": ["toggle-demo"]
    }
  },
  {
    "name": "turn-into-dropdown-menu",
    "type": "registry:ui",
    "title": "Turn Into Dropdown Menu",
    "description": "A menu for converting between different block types.",
    "dependencies": [
      "@radix-ui/react-dropdown-menu",
      "@udecode/plate-block-quote",
      "@udecode/plate-code-block",
      "@udecode/plate-heading",
      "@udecode/plate-indent-list",
      "@udecode/plate-toggle"
    ],
    "registryDependencies": [
      "https://platejs.org/r/dropdown-menu.json",
      "https://platejs.org/r/toolbar.json",
      "https://platejs.org/r/transforms.json"
    ],
    "files": [
      {
        "path": "plate-ui/turn-into-dropdown-menu.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "https://pro.platejs.org/docs/components/turn-into-dropdown-menu"
        }
      ],
      "examples": ["basic-nodes-demo", "basic-nodes-pro"]
    }
  },
  {
    "name": "remote-cursor-overlay",
    "type": "registry:ui",
    "title": "Remote Cursor Overlay",
    "description": "A cursor overlay to display multiplayer cursors in the yjs plugin.",
    "dependencies": ["@slate-yjs/react"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/remote-cursor-overlay.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/collaboration"
        }
      ],
      "examples": []
    }
  },
  {
    "name": "ai-leaf",
    "type": "registry:ui",
    "title": "AI Leaf",
    "description": "A text highlighter for AI-generated content.",
    "dependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/ai-leaf.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/ai",
          "title": "AI"
        },
        {
          "route": "https://pro.platejs.org/docs/components/ai-leaf",
          "title": "AI Leaf"
        }
      ],
      "examples": ["ai-demo", "ai-pro"],
      "label": "New"
    }
  },
  {
    "name": "blockquote-element",
    "type": "registry:ui",
    "title": "Blockquote Element",
    "description": "A quote component for block quotes.",
    "dependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/blockquote-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/blockquote-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/basic-elements"
        },
        {
          "route": "https://pro.platejs.org/docs/components/blockquote-element"
        }
      ],
      "examples": ["basic-elements-demo", "basic-nodes-pro"]
    }
  },
  {
    "name": "code-block-element",
    "type": "registry:ui",
    "title": "Code Block Element",
    "description": "A code block with syntax highlighting and language selection.",
    "dependencies": ["@udecode/plate-code-block", "lowlight"],
    "registryDependencies": ["https://platejs.org/r/command.json"],
    "files": [
      {
        "path": "plate-ui/code-block-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/code-block-element-static.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/code-block-combobox.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/basic-elements"
        },
        {
          "route": "https://pro.platejs.org/docs/components/code-block-element"
        }
      ],
      "examples": ["basic-elements-demo"]
    }
  },
  {
    "name": "code-leaf",
    "type": "registry:ui",
    "title": "Code Leaf",
    "description": "An inline component for code snippets.",
    "dependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/code-leaf.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/code-leaf-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/basic-marks"
        },
        {
          "route": "https://pro.platejs.org/docs/components/code-leaf"
        }
      ],
      "examples": ["basic-marks-demo"]
    }
  },
  {
    "name": "code-line-element",
    "type": "registry:ui",
    "title": "Code Line Element",
    "description": "A line component for code blocks.",
    "dependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/code-line-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/code-line-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/basic-elements"
        },
        {
          "route": "https://pro.platejs.org/docs/components/code-line-element"
        }
      ],
      "examples": ["basic-elements-demo", "basic-nodes-pro"]
    }
  },
  {
    "name": "code-syntax-leaf",
    "type": "registry:ui",
    "title": "Code Syntax Leaf",
    "description": "A syntax highlighting component for code blocks.",
    "dependencies": ["@udecode/plate-code-block"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/code-syntax-leaf.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/code-syntax-leaf-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/basic-elements"
        },
        {
          "route": "https://pro.platejs.org/docs/components/code-syntax-leaf"
        }
      ],
      "examples": ["basic-elements-demo", "basic-nodes-pro"]
    }
  },
  {
    "name": "column-element",
    "type": "registry:ui",
    "title": "Column Element",
    "description": "A resizable column component for layout.",
    "dependencies": ["@udecode/plate-layout", "@udecode/plate-resizable"],
    "registryDependencies": ["https://platejs.org/r/resizable.json"],
    "files": [
      {
        "path": "plate-ui/column-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/column-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/column"
        },
        {
          "route": "https://pro.platejs.org/docs/components/column-element"
        }
      ],
      "examples": ["column-demo"]
    }
  },
  {
    "name": "column-group-element",
    "type": "registry:ui",
    "title": "Column Group Element",
    "description": "A resizable column component for layout.",
    "dependencies": ["@udecode/plate-layout"],
    "registryDependencies": [
      "https://platejs.org/r/command.json",
      "https://platejs.org/r/resizable.json"
    ],
    "files": [
      {
        "path": "plate-ui/column-group-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/column-group-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/column"
        },
        {
          "route": "https://pro.platejs.org/docs/components/column-group-element"
        }
      ],
      "examples": ["column-demo"]
    }
  },
  {
    "name": "comment-leaf",
    "type": "registry:ui",
    "title": "Comment Leaf",
    "description": "A text component for displaying comments with visual indicators.",
    "dependencies": ["@udecode/plate-comments"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/comment-leaf.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/comment-leaf-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/comments"
        },
        {
          "route": "https://pro.platejs.org/docs/components/comment-leaf"
        }
      ],
      "examples": ["comments-demo", "comments-pro"]
    }
  },
  {
    "name": "suggestion-leaf",
    "type": "registry:ui",
    "title": "Suggestion Leaf",
    "description": "A text component for suggestion.",
    "dependencies": ["@udecode/plate-suggestion"],
    "registryDependencies": ["https://platejs.org/r/suggestion-plugin.json"],
    "files": [
      {
        "path": "plate-ui/suggestion-leaf.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/suggestion-leaf-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/suggestion"
        }
      ],
      "examples": ["comments-demo", "comments-pro"]
    }
  },
  {
    "name": "suggestion-line-break",
    "type": "registry:ui",
    "title": "Suggestion Line Break",
    "description": "A line break component for suggestion.",
    "dependencies": ["@udecode/plate-suggestion"],
    "registryDependencies": ["https://platejs.org/r/suggestion-plugin.json"],
    "files": [
      {
        "path": "plate-ui/suggestion-line-break.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/suggestion"
        }
      ],
      "examples": ["comments-demo", "comments-pro"]
    }
  },
  {
    "name": "date-element",
    "type": "registry:ui",
    "title": "Date Element",
    "description": "A date field component with calendar picker.",
    "dependencies": ["@udecode/plate-date"],
    "registryDependencies": ["https://platejs.org/r/calendar.json"],
    "files": [
      {
        "path": "plate-ui/date-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/date-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/date"
        },
        {
          "route": "https://pro.platejs.org/docs/components/date-element"
        }
      ],
      "examples": ["date-demo"],
      "label": "New"
    }
  },
  {
    "name": "equation-element",
    "type": "registry:ui",
    "title": "Equation Element",
    "description": "Displays a LaTeX equation element with an editable popover for inputting and rendering mathematical expressions.",
    "dependencies": ["@udecode/plate-math", "react-textarea-autosize"],
    "registryDependencies": ["https://platejs.org/r/popover.json"],
    "files": [
      {
        "path": "plate-ui/equation-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/equation-element-static.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/equation-popover.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "https://platejs.org/docs/equation",
          "title": "Equation"
        }
      ],
      "examples": ["equation-demo"]
    }
  },
  {
    "name": "inline-equation-element",
    "type": "registry:ui",
    "title": "Inline Equation Element",
    "description": "An inline LaTeX equation element with an editable popover for inputting and rendering mathematical expressions.",
    "dependencies": ["@udecode/plate-math"],
    "registryDependencies": ["https://platejs.org/r/popover.json"],
    "files": [
      {
        "path": "plate-ui/inline-equation-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/inline-equation-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "https://platejs.org/docs/equation",
          "title": "Equation"
        }
      ],
      "examples": ["equation-demo"]
    }
  },
  {
    "name": "inline-equation-toolbar-button",
    "type": "registry:ui",
    "title": "Inline Equation Toolbar Button",
    "description": "A toolbar button for inserting and editing inline equations.",
    "dependencies": ["@udecode/plate-math"],
    "registryDependencies": ["https://platejs.org/r/toolbar.json"],
    "files": [
      {
        "path": "plate-ui/inline-equation-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "https://platejs.org/docs/equation",
          "title": "Equation"
        }
      ],
      "examples": ["equation-demo", "floating-toolbar-demo"]
    }
  },
  {
    "name": "emoji-input-element",
    "type": "registry:ui",
    "title": "Emoji Input Element",
    "description": "An input component for emoji search and insertion.",
    "dependencies": ["@udecode/plate-emoji", "@emoji-mart/data@1.2.1"],
    "registryDependencies": [
      "https://platejs.org/r/inline-combobox.json",
      "https://platejs.org/r/use-debounce.json"
    ],
    "files": [
      {
        "path": "plate-ui/emoji-input-element.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/emoji"
        },
        {
          "route": "https://pro.platejs.org/docs/components/emoji-input-element"
        }
      ],
      "examples": ["emoji-demo"]
    }
  },
  {
    "name": "excalidraw-element",
    "type": "registry:ui",
    "title": "Excalidraw Element",
    "description": "A drawing component powered by Excalidraw.",
    "dependencies": ["@udecode/plate-excalidraw"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/excalidraw-element.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/excalidraw"
        }
      ]
    }
  },
  {
    "name": "font-size-toolbar-button",
    "type": "registry:ui",
    "title": "Font Size Toolbar Button",
    "description": "A toolbar control for adjusting font size.",
    "dependencies": ["@udecode/plate-font"],
    "registryDependencies": [
      "https://platejs.org/r/popover.json",
      "https://platejs.org/r/toolbar.json"
    ],
    "files": [
      {
        "path": "plate-ui/font-size-toolbar-button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/font"
        }
      ],
      "examples": ["list-demo"]
    }
  },
  {
    "name": "heading-element",
    "type": "registry:ui",
    "title": "Heading Element",
    "description": "A heading with multiple level support.",
    "dependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/heading-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/heading-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/basic-elements"
        },
        {
          "route": "https://pro.platejs.org/docs/components/heading-element"
        }
      ],
      "examples": ["basic-elements-demo", "basic-nodes-pro"]
    }
  },
  {
    "name": "highlight-leaf",
    "type": "registry:ui",
    "title": "Highlight Leaf",
    "description": "A text highlighter with customizable colors.",
    "dependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/highlight-leaf.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/highlight-leaf-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/highlight"
        }
      ],
      "examples": ["highlight-demo"]
    }
  },
  {
    "name": "hr-element",
    "type": "registry:ui",
    "title": "Horizontal Rule Element",
    "description": "A horizontal rule component with focus states.",
    "dependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/hr-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/hr-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/horizontal-rule"
        },
        {
          "route": "https://pro.platejs.org/docs/components/hr-element"
        }
      ],
      "examples": ["horizontal-rule-demo"]
    }
  },
  {
    "name": "image-element",
    "type": "registry:ui",
    "title": "Image Element",
    "description": "Image element with lazy loading, resizing capabilities, and optional caption.",
    "dependencies": ["@udecode/plate-media", "@udecode/plate-resizable"],
    "registryDependencies": [
      "https://platejs.org/r/media-popover.json",
      "https://platejs.org/r/caption.json",
      "https://platejs.org/r/resizable.json"
    ],
    "files": [
      {
        "path": "plate-ui/image-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/image-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/media"
        },
        {
          "route": "/docs/api/resizable"
        },
        {
          "route": "https://pro.platejs.org/docs/components/image-element"
        }
      ],
      "examples": ["media-demo", "media-toolbar-pro"]
    }
  },
  {
    "name": "image-preview",
    "type": "registry:ui",
    "title": "Image Preview",
    "description": "A modal component for previewing and manipulating images.",
    "dependencies": ["@udecode/plate-media"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/image-preview.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/media"
        },
        {
          "route": "https://pro.platejs.org/docs/components/image-preview"
        }
      ],
      "examples": ["media-demo", "media-toolbar-pro"]
    }
  },
  {
    "name": "kbd-leaf",
    "type": "registry:ui",
    "title": "Keyboard Input Leaf",
    "description": "A component for styling keyboard shortcuts.",
    "dependencies": ["@udecode/plate-kbd"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/kbd-leaf.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/kbd-leaf-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/kbd",
          "title": "Keyboard Input"
        }
      ],
      "examples": ["kbd-demo"]
    }
  },
  {
    "name": "link-element",
    "type": "registry:ui",
    "title": "Link Element",
    "description": "A component for rendering hyperlinks with hover states.",
    "dependencies": ["@udecode/plate-link"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/link-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/link-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/link"
        },
        {
          "route": "https://pro.platejs.org/docs/components/link-element"
        }
      ],
      "examples": ["link-demo"]
    }
  },
  {
    "name": "list-element",
    "type": "registry:ui",
    "title": "List Element",
    "description": "A list element for ordered and unordered items.",
    "dependencies": ["@udecode/plate-list"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/list-element.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/list"
        }
      ],
      "examples": ["list-demo"]
    }
  },
  {
    "name": "media-audio-element",
    "type": "registry:ui",
    "title": "Media Audio Element",
    "description": "An audio player component with caption support.",
    "dependencies": ["@udecode/plate-media", "@udecode/plate-resizable"],
    "registryDependencies": ["https://platejs.org/r/caption.json"],
    "files": [
      {
        "path": "plate-ui/media-audio-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/media-audio-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/media"
        },
        {
          "route": "https://pro.platejs.org/docs/components/media-audio-element"
        }
      ],
      "examples": ["media-demo", "upload-pro"]
    }
  },
  {
    "name": "media-embed-element",
    "type": "registry:ui",
    "title": "Media Embed Element",
    "description": "A component for embedded media content with resizing and caption support.",
    "dependencies": [
      "@udecode/plate-media",
      "@udecode/plate-resizable",
      "react-tweet",
      "react-lite-youtube-embed"
    ],
    "registryDependencies": [
      "https://platejs.org/r/media-popover.json",
      "https://platejs.org/r/caption.json",
      "https://platejs.org/r/resizable.json"
    ],
    "files": [
      {
        "path": "plate-ui/media-embed-element.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/media"
        },
        {
          "route": "/docs/api/resizable"
        },
        {
          "route": "https://pro.platejs.org/docs/components/media-embed-element"
        }
      ],
      "examples": ["media-demo", "upload-pro"]
    }
  },
  {
    "name": "media-file-element",
    "type": "registry:ui",
    "title": "Media File Element",
    "description": "A file attachment component with download capability and caption.",
    "dependencies": ["@udecode/plate-media", "@udecode/plate-resizable"],
    "registryDependencies": ["https://platejs.org/r/caption.json"],
    "files": [
      {
        "path": "plate-ui/media-file-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/media-file-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/media"
        },
        {
          "route": "https://pro.platejs.org/docs/components/media-file-element"
        }
      ],
      "examples": ["media-demo", "upload-pro"]
    }
  },
  {
    "name": "media-placeholder-element",
    "type": "registry:ui",
    "title": "Media Placeholder Element",
    "description": "A placeholder for media upload progress indication.",
    "dependencies": ["@udecode/plate-media", "use-file-picker"],
    "registryDependencies": [
      "https://platejs.org/r/spinner.json",
      "https://platejs.org/r/uploadthing.json"
    ],
    "files": [
      {
        "path": "plate-ui/media-placeholder-element.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/media"
        },
        {
          "route": "https://pro.platejs.org/docs/components/media-placeholder-element"
        }
      ],
      "examples": ["media-demo", "upload-pro"]
    }
  },
  {
    "name": "media-video-element",
    "type": "registry:ui",
    "title": "Media Video Element",
    "description": "A video player component with YouTube and file upload support.",
    "dependencies": [
      "@udecode/plate-media",
      "@udecode/plate-resizable",
      "react-player",
      "react-lite-youtube-embed"
    ],
    "registryDependencies": [
      "https://platejs.org/r/media-popover.json",
      "https://platejs.org/r/caption.json",
      "https://platejs.org/r/resizable.json"
    ],
    "files": [
      {
        "path": "plate-ui/media-video-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/media-video-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/media"
        },
        {
          "route": "/docs/api/resizable"
        },
        {
          "route": "https://pro.platejs.org/docs/components/media-video-element"
        }
      ],
      "examples": ["media-demo", "upload-pro"]
    }
  },
  {
    "name": "mention-element",
    "type": "registry:ui",
    "title": "Mention Element",
    "description": "A mention element with customizable prefix and label.",
    "dependencies": ["@udecode/plate-mention"],
    "registryDependencies": ["https://platejs.org/r/use-mounted.json"],
    "files": [
      {
        "path": "plate-ui/mention-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/mention-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/mention"
        },
        {
          "route": "https://pro.platejs.org/docs/components/mention-element"
        }
      ],
      "examples": ["mention-demo"]
    }
  },
  {
    "name": "mention-input-element",
    "type": "registry:ui",
    "title": "Mention Input Element",
    "description": "An input component for user mentions with autocomplete.",
    "dependencies": ["@udecode/plate-mention"],
    "registryDependencies": ["https://platejs.org/r/inline-combobox.json"],
    "files": [
      {
        "path": "plate-ui/mention-input-element.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/mention"
        },
        {
          "route": "https://pro.platejs.org/docs/components/mention-input-element"
        }
      ],
      "examples": ["mention-demo"]
    }
  },
  {
    "name": "paragraph-element",
    "type": "registry:ui",
    "title": "Paragraph Element",
    "description": "A paragraph block with background color support.",
    "dependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/paragraph-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/paragraph-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/basic-elements"
        },
        {
          "route": "https://pro.platejs.org/docs/components/paragraph-element"
        }
      ],
      "examples": ["basic-elements-demo", "basic-nodes-pro"]
    }
  },
  {
    "name": "search-highlight-leaf",
    "type": "registry:ui",
    "title": "Search Highlight Leaf",
    "description": "A component that highlights search results in text.",
    "dependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/search-highlight-leaf.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/highlight"
        }
      ]
    }
  },
  {
    "name": "slash-input-element",
    "type": "registry:ui",
    "title": "Slash Input Element",
    "description": "A command input component for inserting various elements.",
    "dependencies": [
      "@udecode/plate-ai",
      "@udecode/plate-block-quote",
      "@udecode/plate-code-block",
      "@udecode/plate-date",
      "@udecode/plate-heading",
      "@udecode/plate-indent-list",
      "@udecode/plate-table",
      "@udecode/plate-toggle"
    ],
    "registryDependencies": [
      "https://platejs.org/r/inline-combobox.json",
      "https://platejs.org/r/transforms.json"
    ],
    "files": [
      {
        "path": "plate-ui/slash-input-element.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/slash-command",
          "title": "Slash"
        },
        {
          "route": "https://pro.platejs.org/docs/components/slash-input-element"
        }
      ],
      "examples": ["slash-command-demo", "slash-menu-pro"],
      "label": "New"
    }
  },
  {
    "name": "table-cell-element",
    "type": "registry:ui",
    "title": "Table Cell Element",
    "description": "A table cell with resizable borders and selection.",
    "dependencies": ["@udecode/plate-table"],
    "registryDependencies": ["https://platejs.org/r/resizable.json"],
    "files": [
      {
        "path": "plate-ui/table-cell-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/table-cell-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/table"
        },
        {
          "route": "https://pro.platejs.org/docs/components/table-cell-element"
        }
      ],
      "examples": ["table-demo"]
    }
  },
  {
    "name": "table-element",
    "type": "registry:ui",
    "title": "Table Element",
    "description": "A table component with floating toolbar and border customization.",
    "dependencies": [
      "@udecode/plate-table",
      "@radix-ui/react-dropdown-menu",
      "@radix-ui/react-popover"
    ],
    "registryDependencies": ["https://platejs.org/r/dropdown-menu.json"],
    "files": [
      {
        "path": "plate-ui/table-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/table-icons.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/table-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/table"
        },
        {
          "route": "https://pro.platejs.org/docs/components/table-element"
        }
      ],
      "examples": ["table-demo"]
    }
  },
  {
    "name": "table-row-element",
    "type": "registry:ui",
    "title": "Table Row Element",
    "description": "A table row component with optional border hiding.",
    "dependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/table-row-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/table-row-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/table"
        },
        {
          "route": "https://pro.platejs.org/docs/components/table-row-element"
        }
      ],
      "examples": ["table-demo"]
    }
  },
  {
    "name": "tag-element",
    "type": "registry:ui",
    "title": "Tag Element",
    "description": "A tag element component with selection states and styling.",
    "dependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/tag-element.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/multi-select"
        }
      ],
      "examples": ["select-editor-demo"]
    }
  },
  {
    "name": "toc-element",
    "type": "registry:ui",
    "title": "TOC Element",
    "description": "A table of contents component with links to document headings.",
    "dependencies": ["@udecode/plate-heading"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/toc-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/toc-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/basic-elements"
        },
        {
          "route": "https://pro.platejs.org/docs/components/toc-element"
        }
      ],
      "examples": ["toc-demo", "toc-pro"],
      "label": "New"
    }
  },
  {
    "name": "todo-list-element",
    "type": "registry:ui",
    "title": "Todo List Element",
    "description": "A checkbox list element with interactive todo items.",
    "dependencies": ["@udecode/plate-list"],
    "registryDependencies": ["https://platejs.org/r/checkbox.json"],
    "files": [
      {
        "path": "plate-ui/todo-list-element.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/list"
        }
      ],
      "examples": ["list-demo"]
    }
  },
  {
    "name": "toggle-element",
    "type": "registry:ui",
    "title": "Toggle Element",
    "description": "A collapsible component for toggling content visibility.",
    "dependencies": ["@udecode/plate-toggle"],
    "registryDependencies": ["https://platejs.org/r/button.json"],
    "files": [
      {
        "path": "plate-ui/toggle-element.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/toggle-element-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "docs": [
        {
          "route": "/docs/toggle"
        }
      ],
      "examples": ["toggle-demo"]
    }
  },
  {
    "name": "alert-dialog",
    "type": "registry:ui",
    "title": "Alert Dialog",
    "description": "A modal dialog that interrupts the user with important content and expects a response.",
    "dependencies": ["@radix-ui/react-alert-dialog"],
    "registryDependencies": ["https://platejs.org/r/button.json"],
    "files": [
      {
        "path": "plate-ui/alert-dialog.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/alert-dialog"
      }
    }
  },
  {
    "name": "avatar",
    "type": "registry:ui",
    "title": "Avatar",
    "description": "An image element with a fallback for representing the user.",
    "dependencies": ["@radix-ui/react-avatar"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/avatar.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/avatar"
      }
    }
  },
  {
    "name": "button",
    "type": "registry:ui",
    "title": "Button",
    "description": "Displays a button or a component that looks like a button.",
    "dependencies": ["@radix-ui/react-slot"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/button.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/button"
      }
    }
  },
  {
    "name": "calendar",
    "type": "registry:ui",
    "title": "Calendar",
    "description": "A date field component that allows users to enter and edit date.",
    "dependencies": ["react-day-picker@8.10.1"],
    "registryDependencies": ["https://platejs.org/r/button.json"],
    "files": [
      {
        "path": "plate-ui/calendar.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/calendar"
      }
    }
  },
  {
    "name": "checkbox",
    "type": "registry:ui",
    "title": "Checkbox",
    "description": "A control that allows the user to toggle between checked and not checked.",
    "dependencies": ["@radix-ui/react-checkbox"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/checkbox.tsx",
        "type": "registry:ui"
      },
      {
        "path": "plate-ui/checkbox-static.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/checkbox"
      }
    }
  },
  {
    "name": "command",
    "type": "registry:ui",
    "title": "Command",
    "description": "Fast, composable, unstyled command menu for React.",
    "dependencies": ["@radix-ui/react-dialog", "@udecode/cmdk"],
    "registryDependencies": ["dialog", "https://platejs.org/r/input.json"],
    "files": [
      {
        "path": "plate-ui/command.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/command"
      }
    }
  },
  {
    "name": "context-menu",
    "type": "registry:ui",
    "title": "Context Menu",
    "description": "Displays a menu to the user — such as a set of actions or functions — triggered by a button.",
    "dependencies": ["@radix-ui/react-context-menu"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/context-menu.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/context-menu"
      }
    }
  },
  {
    "name": "dropdown-menu",
    "type": "registry:ui",
    "title": "Dropdown Menu",
    "description": "Displays a menu to the user — such as a set of actions or functions — triggered by a button.",
    "dependencies": ["@radix-ui/react-dropdown-menu"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/dropdown-menu.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/dropdown-menu"
      }
    }
  },
  {
    "name": "form",
    "type": "registry:ui",
    "title": "Form",
    "description": "Building forms with React Hook Form and Zod.",
    "dependencies": [
      "react-hook-form",
      "zod",
      "@hookform/resolvers",
      "@radix-ui/react-label",
      "@radix-ui/react-slot"
    ],
    "registryDependencies": ["https://platejs.org/r/label.json"],
    "files": [
      {
        "path": "plate-ui/form.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/form"
      }
    }
  },
  {
    "name": "input",
    "type": "registry:ui",
    "title": "Input",
    "description": "Displays a form input field or a component that looks like an input field.",
    "dependencies": [],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/input.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/input"
      }
    }
  },
  {
    "name": "label",
    "type": "registry:ui",
    "title": "Label",
    "description": "Renders an accessible label associated with controls.",
    "dependencies": ["@radix-ui/react-label"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/label.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/label"
      }
    }
  },
  {
    "name": "popover",
    "type": "registry:ui",
    "title": "Popover",
    "description": "Displays rich content in a portal, triggered by a button.",
    "dependencies": ["@radix-ui/react-popover"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/popover.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/popover"
      }
    }
  },
  {
    "name": "separator",
    "type": "registry:ui",
    "title": "Separator",
    "description": "Visually or semantically separates content.",
    "dependencies": ["@radix-ui/react-separator"],
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/separator.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/separator"
      }
    }
  },
  {
    "name": "toolbar",
    "type": "registry:ui",
    "title": "Toolbar",
    "description": "A customizable toolbar component with various button styles and group",
    "dependencies": ["@radix-ui/react-toolbar"],
    "registryDependencies": [
      "https://platejs.org/r/tooltip.json",
      "https://platejs.org/r/separator.json"
    ],
    "files": [
      {
        "path": "plate-ui/toolbar.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {}
  },
  {
    "name": "tooltip",
    "type": "registry:ui",
    "title": "Tooltip",
    "description": "A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.",
    "dependencies": ["@radix-ui/react-tooltip"],
    "registryDependencies": ["https://platejs.org/r/button.json"],
    "files": [
      {
        "path": "plate-ui/tooltip.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {
      "links": {
        "doc": "https://ui.shadcn.com/docs/components/tooltip"
      }
    }
  },
  {
    "name": "spinner",
    "type": "registry:ui",
    "title": "Spinner",
    "description": "A loading spinner component with size variants.",
    "registryDependencies": [],
    "files": [
      {
        "path": "plate-ui/spinner.tsx",
        "type": "registry:ui"
      }
    ],
    "meta": {}
  }
]
