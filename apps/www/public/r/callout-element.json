{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "callout-element",
  "type": "registry:ui",
  "description": "A callout component for highlighting important information with customizable icons and styles.",
  "dependencies": [
    "@udecode/plate-callout"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/registry/ui/callout-element.tsx",
      "content": "'use client';\n\nimport React from 'react';\n\nimport { cn } from '@udecode/cn';\nimport { useCalloutEmojiPicker } from '@udecode/plate-callout/react';\nimport { useEmojiDropdownMenuState } from '@udecode/plate-emoji/react';\nimport { PlateElement } from '@udecode/plate/react';\n\nimport { Button } from '@/components/ui/button';\n\nimport { emojiCategoryIcons, emojiSearchIcons } from './emoji-icons';\nimport { EmojiPicker } from './emoji-picker';\nimport { EmojiToolbarDropdown } from './emoji-toolbar-dropdown';\n\nexport function CalloutElement({\n  attributes,\n  children,\n  className,\n  ...props\n}: React.ComponentProps<typeof PlateElement>) {\n  const { emojiPickerState, isOpen, setIsOpen } = useEmojiDropdownMenuState({\n    closeOnSelect: true,\n  });\n\n  const { emojiToolbarDropdownProps, props: calloutProps } =\n    useCalloutEmojiPicker({\n      isOpen,\n      setIsOpen,\n    });\n\n  return (\n    <PlateElement\n      className={cn('bg-muted my-1 flex rounded-sm p-4 pl-3', className)}\n      style={{\n        backgroundColor: props.element.backgroundColor as any,\n      }}\n      attributes={{\n        ...attributes,\n        'data-plate-open-context-menu': true,\n      }}\n      {...props}\n    >\n      <div className=\"flex w-full gap-2 rounded-md\">\n        <EmojiToolbarDropdown\n          {...emojiToolbarDropdownProps}\n          control={\n            <Button\n              variant=\"ghost\"\n              className=\"hover:bg-muted-foreground/15 size-6 select-none p-1 text-[18px]\"\n              style={{\n                fontFamily:\n                  '\"Apple Color Emoji\", \"Segoe UI Emoji\", NotoColorEmoji, \"Noto Color Emoji\", \"Segoe UI Symbol\", \"Android Emoji\", EmojiSymbols',\n              }}\n              contentEditable={false}\n            >\n              {(props.element.icon as any) || 'ðŸ’¡'}\n            </Button>\n          }\n        >\n          <EmojiPicker\n            {...emojiPickerState}\n            {...calloutProps}\n            icons={{\n              categories: emojiCategoryIcons,\n              search: emojiSearchIcons,\n            }}\n          />\n        </EmojiToolbarDropdown>\n        <div className=\"w-full\">{children}</div>\n      </div>\n    </PlateElement>\n  );\n}\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/ui/callout-element-static.tsx",
      "content": "import React from 'react';\n\nimport type { SlateElementProps } from '@udecode/plate';\n\nimport { cn } from '@udecode/cn';\nimport { SlateElement } from '@udecode/plate';\n\nexport function CalloutElementStatic({\n  children,\n  className,\n  ...props\n}: SlateElementProps) {\n  return (\n    <SlateElement\n      className={cn('my-1 flex rounded-sm bg-muted p-4 pl-3', className)}\n      style={{\n        backgroundColor: props.element.backgroundColor as any,\n      }}\n      {...props}\n    >\n      <div className=\"flex w-full gap-2 rounded-md\">\n        <div\n          className=\"size-6 text-[18px] select-none\"\n          style={{\n            fontFamily:\n              '\"Apple Color Emoji\", \"Segoe UI Emoji\", NotoColorEmoji, \"Noto Color Emoji\", \"Segoe UI Symbol\", \"Android Emoji\", EmojiSymbols',\n          }}\n        >\n          <span data-plate-prevent-deserialization>\n            {(props.element.icon as any) || 'ðŸ’¡'}\n          </span>\n        </div>\n        <div className=\"w-full\">{children}</div>\n      </div>\n    </SlateElement>\n  );\n}\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "docs": [
      {
        "route": "/docs/basic-elements"
      },
      {
        "route": "https://pro.platejs.org/docs/components/callout-element"
      }
    ],
    "examples": [
      "basic-elements-demo"
    ]
  }
}