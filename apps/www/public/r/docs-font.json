{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "docs-font",
  "type": "registry:file",
  "title": "Font",
  "description": "Provide extended formatting options for document content.",
  "files": [
    {
      "path": "../../docs/font.mdx",
      "content": "---\ntitle: Font\ndescription: Provide extended formatting options for document content.\ndocs:\n  - route: /docs/components/color-dropdown-menu\n    title: Color Dropdown Menu\n---\n\n<ComponentPreview name=\"font-demo\" />\n\n<PackageInfo>\n\n## Features\n\n- Font size, family, color, background color, and weight.\n\n## Plugins\n\n- `FontFamilyPlugin`: Change font family using inline elements with `font-family` style\n- `FontSizePlugin`: Control font size with CSS class or `font-size` style\n- `FontColorPlugin`: Control font color with `color` style\n- `FontBackgroundColorPlugin`: Control background color with `background-color` style\n- `FontWeightPlugin`: Control font weight with `font-weight` style\n\n</PackageInfo>\n\n## Installation\n\n```bash\nnpm install @udecode/plate-font\n```\n\n## Usage\n\n```tsx\nimport {\n  FontBackgroundColorPlugin,\n  FontColorPlugin,\n  FontSizePlugin,\n} from '@udecode/plate-font/react';\n\nconst plugins = [\n  // ...otherPlugins,\n  FontColorPlugin,\n  FontBackgroundColorPlugin,\n  FontSizePlugin,\n];\n```\n\n## Plugins\n\n### `FontBackgroundColorPlugin`\n\nPlugin for font background color formatting.\n\n### `FontColorPlugin`\n\nPlugin for font color formatting.\n\n### `FontFamilyPlugin`\n\nPlugin for font family formatting.\n\n### `FontSizePlugin`\n\nPlugin for font size formatting.\n\n#### API\n\n##### `editor.api.fontSize.setMark`\n\nSet the font size mark.\n\n<API name=\"setMark\">\n<APIParameters>\n  <APIItem name=\"fontSize\" type=\"string\">\n    The font size value to set.\n  </APIItem>\n</APIParameters>\n</API>\n\n#### Utils\n\n##### `toUnitLess`\n\nConvert a font size value to a unitless value.\n\n<API name=\"toUnitLess\">\n<APIParameters>\n  <APIItem name=\"fontSize\" type=\"string\">\n    The font size value to convert.\n  </APIItem>\n</APIParameters>\n\n<APIReturns type=\"string\">\n  The font size value without units.\n</APIReturns>\n</API>\n\n### `FontWeightPlugin`\n\nPlugin for font weight formatting.\n\n## Hooks\n\n### `useColorDropdownMenu`\n\nA behavior hook for the color dropdown menu component.\n\n<API name=\"useColorDropdownMenu\">\n<APIState>\n  <APIItem name=\"open\" type=\"boolean\">\n    Whether the dropdown menu is open.\n  </APIItem>\n  <APIItem name=\"onToggle\" type=\"function\">\n    Callback to toggle the open state.\n  </APIItem>\n</APIState>\n\n<APIReturns type=\"object\">\n  <APIItem name=\"menuProps\" type=\"object\">\n    Props for the menu component.\n    <APISubList>\n      <APISubListItem parent=\"menuProps\" name=\"open\" type=\"boolean\">\n        Whether the dropdown menu is open.\n      </APISubListItem>\n      <APISubListItem parent=\"menuProps\" name=\"onOpenChange\" type=\"function\">\n        Callback to toggle the open state.\n      </APISubListItem>\n    </APISubList>\n  </APIItem>\n  <APIItem name=\"buttonProps\" type=\"object\">\n    Props for the button component.\n    <APISubList>\n      <APISubListItem parent=\"buttonProps\" name=\"pressed\" type=\"boolean\">\n        Whether the dropdown menu is open.\n      </APISubListItem>\n    </APISubList>\n  </APIItem>\n</APIReturns>\n</API>\n\n### `useColorInput`\n\nA behavior hook for the color input component.\n\n<API name=\"useColorInput\">\n<APIReturns type=\"object\">\n  <APIItem name=\"inputRef\" type=\"React.Ref<HTMLInputElement>\">\n    Ref for the color input element.\n  </APIItem>\n  <APIItem name=\"childProps\" type=\"object\">\n    Props for the child component that triggers the color picker.\n    <APISubList>\n      <APISubListItem parent=\"childProps\" name=\"onClick\" type=\"function\">\n        A callback function to handle the click event of the child component.\n      </APISubListItem>\n    </APISubList>\n  </APIItem>\n</APIReturns>\n</API>\n\n### `useColorsCustom`\n\nA behavior hook for custom colors in a color picker.\n\n<API name=\"useColorsCustom\">\n<APIState>\n  <APIItem name=\"updateCustomColor\" type=\"function\">\n    Callback to update the custom color.\n  </APIItem>\n  <APIItem name=\"value\" type=\"string\">\n    Current color input value.\n  </APIItem>\n  <APIItem name=\"setValue\" type=\"function\">\n    Callback to update the color value.\n  </APIItem>\n</APIState>\n\n<APIReturns type=\"object\">\n  <APIItem name=\"inputProps\" type=\"object\">\n    Props for the color input element.\n    <APISubList>\n      <APISubListItem parent=\"inputProps\" name=\"value\" type=\"string\">\n        The current value of the color input.\n      </APISubListItem>\n      <APISubListItem parent=\"inputProps\" name=\"onChange\" type=\"function\">\n        A callback function to handle the change event of the color input.\n      </APISubListItem>\n    </APISubList>\n  </APIItem>\n  <APIItem name=\"menuItemProps\" type=\"object\">\n    Props for menu item elements.\n     <APISubList>\n      <APISubListItem parent=\"menuItemProps\" name=\"onSelect\" type=\"function\">\n        A callback function to handle the select event of the menu item.\n      </APISubListItem>\n    </APISubList>\n  </APIItem>\n</APIReturns>\n</API>",
      "type": "registry:file",
      "target": "content/docs/plate/plugins/font.mdx"
    }
  ]
}