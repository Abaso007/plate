{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "mention-element",
  "type": "registry:ui",
  "title": "Mention Element",
  "description": "A mention element with customizable prefix and label.",
  "dependencies": [
    "@udecode/plate-mention"
  ],
  "registryDependencies": [
    "http://localhost:3000/r/use-mounted"
  ],
  "files": [
    {
      "path": "src/registry/ui/mention-element.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\n\nimport type { TMentionElement } from '@udecode/plate-mention';\nimport type { PlateElementProps } from '@udecode/plate/react';\n\nimport { cn } from '@udecode/cn';\nimport { IS_APPLE } from '@udecode/plate';\nimport {\n  PlateElement,\n  useFocused,\n  useReadOnly,\n  useSelected,\n} from '@udecode/plate/react';\n\nimport { useMounted } from '@/registry/hooks/use-mounted';\n\nexport function MentionElement(\n  props: PlateElementProps<TMentionElement> & {\n    prefix?: string;\n  }\n) {\n  const element = props.element;\n  const selected = useSelected();\n  const focused = useFocused();\n  const mounted = useMounted();\n  const readOnly = useReadOnly();\n\n  return (\n    <PlateElement\n      {...props}\n      className={cn(\n        'inline-block rounded-md bg-muted px-1.5 py-0.5 align-baseline text-sm font-medium',\n        !readOnly && 'cursor-pointer',\n        selected && focused && 'ring-2 ring-ring',\n        element.children[0].bold === true && 'font-bold',\n        element.children[0].italic === true && 'italic',\n        element.children[0].underline === true && 'underline'\n      )}\n      attributes={{\n        ...props.attributes,\n        contentEditable: false,\n        'data-slate-value': element.value,\n        draggable: true,\n      }}\n    >\n      {mounted && IS_APPLE ? (\n        // Mac OS IME https://github.com/ianstormtaylor/slate/issues/3490\n        <React.Fragment>\n          {props.children}\n          {props.prefix}\n          {element.value}\n        </React.Fragment>\n      ) : (\n        // Others like Android https://github.com/ianstormtaylor/slate/pull/5360\n        <React.Fragment>\n          {props.prefix}\n          {element.value}\n          {props.children}\n        </React.Fragment>\n      )}\n    </PlateElement>\n  );\n}\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/ui/mention-element-static.tsx",
      "content": "import * as React from 'react';\n\nimport type { SlateElementProps } from '@udecode/plate';\nimport type { TMentionElement } from '@udecode/plate-mention';\n\nimport { cn } from '@udecode/cn';\nimport { IS_APPLE, SlateElement } from '@udecode/plate';\n\nexport function MentionElementStatic(\n  props: SlateElementProps<TMentionElement> & {\n    prefix?: string;\n  }\n) {\n  const { prefix } = props;\n  const element = props.element;\n\n  return (\n    <SlateElement\n      className={cn(\n        'inline-block rounded-md bg-muted px-1.5 py-0.5 align-baseline text-sm font-medium',\n        element.children[0].bold === true && 'font-bold',\n        element.children[0].italic === true && 'italic',\n        element.children[0].underline === true && 'underline'\n      )}\n      data-slate-value={element.value}\n      {...props}\n    >\n      {IS_APPLE ? (\n        // Mac OS IME https://github.com/ianstormtaylor/slate/issues/3490\n        <React.Fragment>\n          {props.children}\n          {prefix}\n          {element.value}\n        </React.Fragment>\n      ) : (\n        // Others like Android https://github.com/ianstormtaylor/slate/pull/5360\n        <React.Fragment>\n          {prefix}\n          {element.value}\n          {props.children}\n        </React.Fragment>\n      )}\n    </SlateElement>\n  );\n}\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "docs": [
      {
        "route": "/docs/mention"
      },
      {
        "route": "https://pro.platejs.org/docs/components/mention-element"
      }
    ],
    "examples": [
      "mention-demo"
    ]
  }
}