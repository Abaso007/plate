{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-chat",
  "type": "registry:component",
  "dependencies": [
    "@ai-sdk/react",
    "@faker-js/faker"
  ],
  "registryDependencies": [
    "button",
    "dialog",
    "input",
    "popover",
    "command"
  ],
  "files": [
    {
      "path": "src/registry/components/editor/use-chat.ts",
      "content": "'use client';\n\nimport * as React from 'react';\n\nimport { useChat as useBaseChat } from '@ai-sdk/react';\nimport { faker } from '@faker-js/faker';\n\nimport { useSettings } from '@/registry/components/editor/settings';\n\nexport const useChat = () => {\n  const { keys, model } = useSettings();\n\n  // remove when you implement the route /api/ai/command\n  const abortControllerRef = React.useRef<AbortController | null>(null);\n  const _abortFakeStream = () => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n    }\n  };\n\n  const chat = useBaseChat({\n    id: 'editor',\n    api: '/api/ai/command',\n    body: {\n      // !!! DEMO ONLY: don't use API keys client-side\n      apiKey: keys.openai,\n      model: model.value,\n    },\n    // Mock the API response. Remove it when you implement the route /api/ai/command\n    fetch: async (input, init) => {\n      const res = await fetch(input, init);\n\n      if (!res.ok) {\n        let sample: 'markdown' | 'mdx' | null = null;\n\n        try {\n          const content = JSON.parse(init?.body as string).messages.at(\n            -1\n          ).content;\n\n          if (content.includes('Generate a markdown sample')) {\n            sample = 'markdown';\n          } else if (content.includes('Generate a mdx sample')) {\n            sample = 'mdx';\n          }\n        } catch {\n          sample = null;\n        }\n\n        abortControllerRef.current = new AbortController();\n        await new Promise((resolve) => setTimeout(resolve, 400));\n\n        const stream = fakeStreamText({\n          sample,\n          signal: abortControllerRef.current.signal,\n        });\n\n        return new Response(stream, {\n          headers: {\n            Connection: 'keep-alive',\n            'Content-Type': 'text/plain',\n          },\n        });\n      }\n\n      return res;\n    },\n  });\n\n  return { ...chat, _abortFakeStream };\n};\n\n// Used for testing. Remove it after implementing useChat api.\nconst fakeStreamText = ({\n  chunkCount = 10,\n  sample = null,\n  signal,\n  streamProtocol = 'data',\n}: {\n  chunkCount?: number;\n  sample?: 'markdown' | 'mdx' | null;\n  signal?: AbortSignal;\n  streamProtocol?: 'data' | 'text';\n} = {}) => {\n  const blocks = (() => {\n    if (sample === 'markdown') {\n      return markdownChunks;\n    }\n\n    if (sample === 'mdx') {\n      return mdxChunks;\n    }\n\n    return [\n      Array.from({ length: chunkCount }, () => ({\n        delay: faker.number.int({ max: 100, min: 30 }),\n        texts: faker.lorem.words({ max: 3, min: 1 }) + ' ',\n      })),\n\n      Array.from({ length: chunkCount + 2 }, () => ({\n        delay: faker.number.int({ max: 100, min: 30 }),\n        texts: faker.lorem.words({ max: 3, min: 1 }) + ' ',\n      })),\n\n      Array.from({ length: chunkCount + 4 }, () => ({\n        delay: faker.number.int({ max: 100, min: 30 }),\n        texts: faker.lorem.words({ max: 3, min: 1 }) + ' ',\n      })),\n    ];\n  })();\n\n  const encoder = new TextEncoder();\n\n  return new ReadableStream({\n    async start(controller) {\n      if (signal?.aborted) {\n        controller.error(new Error('Aborted before start'));\n        return;\n      }\n\n      const abortHandler = () => {\n        controller.error(new Error('Stream aborted'));\n      };\n\n      signal?.addEventListener('abort', abortHandler);\n\n      for (let i = 0; i < blocks.length; i++) {\n        const block = blocks[i];\n\n        // Stream the block content\n        for (const chunk of block) {\n          await new Promise((resolve) => setTimeout(resolve, chunk.delay));\n\n          if (streamProtocol === 'text') {\n            controller.enqueue(encoder.encode(chunk.texts));\n          } else {\n            controller.enqueue(\n              encoder.encode(`0:${JSON.stringify(chunk.texts)}\\n`)\n            );\n          }\n        }\n\n        // Add double newline after each block except the last one\n        if (i < blocks.length - 1) {\n          if (streamProtocol === 'text') {\n            controller.enqueue(encoder.encode('\\n\\n'));\n          } else {\n            controller.enqueue(encoder.encode(`0:${JSON.stringify('\\n\\n')}\\n`));\n          }\n        }\n      }\n\n      if (streamProtocol === 'data') {\n        controller.enqueue(\n          `d:{\"finishReason\":\"stop\",\"usage\":{\"promptTokens\":0,\"completionTokens\":${blocks.reduce(\n            (sum, block) => sum + block.length,\n            0\n          )}}}\\n`\n        );\n      }\n\n      controller.close();\n    },\n  });\n};\n\nconst delay = faker.number.int({ max: 20, min: 5 });\n\nconst markdownChunks = [\n  [\n    { delay, texts: 'Make text ' },\n    { delay, texts: '**bold**' },\n    { delay, texts: ', ' },\n    { delay, texts: '*italic*' },\n    { delay, texts: ', ' },\n    { delay, texts: '__underlined__' },\n    { delay, texts: ', or apply a ' },\n    {\n      delay,\n      texts: '***combination***',\n    },\n    { delay, texts: ' ' },\n    { delay, texts: 'of ' },\n    { delay, texts: 'these ' },\n    { delay, texts: 'styles ' },\n    { delay, texts: 'for ' },\n    { delay, texts: 'a ' },\n    { delay, texts: 'visually ' },\n    { delay, texts: 'striking ' },\n    { delay, texts: 'effect.' },\n    { delay, texts: '\\n\\n' },\n    { delay, texts: 'Add ' },\n    {\n      delay,\n      texts: '~~strikethrough~~',\n    },\n    { delay, texts: ' ' },\n    { delay, texts: 'to ' },\n    { delay, texts: 'indicate ' },\n    { delay, texts: 'deleted ' },\n    { delay, texts: 'or ' },\n    { delay, texts: 'outdated ' },\n    { delay, texts: 'content.' },\n    { delay, texts: '\\n\\n' },\n    { delay, texts: 'Write ' },\n    { delay, texts: 'code ' },\n    { delay, texts: 'snippets ' },\n    { delay, texts: 'with ' },\n    { delay, texts: 'inline ' },\n    { delay, texts: '`code`' },\n    { delay, texts: ' formatting ' },\n    { delay, texts: 'for ' },\n    { delay, texts: 'easy ' },\n    { delay: faker.number.int({ max: 100, min: 30 }), texts: 'readability.' },\n    { delay, texts: '\\n\\n' },\n    { delay, texts: 'Add ' },\n    {\n      delay,\n      texts: '[links](https://example.com)',\n    },\n    { delay: faker.number.int({ max: 100, min: 30 }), texts: ' to ' },\n    { delay: faker.number.int({ max: 100, min: 30 }), texts: 'external ' },\n    { delay, texts: 'resources ' },\n    { delay, texts: 'or ' },\n    {\n      delay,\n      texts: 'references.\\n\\n',\n    },\n\n    { delay, texts: 'Use ' },\n    { delay, texts: 'inline ' },\n    { delay, texts: 'math ' },\n    { delay, texts: 'equations ' },\n    { delay, texts: 'like ' },\n    { delay, texts: '$E = mc^2$ ' },\n    { delay, texts: 'for ' },\n    { delay, texts: 'scientific ' },\n    { delay, texts: 'notation.' },\n    { delay, texts: '\\n\\n' },\n\n    { delay, texts: '# ' },\n    { delay, texts: 'Heading ' },\n    { delay, texts: '1\\n\\n' },\n    { delay, texts: '## ' },\n    { delay, texts: 'Heading ' },\n    { delay, texts: '2\\n\\n' },\n    { delay, texts: '### ' },\n    { delay, texts: 'Heading ' },\n    { delay, texts: '3\\n\\n' },\n    { delay, texts: '> ' },\n    { delay, texts: 'Blockquote\\n\\n' },\n    { delay, texts: '- ' },\n    { delay, texts: 'Unordered ' },\n    { delay, texts: 'list ' },\n    { delay, texts: 'item ' },\n    { delay, texts: '1\\n' },\n    { delay, texts: '- ' },\n    { delay, texts: 'Unordered ' },\n    { delay, texts: 'list ' },\n    { delay, texts: 'item ' },\n    { delay, texts: '2\\n\\n' },\n    { delay, texts: '1. ' },\n    { delay, texts: 'Ordered ' },\n    { delay, texts: 'list ' },\n    { delay, texts: 'item ' },\n    { delay, texts: '1\\n' },\n    { delay, texts: '2. ' },\n    { delay, texts: 'Ordered ' },\n    { delay, texts: 'list ' },\n    { delay, texts: 'item ' },\n    { delay, texts: '2\\n\\n' },\n    { delay, texts: '- ' },\n    { delay, texts: '[ ' },\n    { delay, texts: '] ' },\n    { delay, texts: 'Task ' },\n    { delay, texts: 'list ' },\n    { delay, texts: 'item ' },\n    { delay, texts: '1\\n' },\n    { delay, texts: '- ' },\n    { delay, texts: '[x] ' },\n    { delay, texts: 'Task ' },\n    { delay, texts: 'list ' },\n    { delay, texts: 'item ' },\n    { delay, texts: '2\\n\\n' },\n    { delay, texts: '![Alt ' },\n    {\n      delay,\n      texts:\n        'text](https://images.unsplash.com/photo-1712688930249-98e1963af7bd?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)\\n\\n',\n    },\n    {\n      delay,\n      texts: '### Advantage blocks:\\n',\n    },\n    { delay, texts: '\\n' },\n    { delay, texts: '$$\\n' },\n    {\n      delay,\n      texts: 'a^2 + b^2 = c^2\\n',\n    },\n    { delay, texts: '$$\\n' },\n    { delay, texts: '\\n' },\n    { delay, texts: '```python\\n' },\n    { delay, texts: '# ' },\n    { delay, texts: 'Code ' },\n    { delay, texts: 'block\\n' },\n    { delay, texts: 'print(\"Hello, ' },\n    { delay, texts: 'World!\")\\n' },\n    { delay, texts: '```\\n\\n' },\n    { delay, texts: 'Horizontal ' },\n    { delay, texts: 'rule\\n\\n' },\n    { delay, texts: '---\\n\\n' },\n    { delay, texts: '| ' },\n    { delay, texts: 'Header ' },\n    { delay, texts: '1 ' },\n    { delay, texts: '| ' },\n    { delay, texts: 'Header ' },\n    { delay, texts: '2 ' },\n    { delay, texts: '|\\n' },\n    {\n      delay,\n      texts: '|----------|----------|\\n',\n    },\n    { delay, texts: '| ' },\n    { delay, texts: 'Row ' },\n    { delay, texts: '1   ' },\n    { delay, texts: ' | ' },\n    { delay, texts: 'Data    ' },\n    { delay, texts: ' |\\n' },\n    { delay, texts: '| ' },\n    { delay, texts: 'Row ' },\n    { delay, texts: '2   ' },\n    { delay, texts: ' | ' },\n    { delay, texts: 'Data    ' },\n    { delay, texts: ' |' },\n  ],\n];\n\nconst mdxChunks = [\n  [\n    {\n      delay,\n      texts: '## ',\n    },\n    {\n      delay,\n      texts: 'Basic ',\n    },\n    {\n      delay,\n      texts: 'Markdown\\n\\n',\n    },\n    {\n      delay,\n      texts: '> ',\n    },\n    {\n      delay,\n      texts: 'The ',\n    },\n    {\n      delay,\n      texts: 'following ',\n    },\n    {\n      delay,\n      texts: 'node ',\n    },\n    {\n      delay,\n      texts: 'and ',\n    },\n    {\n      delay,\n      texts: 'marks ',\n    },\n    {\n      delay,\n      texts: 'is ',\n    },\n    {\n      delay,\n      texts: 'supported ',\n    },\n    {\n      delay,\n      texts: 'by ',\n    },\n    {\n      delay,\n      texts: 'the ',\n    },\n    {\n      delay,\n      texts: 'Markdown ',\n    },\n    {\n      delay,\n      texts: 'standard.\\n\\n',\n    },\n    {\n      delay,\n      texts: 'Format ',\n    },\n    {\n      delay,\n      texts: 'text ',\n    },\n    {\n      delay,\n      texts: 'with **b',\n    },\n    {\n      delay,\n      texts: 'old**, _',\n    },\n    {\n      delay,\n      texts: 'italic_,',\n    },\n    {\n      delay,\n      texts: ' _**comb',\n    },\n    {\n      delay,\n      texts: 'ined sty',\n    },\n    {\n      delay,\n      texts: 'les**_, ',\n    },\n    {\n      delay,\n      texts: '~~strike',\n    },\n    {\n      delay,\n      texts: 'through~',\n    },\n    {\n      delay,\n      texts: '~, `code',\n    },\n    {\n      delay,\n      texts: '` format',\n    },\n    {\n      delay,\n      texts: 'ting, an',\n    },\n    {\n      delay,\n      texts: 'd [hyper',\n    },\n    {\n      delay,\n      texts: 'links](https://en.wikipedia.org/wiki/Hypertext).\\n\\n',\n    },\n    {\n      delay,\n      texts: '```javascript\\n',\n    },\n    {\n      delay,\n      texts: '// Use code blocks to showcase code snippets\\n',\n    },\n    {\n      delay,\n      texts: 'function greet() {\\n',\n    },\n    {\n      delay,\n      texts: '  console.info(\"Hello World!\")\\n',\n    },\n    {\n      delay,\n      texts: '}\\n',\n    },\n    {\n      delay,\n      texts: '```\\n\\n',\n    },\n    {\n      delay,\n      texts: '- Simple',\n    },\n    {\n      delay,\n      texts: ' lists f',\n    },\n    {\n      delay,\n      texts: 'or organ',\n    },\n    {\n      delay,\n      texts: 'izing co',\n    },\n    {\n      delay,\n      texts: 'ntent\\n',\n    },\n    {\n      delay,\n      texts: '1. ',\n    },\n    {\n      delay,\n      texts: 'Numbered ',\n    },\n    {\n      delay,\n      texts: 'lists ',\n    },\n    {\n      delay,\n      texts: 'for ',\n    },\n    {\n      delay,\n      texts: 'sequential ',\n    },\n    {\n      delay,\n      texts: 'steps\\n\\n',\n    },\n    {\n      delay,\n      texts: '| **Plugin**  | **Element** | **Inline** | **Void** |\\n',\n    },\n    {\n      delay,\n      texts: '| ----------- | ----------- | ---------- | -------- |\\n',\n    },\n    {\n      delay,\n      texts: '| **Heading** |             |            | No       |\\n',\n    },\n    {\n      delay,\n      texts: '| **Image**   | Yes         | No         | Yes      |\\n',\n    },\n    {\n      delay,\n      texts: '| **Ment',\n    },\n    {\n      delay,\n      texts: 'ion** | Yes         | Yes        | Yes      |\\n\\n',\n    },\n    {\n      delay,\n      texts:\n        '![](https://images.unsplash.com/photo-1712688930249-98e1963af7bd?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)\\n\\n',\n    },\n    {\n      delay,\n      texts: '- [x] Co',\n    },\n    {\n      delay,\n      texts: 'mpleted ',\n    },\n    {\n      delay,\n      texts: 'tasks\\n',\n    },\n    {\n      delay,\n      texts: '- [ ] Pe',\n    },\n    {\n      delay,\n      texts: 'nding ta',\n    },\n    {\n      delay,\n      texts: 'sks\\n\\n',\n    },\n    {\n      delay,\n      texts: '---\\n\\n## Advan',\n    },\n    {\n      delay,\n      texts: 'ced Feat',\n    },\n    {\n      delay,\n      texts: 'ures\\n\\n',\n    },\n    {\n      delay,\n      texts: '<callout> ',\n    },\n    {\n      delay,\n      texts: 'The ',\n    },\n    {\n      delay,\n      texts: 'following ',\n    },\n    {\n      delay,\n      texts: 'node ',\n    },\n    {\n      delay,\n      texts: 'and ',\n    },\n    {\n      delay,\n      texts: 'marks ',\n    },\n    {\n      delay,\n      texts: 'are ',\n    },\n    {\n      delay,\n      texts: 'not ',\n    },\n    {\n      delay,\n      texts: 'supported ',\n    },\n    {\n      delay,\n      texts: 'in ',\n    },\n    {\n      delay,\n      texts: 'Markdown ',\n    },\n    {\n      delay,\n      texts: 'but ',\n    },\n    {\n      delay,\n      texts: 'can ',\n    },\n    {\n      delay,\n      texts: 'be ',\n    },\n    {\n      delay,\n      texts: 'serialized ',\n    },\n    {\n      delay,\n      texts: 'and ',\n    },\n    {\n      delay,\n      texts: 'deserialized ',\n    },\n    {\n      delay,\n      texts: 'using ',\n    },\n    {\n      delay,\n      texts: 'MDX ',\n    },\n    {\n      delay,\n      texts: 'or ',\n    },\n    {\n      delay,\n      texts: 'specialized ',\n    },\n    {\n      delay,\n      texts: 'UnifiedJS ',\n    },\n    {\n      delay,\n      texts: 'plugins. ',\n    },\n    {\n      delay,\n      texts: '</callout>\\n\\n',\n    },\n    {\n      delay,\n      texts: 'Advanced ',\n    },\n    {\n      delay,\n      texts: 'marks: ',\n    },\n    {\n      delay,\n      texts: '<kbd>⌘ ',\n    },\n    {\n      delay,\n      texts: '+ ',\n    },\n    {\n      delay,\n      texts: 'B</kbd>,<u>underlined</u>, ',\n    },\n    {\n      delay,\n      texts: '<mark',\n    },\n    {\n      delay,\n      texts: '>highli',\n    },\n    {\n      delay,\n      texts: 'ghted</m',\n    },\n    {\n      delay,\n      texts: 'ark',\n    },\n    {\n      delay,\n      texts: '> text, ',\n    },\n    {\n      delay,\n      texts: '<span s',\n    },\n    {\n      delay,\n      texts: 'tyle=\"co',\n    },\n    {\n      delay,\n      texts: 'lor: #93',\n    },\n    {\n      delay,\n      texts: 'C47D;\">c',\n    },\n    {\n      delay,\n      texts: 'olored t',\n    },\n    {\n      delay,\n      texts: 'ext</spa',\n    },\n    {\n      delay,\n      texts: 'n> and ',\n    },\n    {\n      delay,\n      texts: '<spa',\n    },\n    {\n      delay,\n      texts: 'n',\n    },\n    {\n      delay,\n      texts: ' style=\"',\n    },\n    {\n      delay,\n      texts: 'backgrou',\n    },\n    {\n      delay,\n      texts: 'nd-color',\n    },\n    {\n      delay,\n      texts: ': #6C9EE',\n    },\n    {\n      delay,\n      texts: 'B;\">back',\n    },\n    {\n      delay,\n      texts: 'ground h',\n    },\n    {\n      delay,\n      texts: 'ighlight',\n    },\n    {\n      delay,\n      texts: 's</spa',\n    },\n    {\n      delay,\n      texts: 'n> for ',\n    },\n    {\n      delay,\n      texts: 'visual e',\n    },\n    {\n      delay,\n      texts: 'mphasis.\\n\\n',\n    },\n    {\n      delay,\n      texts: 'Superscript ',\n    },\n    {\n      delay,\n      texts: 'like ',\n    },\n    {\n      delay,\n      texts: 'E=mc<sup>2</sup> ',\n    },\n    {\n      delay,\n      texts: 'and ',\n    },\n    {\n      delay,\n      texts: 'subscript ',\n    },\n    {\n      delay,\n      texts: 'like ',\n    },\n    {\n      delay,\n      texts: 'H<sub>2</sub>O ',\n    },\n    {\n      delay,\n      texts: 'demonstrate ',\n    },\n    {\n      delay,\n      texts: 'mathematical ',\n    },\n    {\n      delay,\n      texts: 'and ',\n    },\n    {\n      delay,\n      texts: 'chemical ',\n    },\n    {\n      delay,\n      texts: 'notation ',\n    },\n    {\n      delay,\n      texts: 'capabilities.\\n\\n',\n    },\n    {\n      delay,\n      texts: 'Add ',\n    },\n    {\n      delay,\n      texts: 'mentions ',\n    },\n    {\n      delay,\n      texts: 'like ',\n    },\n    {\n      delay,\n      texts: '@BB-8, d',\n    },\n    {\n      delay,\n      texts: 'ates (<d',\n    },\n    {\n      delay,\n      texts: 'ate>2025',\n    },\n    {\n      delay,\n      texts: '-05-08</',\n    },\n    {\n      delay,\n      texts: 'date>), ',\n    },\n    {\n      delay,\n      texts: 'and math',\n    },\n    {\n      delay,\n      texts: ' formula',\n    },\n    {\n      delay,\n      texts: 's ($E=mc',\n    },\n    {\n      delay,\n      texts: '^2$).\\n\\n',\n    },\n    {\n      delay,\n      texts: 'The ',\n    },\n    {\n      delay,\n      texts: 'table ',\n    },\n    {\n      delay,\n      texts: 'of ',\n    },\n    {\n      delay,\n      texts: 'contents ',\n    },\n    {\n      delay,\n      texts: 'feature ',\n    },\n    {\n      delay,\n      texts: 'automatically ',\n    },\n    {\n      delay,\n      texts: 'generates ',\n    },\n    {\n      delay,\n      texts: 'document ',\n    },\n    {\n      delay,\n      texts: 'structure ',\n    },\n    {\n      delay,\n      texts: 'for ',\n    },\n    {\n      delay,\n      texts: 'easy ',\n    },\n    {\n      delay,\n      texts: 'navigation.\\n\\n',\n    },\n    {\n      delay,\n      texts: '<toc ',\n    },\n    {\n      delay,\n      texts: '/>\\n\\n',\n    },\n    {\n      delay,\n      texts: 'Math ',\n    },\n    {\n      delay,\n      texts: 'formula ',\n    },\n    {\n      delay,\n      texts: 'support ',\n    },\n    {\n      delay,\n      texts: 'makes ',\n    },\n    {\n      delay,\n      texts: 'displaying ',\n    },\n    {\n      delay,\n      texts: 'complex ',\n    },\n    {\n      delay,\n      texts: 'mathematical ',\n    },\n    {\n      delay,\n      texts: 'expressions ',\n    },\n    {\n      delay,\n      texts: 'simple.\\n\\n',\n    },\n    {\n      delay,\n      texts: '$$\\n',\n    },\n    {\n      delay,\n      texts: 'a^2',\n    },\n    {\n      delay,\n      texts: '+b^2',\n    },\n    {\n      delay,\n      texts: '=c^2\\n',\n    },\n    {\n      delay,\n      texts: '$$\\n\\n',\n    },\n    {\n      delay,\n      texts: 'Multi-co',\n    },\n    {\n      delay,\n      texts: 'lumn lay',\n    },\n    {\n      delay,\n      texts: 'out feat',\n    },\n    {\n      delay,\n      texts: 'ures ena',\n    },\n    {\n      delay,\n      texts: 'ble rich',\n    },\n    {\n      delay,\n      texts: 'er page ',\n    },\n    {\n      delay,\n      texts: 'designs ',\n    },\n    {\n      delay,\n      texts: 'and cont',\n    },\n    {\n      delay,\n      texts: 'ent layo',\n    },\n    {\n      delay,\n      texts: 'uts.\\n\\n',\n    },\n    // {\n    //  delay,\n    //   texts: '<column_group layout=\"[50,50]\">\\n',\n    // },\n    // {\n    //  delay,\n    //   texts: '<column width=\"50%\">\\n',\n    // },\n    // {\n    //  delay,\n    //   texts: '  left\\n',\n    // },\n    // {\n    //  delay,\n    //   texts: '</column>\\n',\n    // },\n    // {\n    //  delay,\n    //   texts: '<column width=\"50%\">\\n',\n    // },\n    // {\n    //  delay,\n    //   texts: '  right\\n',\n    // },\n    // {\n    //  delay,\n    //   texts: '</column>\\n',\n    // },\n    // {\n    //  delay,\n    //   texts: '</column_group>\\n\\n',\n    // },\n    {\n      delay,\n      texts: 'PDF ',\n    },\n    {\n      delay,\n      texts: 'embedding ',\n    },\n    {\n      delay,\n      texts: 'makes ',\n    },\n    {\n      delay,\n      texts: 'document ',\n    },\n    {\n      delay,\n      texts: 'referencing ',\n    },\n    {\n      delay,\n      texts: 'simple ',\n    },\n    {\n      delay,\n      texts: 'and ',\n    },\n    {\n      delay,\n      texts: 'intuitive.\\n\\n',\n    },\n    {\n      delay,\n      texts: '<file ',\n    },\n    {\n      delay,\n      texts: 'name=\"sample.pdf\" ',\n    },\n    {\n      delay,\n      texts: 'align=\"center\" ',\n    },\n    {\n      delay,\n      texts:\n        'src=\"https://s26.q4cdn.com/900411403/files/doc_downloads/test.pdf\" width=\"80%\" isUpload=\"true\" />\\n\\n',\n    },\n    {\n      delay,\n      texts: 'Audio ',\n    },\n    {\n      delay,\n      texts: 'players ',\n    },\n    {\n      delay,\n      texts: 'can ',\n    },\n    {\n      delay,\n      texts: 'be ',\n    },\n    {\n      delay,\n      texts: 'embedded ',\n    },\n    {\n      delay,\n      texts: 'directly ',\n    },\n    {\n      delay,\n      texts: 'into ',\n    },\n    {\n      delay,\n      texts: 'documents, ',\n    },\n    {\n      delay,\n      texts: 'supporting ',\n    },\n    {\n      delay,\n      texts: 'online ',\n    },\n    {\n      delay,\n      texts: 'audio ',\n    },\n    {\n      delay,\n      texts: 'resources.\\n\\n',\n    },\n    {\n      delay,\n      texts: '<audio ',\n    },\n    {\n      delay,\n      texts: 'align=\"center\" ',\n    },\n    {\n      delay,\n      texts:\n        'src=\"https://samplelib.com/lib/preview/mp3/sample-3s.mp3\" width=\"80%\" />\\n\\n',\n    },\n    {\n      delay,\n      texts: 'Video ',\n    },\n    {\n      delay,\n      texts: 'playback ',\n    },\n    {\n      delay,\n      texts: 'features ',\n    },\n    {\n      delay,\n      texts: 'support ',\n    },\n    {\n      delay,\n      texts: 'embedding ',\n    },\n    {\n      delay,\n      texts: 'various ',\n    },\n    {\n      delay,\n      texts: 'online ',\n    },\n    {\n      delay,\n      texts: 'video ',\n    },\n    {\n      delay,\n      texts: 'resources, ',\n    },\n    {\n      delay,\n      texts: 'enriching ',\n    },\n    {\n      delay,\n      texts: 'document ',\n    },\n    {\n      delay,\n      texts: 'content.\\n\\n',\n    },\n    {\n      delay,\n      texts: '<video ',\n    },\n    {\n      delay,\n      texts: 'align=\"center\" ',\n    },\n    {\n      delay,\n      texts:\n        'src=\"https://videos.pexels.com/video-files/6769791/6769791-uhd_2560_1440_24fps.mp4\" width=\"80%\" isUpload=\"true\" />',\n    },\n  ],\n];\n",
      "type": "registry:component"
    },
    {
      "path": "src/registry/components/editor/settings.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\n\nimport { CopilotPlugin } from '@udecode/plate-ai/react';\nimport { useEditorPlugin } from '@udecode/plate/react';\nimport {\n  Check,\n  ChevronsUpDown,\n  ExternalLinkIcon,\n  Eye,\n  EyeOff,\n  Settings,\n  Wand2Icon,\n} from 'lucide-react';\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from '@/components/ui/command';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Input } from '@/components/ui/input';\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover';\nimport { cn } from '@/lib/utils';\n\ninterface Model {\n  label: string;\n  value: string;\n}\n\ninterface SettingsContextType {\n  keys: Record<string, string>;\n  model: Model;\n  setKey: (service: string, key: string) => void;\n  setModel: (model: Model) => void;\n}\n\nexport const models: Model[] = [\n  { label: 'gpt-4o-mini', value: 'gpt-4o-mini' },\n  { label: 'gpt-4o', value: 'gpt-4o' },\n  { label: 'gpt-4-turbo', value: 'gpt-4-turbo' },\n  { label: 'gpt-4', value: 'gpt-4' },\n  { label: 'gpt-3.5-turbo', value: 'gpt-3.5-turbo' },\n  { label: 'gpt-3.5-turbo-instruct', value: 'gpt-3.5-turbo-instruct' },\n];\n\nconst SettingsContext = React.createContext<SettingsContextType | undefined>(\n  undefined\n);\n\nexport function SettingsProvider({ children }: { children: React.ReactNode }) {\n  const [keys, setKeys] = React.useState({\n    openai: '',\n    uploadthing: '',\n  });\n  const [model, setModel] = React.useState<Model>(models[0]);\n\n  const setKey = (service: string, key: string) => {\n    setKeys((prev) => ({ ...prev, [service]: key }));\n  };\n\n  return (\n    <SettingsContext.Provider value={{ keys, model, setKey, setModel }}>\n      {children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport function useSettings() {\n  const context = React.useContext(SettingsContext);\n\n  return (\n    context ?? {\n      keys: {\n        openai: '',\n        uploadthing: '',\n      },\n      model: models[0],\n      setKey: () => {},\n      setModel: () => {},\n    }\n  );\n}\n\nexport function SettingsDialog() {\n  const { keys, model, setKey, setModel } = useSettings();\n  const [tempKeys, setTempKeys] = React.useState(keys);\n  const [showKey, setShowKey] = React.useState<Record<string, boolean>>({});\n  const [open, setOpen] = React.useState(false);\n  const [openModel, setOpenModel] = React.useState(false);\n\n  const { getOptions, setOption } = useEditorPlugin(CopilotPlugin);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    Object.entries(tempKeys).forEach(([service, key]) => {\n      setKey(service, key);\n    });\n    setOpen(false);\n\n    // Update AI options if needed\n    const completeOptions = getOptions().completeOptions ?? {};\n    setOption('completeOptions', {\n      ...completeOptions,\n      body: {\n        ...completeOptions.body,\n        apiKey: tempKeys.openai,\n        model: model.value,\n      },\n    });\n  };\n\n  const toggleKeyVisibility = (key: string) => {\n    setShowKey((prev) => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  const renderApiKeyInput = (service: string, label: string) => (\n    <div className=\"group relative\">\n      <div className=\"flex items-center justify-between\">\n        <label\n          className=\"absolute top-1/2 block -translate-y-1/2 cursor-text px-1 text-sm text-muted-foreground/70 transition-all group-focus-within:pointer-events-none group-focus-within:top-0 group-focus-within:cursor-default group-focus-within:text-xs group-focus-within:font-medium group-focus-within:text-foreground has-[+input:not(:placeholder-shown)]:pointer-events-none has-[+input:not(:placeholder-shown)]:top-0 has-[+input:not(:placeholder-shown)]:cursor-default has-[+input:not(:placeholder-shown)]:text-xs has-[+input:not(:placeholder-shown)]:font-medium has-[+input:not(:placeholder-shown)]:text-foreground\"\n          htmlFor={label}\n        >\n          <span className=\"inline-flex bg-background px-2\">{label}</span>\n        </label>\n        <Button\n          asChild\n          size=\"icon\"\n          variant=\"ghost\"\n          className=\"absolute top-0 right-[28px] h-full\"\n        >\n          <a\n            className=\"flex items-center\"\n            href={\n              service === 'openai'\n                ? 'https://platform.openai.com/api-keys'\n                : 'https://uploadthing.com/dashboard'\n            }\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <ExternalLinkIcon className=\"size-4\" />\n            <span className=\"sr-only\">Get {label}</span>\n          </a>\n        </Button>\n      </div>\n\n      <Input\n        id={label}\n        className=\"pr-10\"\n        value={tempKeys[service]}\n        onChange={(e) =>\n          setTempKeys((prev) => ({ ...prev, [service]: e.target.value }))\n        }\n        placeholder=\"\"\n        data-1p-ignore\n        type={showKey[service] ? 'text' : 'password'}\n      />\n      <Button\n        size=\"icon\"\n        variant=\"ghost\"\n        className=\"absolute top-0 right-0 h-full\"\n        onClick={() => toggleKeyVisibility(service)}\n        type=\"button\"\n      >\n        {showKey[service] ? (\n          <EyeOff className=\"size-4\" />\n        ) : (\n          <Eye className=\"size-4\" />\n        )}\n        <span className=\"sr-only\">\n          {showKey[service] ? 'Hide' : 'Show'} {label}\n        </span>\n      </Button>\n    </div>\n  );\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button\n          size=\"icon\"\n          variant=\"default\"\n          className={cn(\n            'group fixed right-4 bottom-4 z-50 size-10 overflow-hidden',\n            'rounded-full shadow-md hover:shadow-lg'\n          )}\n          data-block-hide\n        >\n          <Settings className=\"size-4\" />\n        </Button>\n      </DialogTrigger>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle className=\"text-xl\">Settings</DialogTitle>\n          <DialogDescription>\n            Configure your API keys and preferences.\n          </DialogDescription>\n        </DialogHeader>\n\n        <form className=\"space-y-10\" onSubmit={handleSubmit}>\n          {/* AI Settings Group */}\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"size-8 rounded-full bg-purple-100 p-2 dark:bg-purple-900\">\n                <Wand2Icon className=\"size-4 text-purple-600 dark:text-purple-400\" />\n              </div>\n              <h4 className=\"font-semibold\">AI</h4>\n            </div>\n\n            <div className=\"space-y-4\">\n              {renderApiKeyInput('openai', 'OpenAI API key')}\n\n              <div className=\"group relative\">\n                <label\n                  className=\"absolute start-1 top-0 z-10 block -translate-y-1/2 bg-background px-2 text-xs font-medium text-foreground group-has-disabled:opacity-50\"\n                  htmlFor=\"select-model\"\n                >\n                  Model\n                </label>\n                <Popover open={openModel} onOpenChange={setOpenModel}>\n                  <PopoverTrigger id=\"select-model\" asChild>\n                    <Button\n                      size=\"lg\"\n                      variant=\"outline\"\n                      className=\"w-full justify-between\"\n                      aria-expanded={openModel}\n                      role=\"combobox\"\n                    >\n                      <code>{model.label}</code>\n                      <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n                    </Button>\n                  </PopoverTrigger>\n                  <PopoverContent className=\"w-full p-0\">\n                    <Command>\n                      <CommandInput placeholder=\"Search model...\" />\n                      <CommandEmpty>No model found.</CommandEmpty>\n                      <CommandList>\n                        <CommandGroup>\n                          {models.map((m) => (\n                            <CommandItem\n                              key={m.value}\n                              value={m.value}\n                              onSelect={() => {\n                                setModel(m);\n                                setOpenModel(false);\n                              }}\n                            >\n                              <Check\n                                className={cn(\n                                  'mr-2 size-4',\n                                  model.value === m.value\n                                    ? 'opacity-100'\n                                    : 'opacity-0'\n                                )}\n                              />\n                              <code>{m.label}</code>\n                            </CommandItem>\n                          ))}\n                        </CommandGroup>\n                      </CommandList>\n                    </Command>\n                  </PopoverContent>\n                </Popover>\n              </div>\n            </div>\n          </div>\n\n          {/* Upload Settings Group */}\n          {/* <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"size-8 rounded-full bg-red-100 p-2 dark:bg-red-900\">\n                <Upload className=\"size-4 text-red-600 dark:text-red-400\" />\n              </div>\n              <h4 className=\"font-semibold\">Upload</h4>\n            </div>\n\n            <div className=\"space-y-4\">\n              {renderApiKeyInput('uploadthing', 'Uploadthing API key')}\n            </div>\n          </div> */}\n\n          <Button size=\"lg\" className=\"w-full\" type=\"submit\">\n            Save changes\n          </Button>\n        </form>\n\n        <p className=\"text-sm text-muted-foreground\">\n          Not stored anywhere. Used only for current session requests.\n        </p>\n      </DialogContent>\n    </Dialog>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}