{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "reset-block-type-kit",
  "type": "registry:component",
  "dependencies": [
    "@udecode/plate-code-block"
  ],
  "files": [
    {
      "path": "src/registry/components/editor/plugins/reset-block-type-kit.tsx",
      "content": "'use client';\n\nimport { KEYS } from '@udecode/plate';\nimport {\n  isCodeBlockEmpty,\n  isSelectionAtCodeBlockStart,\n  unwrapCodeBlock,\n} from '@udecode/plate-code-block';\nimport { ResetNodePlugin } from '@udecode/plate/react';\n\nconst resetBlockTypesCommonRule = {\n  defaultType: KEYS.p,\n  types: [...KEYS.heading, KEYS.blockquote, KEYS.callout],\n};\n\nconst resetBlockTypesCodeBlockRule = {\n  defaultType: KEYS.p,\n  types: [KEYS.codeBlock],\n  onReset: unwrapCodeBlock,\n};\n\nexport const ResetBlockTypeKit = [\n  ResetNodePlugin.configure({\n    options: {\n      rules: [\n        {\n          ...resetBlockTypesCommonRule,\n          hotkey: 'Enter',\n          predicate: (editor) =>\n            editor.api.isEmpty(editor.selection, { block: true }),\n        },\n        {\n          ...resetBlockTypesCommonRule,\n          hotkey: 'Backspace',\n          predicate: (editor) => editor.api.isAt({ start: true }),\n        },\n        {\n          ...resetBlockTypesCodeBlockRule,\n          hotkey: 'Enter',\n          predicate: isCodeBlockEmpty,\n        },\n        {\n          ...resetBlockTypesCodeBlockRule,\n          hotkey: 'Backspace',\n          predicate: isSelectionAtCodeBlockStart,\n        },\n      ],\n    },\n  }),\n];\n",
      "type": "registry:component"
    }
  ]
}