{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ai-leaf",
  "type": "registry:ui",
  "title": "AI Leaf",
  "description": "A text highlighter for AI-generated content.",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/registry/ui/ai-leaf.tsx",
      "content": "'use client';\n\nimport { AIChatPlugin } from '@udecode/plate-ai/react';\nimport { type PlateTextProps, PlateText } from '@udecode/plate/react';\nimport { cva } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst aiIndicatorVariants = cva(\n  'after:ml-1.5 after:inline-block after:h-3 after:w-3 after:animate-pulse after:rounded-full after:bg-primary after:align-middle after:content-[\"\"]'\n);\n\nexport function AILeaf(props: PlateTextProps) {\n  const streamingLeaf = props.editor\n    .getApi(AIChatPlugin)\n    .aiChat.node({ streaming: true });\n\n  const isLast = streamingLeaf?.[0] === props.text;\n\n  return (\n    <PlateText\n      className={cn(\n        'border-b-2 border-b-purple-100 bg-purple-50 text-purple-800',\n        'transition-all duration-200 ease-in-out',\n        isLast && aiIndicatorVariants()\n      )}\n      {...props}\n    />\n  );\n}\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/ui/ai-anchor-element.tsx",
      "content": "'use client';\n\nimport { type PlateElementProps, PlateElement } from '@udecode/plate/react';\n\nexport function AIAnchorElement(props: PlateElementProps) {\n  return (\n    <PlateElement {...props}>\n      <div className=\"h-[0.1px]\" />\n    </PlateElement>\n  );\n}\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "docs": [
      {
        "route": "/docs/ai",
        "title": "AI"
      },
      {
        "route": "https://pro.platejs.org/docs/components/ai-leaf",
        "title": "AI Leaf"
      }
    ],
    "examples": [
      "ai-demo",
      "ai-pro"
    ],
    "label": "New"
  }
}