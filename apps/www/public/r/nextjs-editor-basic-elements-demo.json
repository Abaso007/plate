{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "nextjs-editor-basic-elements-demo",
  "type": "registry:example",
  "dependencies": ["@udecode/cn"],
  "registryDependencies": [
    "https://platejs.org/r/editor",
    "https://platejs.org/r/fixed-toolbar",
    "https://platejs.org/r/mark-toolbar-button",
    "https://platejs.org/r/heading-element",
    "https://platejs.org/r/paragraph-element"
  ],
  "files": [
    {
      "path": "src/registry/examples/nextjs-editor-basic-elements-demo.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\n\nimport type { Value } from '@udecode/plate';\n\nimport { withProps } from '@udecode/cn';\nimport { BasicElementsPlugin } from '@udecode/plate-basic-elements/react';\nimport { BasicMarksPlugin } from '@udecode/plate-basic-marks/react';\nimport { Plate, usePlateEditor } from '@udecode/plate/react';\n\nimport { Editor, EditorContainer } from '@/registry/ui/editor';\nimport { FixedToolbar } from '@/registry/ui/fixed-toolbar';\nimport { HeadingElement } from '@/registry/ui/heading-element';\nimport { MarkToolbarButton } from '@/registry/ui/mark-toolbar-button';\nimport { ParagraphElement } from '@/registry/ui/paragraph-element';\n\nconst initialValueWithHeading: Value = [\n  {\n    children: [{ text: 'My Awesome Title' }],\n    type: 'h1',\n  },\n  {\n    children: [{ text: 'This is a paragraph below the title.' }],\n    type: 'p',\n  },\n  {\n    children: [\n      { text: 'With some ' },\n      { bold: true, text: 'bold' },\n      { text: ' text for emphasis!' },\n    ],\n    type: 'p',\n  },\n];\n\nexport default function NextJsEditorBasicElementsDemo() {\n  const [editorValue, setEditorValue] = React.useState<Value>(\n    initialValueWithHeading\n  );\n\n  React.useEffect(() => {\n    const savedValue = localStorage.getItem('nextjs-plate-elements-demo');\n    if (savedValue) {\n      try {\n        setEditorValue(JSON.parse(savedValue));\n      } catch (error) {\n        console.error('Failed to parse saved editor content:', error);\n        localStorage.setItem(\n          'nextjs-plate-elements-demo',\n          JSON.stringify(initialValueWithHeading)\n        );\n      }\n    }\n  }, []);\n\n  const editor = usePlateEditor({\n    components: {\n      h1: withProps(HeadingElement, { variant: 'h1' }),\n      h2: withProps(HeadingElement, { variant: 'h2' }),\n      h3: withProps(HeadingElement, { variant: 'h3' }),\n      p: ParagraphElement,\n      // Bold, Italic, Underline are usually handled by PlateLeaf within BasicMarksPlugin or specific UI components\n      // If not, you might need to map them here:\n      // bold: withProps(PlateLeaf, { as: 'strong' }),\n    },\n    plugins: [BasicElementsPlugin, BasicMarksPlugin],\n    value: editorValue,\n  });\n\n  return (\n    <div className=\"m-8 max-w-4xl rounded-lg border p-4 shadow\">\n      <Plate\n        onChange={({ value }) => {\n          setEditorValue(value);\n          localStorage.setItem(\n            'nextjs-plate-elements-demo',\n            JSON.stringify(value)\n          );\n        }}\n        editor={editor}\n      >\n        <FixedToolbar>\n          <MarkToolbarButton nodeType=\"bold\" tooltip=\"Bold (⌘+B)\">\n            B\n          </MarkToolbarButton>\n          <MarkToolbarButton nodeType=\"italic\" tooltip=\"Italic (⌘+I)\">\n            I\n          </MarkToolbarButton>\n          <MarkToolbarButton nodeType=\"underline\" tooltip=\"Underline (⌘+U)\">\n            U\n          </MarkToolbarButton>\n        </FixedToolbar>\n        <EditorContainer className=\"mt-2\">\n          <Editor placeholder=\"Type your amazing content here...\" />\n        </EditorContainer>\n      </Plate>\n    </div>\n  );\n}\n",
      "type": "registry:example"
    }
  ]
}
