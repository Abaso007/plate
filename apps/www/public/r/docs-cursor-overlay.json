{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "docs-cursor-overlay",
  "type": "registry:file",
  "title": "Cursor Overlay",
  "description": "Documentation for Cursor Overlay",
  "files": [
    {
      "path": "../../docs/cursor-overlay.mdx",
      "content": "---\ntitle: Cursor Overlay\ndocs:\n  - route: /docs/components/cursor-overlay\n    title: Cursor Overlay\n---\n\n<ComponentPreview name=\"cursor-overlay-demo\" />\n\n<PackageInfo>\n\nThe Cursor Overlay feature provides visual feedback for selections and cursor positions, particularly useful for maintaining context when the editor loses focus or during drag operations.\n\n## Features\n\n- Maintains selection highlight when another element is focused\n- Dynamic selection (e.g. during AI streaming)\n- Shows cursor position during drag operations\n- Customizable styling for cursors and selections\n- Essential for external UI interactions (e.g. link toolbar, AI combobox)\n\n</PackageInfo>\n\n## Installation\n\n```bash\nnpm install @udecode/plate-selection\n```\n\n## Usage\n\n```tsx\nimport { CursorOverlayPlugin } from '@udecode/plate-selection/react';\nimport { CursorOverlay } from '@/components/ui/cursor-overlay';\n```\n\n- [CursorOverlay](/docs/components/cursor-overlay)\n\n```tsx\nconst plugins = [\n  // ...otherPlugins,\n  CursorOverlayPlugin.configure({\n    render: { afterEditable: () => <CursorOverlay /> },\n  }),\n];\n```\n\n### Editor Container\n\nThe editor requires a container component above `PlateContent` to ensure correct cursor overlay positioning:\n\n```tsx\nexport const EditorContainer = (props: React.HTMLAttributes<HTMLDivElement>) => {\n  const editor = useEditorRef();\n  const containerRef = useEditorContainerRef();\n\n  return <div id={editor.uid} ref={containerRef} {...props} />;\n};\n```\n\nThis component is available in [Editor](/docs/components/editor).\n\n### Preserving Selection Focus\n\nTo maintain the editor's selection state when focusing UI elements, add the `data-plate-focus=\"true\"` attribute to those elements:\n\n```tsx\n<ToolbarButton data-plate-focus=\"true\">\n  {/* toolbar content */}\n</ToolbarButton>\n```\n\n## Plugins\n\n### `CursorOverlayPlugin`\n\nPlugin that manages cursor and selection overlays.\n\n<API name=\"CursorOverlayPlugin\">\n<APIOptions>\n  <APIItem name=\"cursors\" type=\"Record<string, CursorState<CursorData>>\">\n    Object containing cursor states.\n    - **Default:** `{}`\n  </APIItem>\n</APIOptions>\n</API>\n\n## API\n\n### `editor.api.cursorOverlay.addCursor`\n\nAdds a cursor overlay with the specified key and state.\n\n<API name=\"addCursor\">\n<APIParameters>\n  <APIItem name=\"key\" type=\"string\">\n    Unique identifier for the cursor (e.g., 'blur', 'drag', 'custom').\n  </APIItem>\n  <APIItem name=\"cursor\" type=\"CursorState<CursorData>\">\n    The cursor state including selection and optional styling data.\n  </APIItem>\n</APIParameters>\n</API>\n\n### `editor.api.cursorOverlay.removeCursor`\n\nRemoves a cursor overlay by its key.\n\n<API name=\"removeCursor\">\n<APIParameters>\n  <APIItem name=\"key\" type=\"string\">\n    The key of the cursor to remove.\n  </APIItem>\n</APIParameters>\n</API>\n\n## Hooks\n\n### `useCursorOverlay`\n\nA hook that manages cursor and selection overlay states, providing real-time cursor positions and selection rectangles.\n\n<API name=\"useCursorOverlay\">\n<APIOptions type=\"object\">\n  <APIItem name=\"minSelectionWidth\" type=\"number\" optional>\n    Minimum width in pixels for a selection rectangle. Useful for making cursor carets more visible.\n    - **Default:** `1`\n  </APIItem>\n  <APIItem name=\"refreshOnResize\" type=\"boolean\" optional>\n    Whether to recalculate cursor positions when the container is resized.\n    - **Default:** `true`\n  </APIItem>\n</APIOptions>\n\n<APIReturns type=\"object\">\n  <APIItem name=\"cursors\" type=\"CursorOverlayState<TCursorData>[]\">\n    Array of cursor states with their corresponding selection rectangles and styling data.\n  </APIItem>\n  <APIItem name=\"refresh\" type=\"() => void\">\n    Function to manually trigger a recalculation of cursor positions.\n  </APIItem>\n</APIReturns>\n</API>\n",
      "type": "registry:file",
      "target": "content/docs/plate/plugins/cursor-overlay.mdx"
    }
  ]
}