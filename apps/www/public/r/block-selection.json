{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "block-selection",
  "type": "registry:ui",
  "title": "Block Selection",
  "description": "A visual overlay for selected blocks.",
  "dependencies": [
    "@udecode/plate-selection"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/registry/ui/block-selection.tsx",
      "content": "'use client';\n\nimport React from 'react';\n\nimport { DndPlugin } from '@udecode/plate-dnd';\nimport { useBlockSelected } from '@udecode/plate-selection/react';\nimport { usePluginOption } from '@udecode/plate/react';\nimport { type VariantProps, cva } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nexport const blockSelectionVariants = cva(\n  'pointer-events-none absolute inset-0 z-1 bg-brand/[.13] transition-opacity',\n  {\n    defaultVariants: {\n      active: true,\n    },\n    variants: {\n      active: {\n        false: 'opacity-0',\n        true: 'opacity-100',\n      },\n    },\n  }\n);\n\nexport function BlockSelection({\n  className,\n  ...props\n}: React.ComponentProps<'div'> & VariantProps<typeof blockSelectionVariants>) {\n  const isBlockSelected = useBlockSelected();\n  const isDragging = usePluginOption(DndPlugin, 'isDragging');\n\n  if (!isBlockSelected) return null;\n\n  return (\n    <div\n      className={cn(\n        blockSelectionVariants({\n          active: isBlockSelected && !isDragging,\n        }),\n        className\n      )}\n      data-slot=\"block-selection\"\n      {...props}\n    />\n  );\n}\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "docs": [
      {
        "route": "/docs/block-selection"
      },
      {
        "route": "https://pro.platejs.org/docs/components/block-selection"
      }
    ],
    "examples": [
      "block-selection-demo",
      "block-selection-pro"
    ]
  }
}