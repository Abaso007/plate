{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "-plugins-functionality-utils-reset-node-docs",
  "type": "registry:file",
  "title": "Reset Node",
  "description": "Documentation for Reset Node",
  "files": [
    {
      "path": "../../docs/(plugins)/(functionality)/(utils)/reset-node.mdx",
      "content": "---\ntitle: Reset Node\n---\n\n<ComponentPreview name=\"reset-node-demo\" />\n\n<PackageInfo>\n\n## Features\n\n- Enables quick reset of text block formatting to default on key events (e.g. `Enter`).\n- To test, press Enter in an empty or at the end of a block quote, or Backspace at the start of a block quote.\n\n</PackageInfo>\n\n## Usage\n\n```tsx\n// ...\nimport {\n  isBlockAboveEmpty,\n  isSelectionAtBlockStart,\n  KEYS,\n} from '@udecode/plate';\nimport { ResetNodePlugin } from '@udecode/plate/react';\n\nconst resetBlockTypesCommonRule = {\n  defaultType: KEYS.p,\n  types: [...KEYS.heading, KEYS.blockquote, KEYS.callout],\n};\n\nconst resetBlockTypesCodeBlockRule = {\n  defaultType: KEYS.p,\n  types: [KEYS.codeBlock],\n  onReset: unwrapCodeBlock,\n};\n\nconst plugins = [\n  // ...otherPlugins,\n  ResetNodePlugin.configure({\n    options: {\n      rules: [\n        {\n          ...resetBlockTypesCommonRule,\n          hotkey: 'Enter',\n          predicate: (editor) =>\n            editor.api.isEmpty(editor.selection, { block: true }),\n        },\n        {\n          ...resetBlockTypesCommonRule,\n          hotkey: 'Backspace',\n          predicate: (editor) => editor.api.isAt({ start: true }),\n        },\n        {\n          ...resetBlockTypesCodeBlockRule,\n          hotkey: 'Enter',\n          predicate: isCodeBlockEmpty,\n        },\n        {\n          ...resetBlockTypesCodeBlockRule,\n          hotkey: 'Backspace',\n          predicate: isSelectionAtCodeBlockStart,\n        },\n      ],\n    },\n  }),\n];\n```\n\n## Plugins\n\n### `ResetNodePlugin`\n\nPlugin for resetting node types based on rules.\n\n<API name=\"ResetNodePlugin\">\n<APIOptions type=\"rules\">\n    <APIItem name=\"hotkey\" type=\"string | string[]\" optional>\n      Hotkey(s) that trigger the rule.\n    </APIItem>\n    <APIItem name=\"defaultType\" type=\"string\" optional>\n      Default type to reset node to.\n    </APIItem>\n    <APIItem name=\"types\" type=\"string[]\">\n      Node types where rule applies.\n    </APIItem>\n    <APIItem name=\"predicate\" type=\"(editor: PlateEditor) => boolean\">\n      Additional condition for rule.\n    </APIItem>\n    <APIItem name=\"onReset\" type=\"(editor: PlateEditor) => void\" optional>\n      Callback when reset occurs.\n    </APIItem>\n    <APIItem name=\"disableFirstBlockReset\" type=\"boolean\" optional>\n      Disable reset for first block in editor.\n    </APIItem>\n    <APIItem name=\"disableEditorReset\" type=\"boolean\" optional>\n      Disable reset for entire editor.\n  </APIItem>\n  </APIOptions>\n</API>",
      "type": "registry:file",
      "target": "content/docs/plate/(plugins)/(functionality)/(utils)/reset-node.mdx"
    }
  ]
}