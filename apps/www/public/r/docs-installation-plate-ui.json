{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "docs-installation-plate-ui",
  "type": "registry:file",
  "title": "Plate UI Installation",
  "description": "How to set up Plate UI in your project.",
  "files": [
    {
      "path": "../../docs/installation/plate-ui.mdx",
      "content": "---\ntitle: Plate UI Installation\ndescription: How to set up Plate UI in your project.\n---\n\nThis guide details how to install Plate UI, the component layer for Plate. Choose the method that suits your project:\n\n*   **CLI Installation (Recommended):** Quick setup using the shadcn CLI.\n*   **Manual Installation:** For more control over the setup process.\n\n## CLI Installation (Recommended)\n\nThis is the fastest way to integrate Plate UI's core dependencies and base styles.\n\n<Steps>\n\n### Install Plate UI\n\n<Callout type=\"info\">\n  If you are not using Next.js, refer to the official [shadcn/ui installation guides](https://ui.shadcn.com/docs/installation) for your specific framework before proceeding.\n</Callout>\n\n```bash\nnpx shadcn@latest add https://platejs.org/r/plate-ui\n```\n\n### Basic Usage \n\nWith Plate UI's core installed, proceed to the guide specific to your framework:\n\n*   **[Next.js Guide](./next)** - For server-side rendered applications (Next, Remix, etc.)\n*   **[React Guide](./react)** - For single-page applications (Vite, React Router, etc.)\n\n</Steps>\n\n## Manual Installation\n\nIf you prefer a step-by-step approach or are not using the shadcn CLI, follow these steps:\n\n<Steps>\n\n### Install Plate\n\n```bash\nnpm add @udecode/plate\n```\n\n<Callout type=\"note\" title=\"Plugin Dependencies\">\n  When manually installing Plate, you'll need to add the specific packages for each plugin you want to use. For example, if you want to use the `AIMenu` component, you would need `@udecode/plate-ai` and its dependencies. Check each component's documentation for its required packages, or use the CLI to automatically install the required packages.\n</Callout>\n\n### Configure CSS Variables\n\nAdd the following CSS variables to your global stylesheet:\n\n```css title=\"app/globals.css\"\n:root {\n  /* Base brand color for Plate UI components */\n  --brand: oklch(0.623 0.214 259.815);\n}\n\n.dark {\n  --brand: oklch(0.707 0.165 254.624);\n}\n```\n\n### Add Components\n\nWith Plate UI's core installed, you can now add individual Plate UI components to build your editor interface. For example, to add the `FixedToolbar` and a `MarkToolbarButton`:\n\n```bash\nnpx shadcn@latest add https://platejs.org/r/fixed-toolbar https://platejs.org/r/mark-toolbar-button\n```\n\nImport and use them in your editor:\n\n```tsx showLineNumbers title=\"components/editor.tsx\"\nimport { Plate } from \"@udecode/plate/react\";\nimport { FixedToolbar } from \"@/components/ui/fixed-toolbar\";\nimport { MarkToolbarButton } from \"@/components/ui/mark-toolbar-button\";\n// ... other imports\n\nexport function MyEditor() {\n  // ... editor setup\n  return (\n    <Plate editor={editor}>\n      <FixedToolbar>\n        <MarkToolbarButton nodeType=\"bold\" tooltip=\"Bold\">B</MarkToolbarButton>\n        {/* ... other toolbar buttons ... */}\n      </FixedToolbar>\n      {/* ... Editor component ... */}\n    </Plate>\n  );\n}\n```\n\nExplore the available [UI Components](/docs/components) and [Plugin Components](/docs/plugin-components) to customize your editor nodes (like paragraphs, headings, etc.) and build a feature-rich editing experience.\n\n### Basic Usage \n\nWith Plate UI's core installed, proceed to the guide specific to your framework:\n\n*   **[Next.js Guide](./next)** - For server-side rendered applications (Next, Remix, etc.)\n*   **[React Guide](./react)** - For single-page applications (Vite, React Router, etc.)\n\n</Steps>",
      "type": "registry:file",
      "target": "content/docs/plate/installation/plate-ui/index.mdx"
    }
  ]
}