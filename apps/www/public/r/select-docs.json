{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "select-docs",
  "type": "registry:file",
  "title": "Select",
  "description": "Documentation for Select",
  "files": [
    {
      "path": "../../docs/select.mdx",
      "content": "---\ntitle: Select\n---\n\n{/* <ComponentPreview name=\"playground-demo\" id=\"delete\" /> */}\n\n<PackageInfo>\n\n## Features\n\n- Set a list of element types to remove on backspace\n- Set a list of element types to select on backspace, instead of removing\n\n</PackageInfo>\n\n## Installation\n\n```bash\nnpm install @udecode/plate-select\n```\n\n## Usage\n\n```tsx\nimport { DeletePlugin, SelectOnBackspacePlugin } from '@udecode/plate';\n```\n\n```tsx\nconst plugins = [\n  // ...otherPlugins,\n  SelectOnBackspacePlugin.configure({\n    options: {\n      query: {\n        allow: ['img', 'hr'],\n      },\n    },\n  }),\n  DeletePlugin,\n];\n```\n\n## Plugins\n\n### `DeletePlugin`\n\nPlugin that removes empty blocks when pressing delete (forward delete) if they match the query options.\n\n<API name=\"DeletePlugin\">\n<APIOptions>\n  <APIItem name=\"query\" type=\"QueryNodeOptions\" optional>\n    Query options to filter which empty blocks can be removed.\n    - **Default:** `{ allow: ['p'] }`\n  </APIItem>\n</APIOptions>\n\nExample:\n\n```tsx\nconst plugins = [\n  DeletePlugin.configure({\n    options: {\n      // Only remove empty paragraphs and blockquotes\n      query: {\n        allow: ['p', 'blockquote'],\n      },\n    },\n  }),\n];\n```\n\nBehavior:\n1. Check if current block is empty and matches query options\n2. If true: Remove entire block\n3. If false: Use default delete behavior\n\n```tsx\n// Empty paragraph followed by code block\n<editor>\n  <p>\n    <cursor />\n  </p>\n  <codeblock>\n    <codeline>test</codeline>\n  </codeblock>\n</editor>\n\n// Pressing delete will remove the empty paragraph instead of nothing\n<editor>\n  <codeblock>\n    <codeline>test</codeline>\n  </codeblock>\n</editor>\n```\n</API>\n\n### `SelectOnBackspacePlugin`\n\nPlugin that selects nodes instead of deleting them when pressing backspace.\n\n<API name=\"SelectOnBackspacePlugin\">\n<APIOptions>\n  <APIItem name=\"query\" type=\"QueryNodeOptions\">\n    Query options to determine which nodes trigger selection.\n  </APIItem>\n  <APIItem name=\"removeNodeIfEmpty\" type=\"boolean\" optional>\n    Whether to remove node if empty when backspacing.\n    - **Default:** `false`\n  </APIItem>\n</APIOptions>\n\nExample:\n\n```tsx\nconst plugins = [\n  SelectOnBackspacePlugin.configure({\n    options: {\n      // Select these nodes instead of deleting them\n      query: {\n        allow: ['img', 'hr'],\n      },\n      // Remove current node if empty\n      removeNodeIfEmpty: true,\n    },\n  }),\n];\n```\n\nBehavior:\n1. When backspace is pressed at block start:\n2. Check if previous node matches query options\n3. If true:\n   - Select previous node instead of deleting\n   - Optionally remove current node if empty\n4. If false: Use default backspace behavior\n\n```tsx\n// Empty paragraph after an image\n<editor>\n  <img src=\"...\" />\n  <p>\n    <cursor />\n  </p>\n</editor>\n\n// Pressing backspace will select the image instead of deleting it\n<editor>\n  <img src=\"...\" selected />\n  <p></p>\n</editor>\n\n// If removeNodeIfEmpty is true, the empty paragraph is also removed\n<editor>\n  <img src=\"...\" selected />\n</editor>\n```\n</API>",
      "type": "registry:file",
      "target": "content/docs/plate/plugins/select.mdx"
    }
  ]
}