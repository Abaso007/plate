{
  "files": [
    {
      "path": "examples/markdown-to-slate-demo.tsx",
      "content": "'use client';\n\nimport React from 'react';\n\nimport {\n  MarkdownPlugin,\n  remarkMdx,\n  remarkMention,\n} from '@udecode/plate-markdown';\nimport { Plate, usePlateEditor } from '@udecode/plate/react';\nimport remarkEmoji from 'remark-emoji';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\n\nimport { editorPlugins } from '@/components/editor/plugins/editor-plugins';\nimport { editorComponents } from '@/components/editor/use-create-editor';\nimport { useDebounce } from '@/hooks/use-debounce';\nimport { Editor, EditorContainer } from '@/components/plate-ui/editor';\n\nconst initialMarkdown = `## Basic Markdown\n\n> The following node and marks is supported by the Markdown standard.\n\nFormat text with **bold**, _italic_, _**combined styles**_, ~~strikethrough~~, \\`code\\` formatting, and [hyperlinks](https://en.wikipedia.org/wiki/Hypertext).\n\n\\`\\`\\`javascript\n// Use code blocks to showcase code snippets\nfunction greet() {\n  console.info(\"Hello World!\")\n}\n\\`\\`\\`\n\n- Simple lists for organizing content\n\n1. Numbered lists for sequential steps\n\n| **Plugin**  | **Element** | **Inline** | **Void** |\n| ----------- | ----------- | ---------- | -------- |\n| **Heading** |             |            | No       |\n| **Image**   | Yes         | No         | Yes      |\n| **Mention** | Yes         | Yes        | Yes      |\n\n![](https://images.unsplash.com/photo-1712688930249-98e1963af7bd?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)\n\n- [x] Completed tasks\n\n- [ ] Pending tasks\n\n---\n\n## Advanced Features\n\n<callout>\nThe following node and marks are not supported in Markdown but can be serialized and deserialized using MDX or specialized UnifiedJS plugins.\n</callout>\n\nAdvanced marks: <kbd>âŒ˜ + B</kbd>,<u>underlined</u>, <mark>highlighted</mark> text, <span style=\"color: #93C47D;\">colored text</span> and <span style=\"background-color: #6C9EEB;\">background highlights</span> for visual emphasis.\n\nSuperscript like E=mc<sup>2</sup> and subscript like H<sub>2</sub>O demonstrate mathematical and chemical notation capabilities.\n\nAdd mentions like @BB-8, dates (<date>2025-05-08</date>), and math formulas ($E=mc^2$).\n\nThe table of contents feature automatically generates document structure for easy navigation.\n\n<toc />\n\nMath formula support makes displaying complex mathematical expressions simple.\n\n$$\n\\\\frac{-b \\\\pm \\\\sqrt{b^2 - 4ac}}{2a}\n$$\n\nMulti-column layout features enable richer page designs and content layouts.\n\n<column_group layout=\"[50,50]\">\n<column width=\"50%\">\nleft\n</column>\n\n  <column width=\"50%\">\n    right\n  </column>\n</column_group>\n\nPDF embedding makes document referencing simple and intuitive.\n<file name=\"sample.pdf\" align=\"center\" src=\"https://s26.q4cdn.com/900411403/files/doc_downloads/test.pdf\" width=\"80%\" isUpload=\"true\" />\n\nAudio players can be embedded directly into documents, supporting online audio resources.\n<audio align=\"center\" src=\"https://samplelib.com/lib/preview/mp3/sample-3s.mp3\" width=\"80%\" />\n\nVideo playback features support embedding various online video resources, enriching document content.\n<video align=\"center\" src=\"https://videos.pexels.com/video-files/6769791/6769791-uhd_2560_1440_24fps.mp4\" width=\"80%\" isUpload=\"true\" />\n\n:smile: :heart:\n`;\n\nexport default function MarkdownDemo() {\n  const [markdownValue, setMarkdownValue] = React.useState(initialMarkdown);\n  const debouncedMarkdownValue = useDebounce(markdownValue, 300);\n\n  const markdownEditor = usePlateEditor({\n    plugins: [],\n    value: [{ children: [{ text: markdownValue }], type: 'p' }],\n  });\n\n  const editor = usePlateEditor(\n    {\n      components: editorComponents,\n      plugins: editorPlugins,\n      value: (editor) =>\n        editor.getApi(MarkdownPlugin).markdown.deserialize(initialMarkdown, {\n          remarkPlugins: [\n            remarkMath,\n            remarkGfm,\n            remarkMdx,\n            remarkMention,\n            remarkEmoji as any,\n          ],\n        }),\n    },\n    []\n  );\n\n  React.useEffect(() => {\n    if (debouncedMarkdownValue !== initialMarkdown) {\n      editor.tf.reset();\n      editor.tf.setValue(\n        editor.api.markdown.deserialize(debouncedMarkdownValue, {\n          remarkPlugins: [\n            remarkMath,\n            remarkGfm,\n            remarkMdx,\n            remarkMention,\n            remarkEmoji as any,\n          ],\n        })\n      );\n    }\n  }, [debouncedMarkdownValue, editor]);\n\n  return (\n    <div className=\"grid h-full grid-cols-2 overflow-y-auto\">\n      <Plate\n        onValueChange={() => {\n          const value = markdownEditor.children\n            .map((node: any) => markdownEditor.api.string(node))\n            .join('\\n');\n          setMarkdownValue(value);\n        }}\n        editor={markdownEditor}\n      >\n        <EditorContainer>\n          <Editor\n            variant=\"none\"\n            className=\"bg-muted/50 p-2 font-mono text-sm\"\n          />\n        </EditorContainer>\n      </Plate>\n\n      <Plate editor={editor}>\n        <EditorContainer>\n          <Editor variant=\"none\" className=\"px-4 py-2\" />\n        </EditorContainer>\n      </Plate>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/markdown-to-slate-demo.tsx"
    },
    {
      "path": "components/editor/use-create-editor.ts",
      "content": "'use client';\n\nimport type { Value } from '@udecode/plate';\n\nimport { withProps } from '@udecode/cn';\nimport { AIChatPlugin, AIPlugin } from '@udecode/plate-ai/react';\nimport {\n  BoldPlugin,\n  CodePlugin,\n  ItalicPlugin,\n  StrikethroughPlugin,\n  SubscriptPlugin,\n  SuperscriptPlugin,\n  UnderlinePlugin,\n} from '@udecode/plate-basic-marks/react';\nimport { BlockquotePlugin } from '@udecode/plate-block-quote/react';\nimport { CalloutPlugin } from '@udecode/plate-callout/react';\nimport {\n  CodeBlockPlugin,\n  CodeLinePlugin,\n  CodeSyntaxPlugin,\n} from '@udecode/plate-code-block/react';\nimport { CommentsPlugin } from '@udecode/plate-comments/react';\nimport { DatePlugin } from '@udecode/plate-date/react';\nimport { EmojiInputPlugin } from '@udecode/plate-emoji/react';\nimport { HEADING_KEYS } from '@udecode/plate-heading';\nimport { TocPlugin } from '@udecode/plate-heading/react';\nimport { HighlightPlugin } from '@udecode/plate-highlight/react';\nimport { HorizontalRulePlugin } from '@udecode/plate-horizontal-rule/react';\nimport { KbdPlugin } from '@udecode/plate-kbd/react';\nimport { ColumnItemPlugin, ColumnPlugin } from '@udecode/plate-layout/react';\nimport { LinkPlugin } from '@udecode/plate-link/react';\nimport {\n  EquationPlugin,\n  InlineEquationPlugin,\n} from '@udecode/plate-math/react';\nimport {\n  AudioPlugin,\n  FilePlugin,\n  ImagePlugin,\n  MediaEmbedPlugin,\n  PlaceholderPlugin,\n  VideoPlugin,\n} from '@udecode/plate-media/react';\nimport {\n  MentionInputPlugin,\n  MentionPlugin,\n} from '@udecode/plate-mention/react';\nimport { SlashInputPlugin } from '@udecode/plate-slash-command/react';\nimport { SuggestionPlugin } from '@udecode/plate-suggestion/react';\nimport {\n  TableCellHeaderPlugin,\n  TableCellPlugin,\n  TablePlugin,\n  TableRowPlugin,\n} from '@udecode/plate-table/react';\nimport { TogglePlugin } from '@udecode/plate-toggle/react';\nimport {\n  type CreatePlateEditorOptions,\n  ParagraphPlugin,\n  PlateLeaf,\n  usePlateEditor,\n} from '@udecode/plate/react';\n\nimport { AIAnchorElement } from '@/components/plate-ui/ai-anchor-element';\nimport { AILeaf } from '@/components/plate-ui/ai-leaf';\nimport { BlockquoteElement } from '@/components/plate-ui/blockquote-element';\nimport { CalloutElement } from '@/components/plate-ui/callout-element';\nimport { CodeBlockElement } from '@/components/plate-ui/code-block-element';\nimport { CodeLeaf } from '@/components/plate-ui/code-leaf';\nimport { CodeLineElement } from '@/components/plate-ui/code-line-element';\nimport { CodeSyntaxLeaf } from '@/components/plate-ui/code-syntax-leaf';\nimport { ColumnElement } from '@/components/plate-ui/column-element';\nimport { ColumnGroupElement } from '@/components/plate-ui/column-group-element';\nimport { CommentLeaf } from '@/components/plate-ui/comment-leaf';\nimport { DateElement } from '@/components/plate-ui/date-element';\nimport { EmojiInputElement } from '@/components/plate-ui/emoji-input-element';\nimport { EquationElement } from '@/components/plate-ui/equation-element';\nimport { HeadingElement } from '@/components/plate-ui/heading-element';\nimport { HighlightLeaf } from '@/components/plate-ui/highlight-leaf';\nimport { HrElement } from '@/components/plate-ui/hr-element';\nimport { ImageElement } from '@/components/plate-ui/image-element';\nimport { InlineEquationElement } from '@/components/plate-ui/inline-equation-element';\nimport { KbdLeaf } from '@/components/plate-ui/kbd-leaf';\nimport { LinkElement } from '@/components/plate-ui/link-element';\nimport { MediaAudioElement } from '@/components/plate-ui/media-audio-element';\nimport { MediaEmbedElement } from '@/components/plate-ui/media-embed-element';\nimport { MediaFileElement } from '@/components/plate-ui/media-file-element';\nimport { MediaPlaceholderElement } from '@/components/plate-ui/media-placeholder-element';\nimport { MediaVideoElement } from '@/components/plate-ui/media-video-element';\nimport { MentionElement } from '@/components/plate-ui/mention-element';\nimport { MentionInputElement } from '@/components/plate-ui/mention-input-element';\nimport { ParagraphElement } from '@/components/plate-ui/paragraph-element';\nimport { withPlaceholders } from '@/components/plate-ui/placeholder';\nimport { SlashInputElement } from '@/components/plate-ui/slash-input-element';\nimport { SuggestionLeaf } from '@/components/plate-ui/suggestion-leaf';\nimport {\n  TableCellElement,\n  TableCellHeaderElement,\n} from '@/components/plate-ui/table-cell-element';\nimport { TableElement } from '@/components/plate-ui/table-element';\nimport { TableRowElement } from '@/components/plate-ui/table-row-element';\nimport { TocElement } from '@/components/plate-ui/toc-element';\nimport { ToggleElement } from '@/components/plate-ui/toggle-element';\n\nimport { editorPlugins, viewPlugins } from './plugins/editor-plugins';\n\nexport const viewComponents = {\n  [AIChatPlugin.key]: AIAnchorElement,\n  [AudioPlugin.key]: MediaAudioElement,\n  [BlockquotePlugin.key]: BlockquoteElement,\n  [BoldPlugin.key]: withProps(PlateLeaf, { as: 'strong' }),\n  [CalloutPlugin.key]: CalloutElement,\n  [CodeBlockPlugin.key]: CodeBlockElement,\n  [CodeLinePlugin.key]: CodeLineElement,\n  [CodePlugin.key]: CodeLeaf,\n  [CodeSyntaxPlugin.key]: CodeSyntaxLeaf,\n  [ColumnItemPlugin.key]: ColumnElement,\n  [ColumnPlugin.key]: ColumnGroupElement,\n  [CommentsPlugin.key]: CommentLeaf,\n  [DatePlugin.key]: DateElement,\n  [EquationPlugin.key]: EquationElement,\n  [FilePlugin.key]: MediaFileElement,\n  [HEADING_KEYS.h1]: withProps(HeadingElement, { variant: 'h1' }),\n  [HEADING_KEYS.h2]: withProps(HeadingElement, { variant: 'h2' }),\n  [HEADING_KEYS.h3]: withProps(HeadingElement, { variant: 'h3' }),\n  [HEADING_KEYS.h4]: withProps(HeadingElement, { variant: 'h4' }),\n  [HEADING_KEYS.h5]: withProps(HeadingElement, { variant: 'h5' }),\n  [HEADING_KEYS.h6]: withProps(HeadingElement, { variant: 'h6' }),\n  [HighlightPlugin.key]: HighlightLeaf,\n  [HorizontalRulePlugin.key]: HrElement,\n  [ImagePlugin.key]: ImageElement,\n  [InlineEquationPlugin.key]: InlineEquationElement,\n  [ItalicPlugin.key]: withProps(PlateLeaf, { as: 'em' }),\n  [KbdPlugin.key]: KbdLeaf,\n  [LinkPlugin.key]: LinkElement,\n  [MediaEmbedPlugin.key]: MediaEmbedElement,\n  [MentionPlugin.key]: MentionElement,\n  [ParagraphPlugin.key]: ParagraphElement,\n  [PlaceholderPlugin.key]: MediaPlaceholderElement,\n  [StrikethroughPlugin.key]: withProps(PlateLeaf, { as: 's' }),\n  [SubscriptPlugin.key]: withProps(PlateLeaf, { as: 'sub' }),\n  [SuggestionPlugin.key]: SuggestionLeaf,\n  [SuperscriptPlugin.key]: withProps(PlateLeaf, { as: 'sup' }),\n  [TableCellHeaderPlugin.key]: TableCellHeaderElement,\n  [TableCellPlugin.key]: TableCellElement,\n  [TablePlugin.key]: TableElement,\n  [TableRowPlugin.key]: TableRowElement,\n  [TocPlugin.key]: TocElement,\n  [TogglePlugin.key]: ToggleElement,\n  [UnderlinePlugin.key]: withProps(PlateLeaf, { as: 'u' }),\n  [VideoPlugin.key]: MediaVideoElement,\n};\n\nexport const editorComponents = {\n  ...viewComponents,\n  [AIPlugin.key]: AILeaf,\n  [EmojiInputPlugin.key]: EmojiInputElement,\n  [MentionInputPlugin.key]: MentionInputElement,\n  [SlashInputPlugin.key]: SlashInputElement,\n};\n\nexport const useCreateEditor = (\n  {\n    components,\n    readOnly,\n    ...options\n  }: {\n    plugins?: any[];\n    readOnly?: boolean;\n  } & Omit<CreatePlateEditorOptions, 'plugins'> = {},\n  deps: any[] = []\n) => {\n  return usePlateEditor<Value, (typeof editorPlugins)[number]>(\n    {\n      components: {\n        ...(readOnly ? viewComponents : withPlaceholders(editorComponents)),\n        ...components,\n      },\n      plugins: (readOnly ? viewPlugins : editorPlugins) as any,\n      ...options,\n    },\n    deps\n  );\n};\n",
      "type": "registry:example",
      "target": "components/use-create-editor.ts"
    }
  ],
  "name": "markdown-to-slate-demo",
  "registryDependencies": [
    "use-debounce",
    "editor-plugins"
  ],
  "type": "registry:example",
  "$schema": "https://platejs.org/schema/registry-item.json",
  "author": "udecode (https://platejs.org)"
}