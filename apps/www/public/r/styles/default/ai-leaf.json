{
  "dependencies": [],
  "doc": {
    "description": "A text highlighter for AI-generated content.",
    "docs": [
      {
        "route": "/docs/ai",
        "title": "AI"
      },
      {
        "route": "https://pro.platejs.org/docs/components/ai-leaf",
        "title": "AI Leaf"
      }
    ],
    "examples": [
      "ai-demo",
      "ai-pro"
    ],
    "label": "New",
    "title": "AI Leaf"
  },
  "files": [
    {
      "path": "plate-ui/ai-leaf.tsx",
      "content": "'use client';\n\nimport React from 'react';\n\nimport { cn } from '@udecode/cn';\nimport { NodeApi } from '@udecode/plate';\nimport { AIChatPlugin } from '@udecode/plate-ai/react';\nimport { PlateLeaf, usePluginOption } from '@udecode/plate/react';\nimport { cva } from 'class-variance-authority';\nconst aiIndicatorVariants = cva(\n  'after:ml-1.5 after:inline-block after:h-3 after:w-3 after:animate-pulse after:rounded-full after:bg-purple-800 after:align-middle after:content-[\"\"]'\n);\n\nexport function AILeaf({\n  className,\n  ...props\n}: React.ComponentProps<typeof PlateLeaf>) {\n  const lastTextId = usePluginOption(\n    AIChatPlugin,\n    'experimental_lastTextId'\n  ) as any;\n  const leaf = props.leaf;\n\n  let isLast = false;\n  if (leaf.code_syntax && lastTextId === leaf.id) {\n    const node = props.editor.api.node({ mode: 'lowest' });\n    if (node) {\n      const string = NodeApi.string(node[0]);\n      isLast = string.endsWith(leaf.text);\n    }\n  } else {\n    isLast = lastTextId === leaf.id;\n  }\n\n  return (\n    <PlateLeaf\n      className={cn(\n        className,\n        'border-b-2 border-b-purple-100 bg-purple-50 text-purple-800',\n        'transition-all duration-200 ease-in-out',\n        isLast && aiIndicatorVariants()\n      )}\n      {...props}\n    />\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/plate-ui/ai-leaf.tsx"
    }
  ],
  "name": "ai-leaf",
  "registryDependencies": [],
  "type": "registry:ui",
  "$schema": "https://platejs.org/schema/registry-item.json",
  "author": "udecode (https://platejs.org)"
}