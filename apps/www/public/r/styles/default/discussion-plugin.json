{
  "dependencies": [],
  "files": [
    {
      "path": "components/editor/plugins/discussion-plugin.tsx",
      "content": "'use client';\n\nimport type { TComment } from '@/components/plate-ui/comment';\n\nimport { createPlatePlugin } from '@udecode/plate/react';\n\nimport { BlockDiscussion } from '@/components/plate-ui/block-discussion';\n\nexport interface TDiscussion {\n  id: string;\n  comments: TComment[];\n  createdAt: Date;\n  isResolved: boolean;\n  userId: string;\n  documentContent?: string;\n}\n\nconst discussionsData: TDiscussion[] = [\n  {\n    id: 'discussion1',\n    comments: [\n      {\n        id: 'comment1',\n        contentRich: [\n          {\n            children: [\n              {\n                text: 'This is a comment',\n              },\n            ],\n            type: 'p',\n          },\n        ],\n        createdAt: new Date(Date.now() - 900_000),\n        discussionId: 'discussion1',\n        isEdited: false,\n        userId: 'alice',\n      },\n    ],\n    createdAt: new Date(),\n    documentContent: 'comments to your content',\n    isResolved: false,\n    userId: 'alice',\n  },\n  {\n    id: 'discussion2',\n    comments: [\n      {\n        id: 'comment1',\n        contentRich: [\n          {\n            children: [\n              {\n                text: 'Hey, what do you think about this approach?',\n              },\n            ],\n            type: 'p',\n          },\n        ],\n        createdAt: new Date(Date.now() - 900_000),\n        discussionId: 'discussion1',\n        isEdited: false,\n        userId: 'alice',\n      },\n      {\n        id: 'comment2',\n        contentRich: [\n          {\n            children: [\n              {\n                text: 'Looks good!',\n              },\n            ],\n            type: 'p',\n          },\n        ],\n        createdAt: new Date(Date.now() - 800_000),\n        discussionId: 'discussion1',\n        isEdited: false,\n        userId: 'bob',\n      },\n      {\n        id: 'comment3',\n        contentRich: [\n          {\n            children: [\n              {\n                text: 'Thanks for the feedback!',\n              },\n            ],\n            type: 'p',\n          },\n        ],\n        createdAt: new Date(Date.now() - 700_000),\n        discussionId: 'discussion1',\n        isEdited: false,\n        userId: 'alice',\n      },\n    ],\n    createdAt: new Date(),\n    documentContent: 'collaborate',\n    isResolved: false,\n    userId: 'bob',\n  },\n];\n\nconst usersData: Record<\n  string,\n  { id: string; avatarUrl: string; name: string; hue?: number }\n> = {\n  '1': { id: '1', avatarUrl: '', hue: 120, name: 'Alice' },\n  '2': { id: '2', avatarUrl: '', hue: 210, name: 'Bob' },\n  '3': { id: '3', avatarUrl: '', hue: 300, name: 'Charlie' },\n  alice: {\n    id: 'alice',\n    avatarUrl: 'https://avatars.githubusercontent.com/u/19695832?s=96&v=4',\n    name: 'zbeyens',\n  },\n  bob: {\n    id: 'bob',\n    avatarUrl: 'https://avatars.githubusercontent.com/u/4272090?v=4',\n    name: '12joan',\n  },\n  charlie: {\n    id: 'charlie',\n    avatarUrl: 'https://avatars.githubusercontent.com/u/164472012?v=4',\n    name: 'felixfeng33',\n  },\n};\n\n// This plugin is purely UI. It's only used to store the discussions and users data\nexport const discussionPlugin = createPlatePlugin({\n  key: 'discussion',\n  options: {\n    currentUserId: 'charlie',\n    discussions: discussionsData,\n    users: usersData,\n  },\n})\n  .configure({\n    render: { aboveNodes: BlockDiscussion },\n  })\n  .extendSelectors(({ getOption }) => ({\n    currentUser: () => getOption('users')[getOption('currentUserId')],\n    user: (id: string) => getOption('users')[id],\n  }));\n",
      "type": "registry:component",
      "target": "components/editor/plugins/discussion-plugin.tsx"
    }
  ],
  "name": "discussion-plugin",
  "registryDependencies": ["block-discussion"],
  "type": "registry:component",
  "$schema": "https://platejs.org/schema/registry-item.json",
  "author": "udecode (https://platejs.org)"
}
