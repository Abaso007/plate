{
  "dependencies": [
    "@udecode/plate-media"
  ],
  "doc": {
    "description": "Toolbar button for inserting and managing media.",
    "docs": [
      {
        "route": "/docs/media",
        "title": "Media"
      }
    ],
    "examples": [
      "media-demo",
      "upload-pro"
    ]
  },
  "files": [
    {
      "content": "'use client';\n\nimport React from 'react';\n\nimport type { DropdownMenuProps } from '@radix-ui/react-dropdown-menu';\n\nimport { cn } from '@udecode/cn';\nimport { useEditorPlugin } from '@udecode/plate-core/react';\nimport {\n  AudioPlugin,\n  FilePlugin,\n  ImagePlugin,\n  MediaEmbedPlugin,\n  VideoPlugin,\n} from '@udecode/plate-media/react';\nimport {\n  AudioLinesIcon,\n  FileUpIcon,\n  FilmIcon,\n  ImageIcon,\n  LinkIcon,\n} from 'lucide-react';\nimport { useFilePicker } from 'use-file-picker';\n\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuTrigger,\n  useOpenState,\n} from './dropdown-menu';\nimport { ToolbarSplitButton } from './toolbar';\n\nconst MEDIA_CONFIG: Record<\n  string,\n  {\n    accept: string[];\n    icon: React.ReactNode;\n    tooltip: string;\n  }\n> = {\n  [AudioPlugin.key]: {\n    accept: ['audio/*'],\n    icon: <AudioLinesIcon />,\n    tooltip: 'Audio',\n  },\n  [FilePlugin.key]: {\n    accept: ['*'],\n    icon: <FileUpIcon />,\n    tooltip: 'File',\n  },\n  [ImagePlugin.key]: {\n    accept: ['image/*'],\n    icon: <ImageIcon />,\n    tooltip: 'Image',\n  },\n  [VideoPlugin.key]: {\n    accept: ['video/*'],\n    icon: <FilmIcon />,\n    tooltip: 'Video',\n  },\n};\n\nexport function MediaDropdownMenu({\n  children,\n  nodeType,\n  ...props\n}: DropdownMenuProps & { nodeType: string }) {\n  const currentConfig = MEDIA_CONFIG[nodeType];\n\n  const { api, editor } = useEditorPlugin(MediaEmbedPlugin);\n  const { openFilePicker } = useFilePicker({\n    accept: currentConfig.accept,\n    multiple: true,\n    onFilesSelected: ({ plainFiles: updatedFiles }) => {\n      (editor as any).tf.insert.media(updatedFiles);\n    },\n  });\n\n  const openState = useOpenState();\n\n  return (\n    <DropdownMenu {...openState} modal={false} {...props}>\n      <DropdownMenuTrigger asChild>\n        <ToolbarSplitButton\n          onMainButtonClick={() => openFilePicker()}\n          pressed={openState.open}\n          tooltip={currentConfig.tooltip}\n        >\n          {currentConfig.icon}\n        </ToolbarSplitButton>\n      </DropdownMenuTrigger>\n\n      <DropdownMenuContent\n        className={cn('min-w-0 data-[state=closed]:hidden')}\n        align=\"start\"\n      >\n        <DropdownMenuRadioGroup>\n          <DropdownMenuRadioItem\n            value=\"upload\"\n            onSelect={() => openFilePicker()}\n            hideIcon\n          >\n            <div className=\"flex items-center gap-2\">\n              {currentConfig.icon}\n              <span className=\"text-sm\">Upload from computer</span>\n            </div>\n          </DropdownMenuRadioItem>\n          <DropdownMenuRadioItem\n            value=\"url\"\n            onSelect={() => {\n              api.media_embed.openFloating(nodeType);\n            }}\n            hideIcon\n          >\n            <div className=\"flex items-center gap-2\">\n              <LinkIcon />\n              <span className=\"text-sm\">Insert via URL</span>\n            </div>\n          </DropdownMenuRadioItem>\n        </DropdownMenuRadioGroup>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n",
      "path": "plate-ui/media-dropdown-menu.tsx",
      "target": "components/plate-ui/media-dropdown-menu.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "media-dropdown-menu",
  "registryDependencies": [
    "toolbar"
  ],
  "type": "registry:ui"
}