{
  "dependencies": [
    "@udecode/plate-media"
  ],
  "doc": {
    "description": "Toolbar button for inserting and managing media.",
    "docs": [
      {
        "route": "/docs/media",
        "title": "Media"
      }
    ],
    "examples": [
      "media-demo",
      "upload-pro"
    ]
  },
  "files": [
    {
      "content": "'use client';\n\nimport React from 'react';\n\nimport { withRef } from '@udecode/cn';\nimport { useEditorRef } from '@udecode/plate-common/react';\nimport {\n  AudioPlugin,\n  FilePlugin,\n  ImagePlugin,\n  VideoPlugin,\n} from '@udecode/plate-media/react';\nimport { AudioLinesIcon, FileUpIcon, Film, ImageIcon } from 'lucide-react';\nimport { useFilePicker } from 'use-file-picker';\n\nimport { ToolbarButton } from './toolbar';\n\nconst MEDIA_CONFIG: Record<\n  string,\n  {\n    accept: string[];\n    icon: React.ReactNode;\n  }\n> = {\n  [AudioPlugin.key]: {\n    accept: ['audio/*'],\n    icon: <AudioLinesIcon />,\n  },\n  [FilePlugin.key]: {\n    accept: ['*'],\n    icon: <FileUpIcon />,\n  },\n  [ImagePlugin.key]: {\n    accept: ['image/*'],\n    icon: <ImageIcon />,\n  },\n  [VideoPlugin.key]: {\n    accept: ['video/*'],\n    icon: <Film />,\n  },\n};\n\nexport const MediaToolbarButton = withRef<\n  typeof ToolbarButton,\n  {\n    nodeType:\n      | typeof AudioPlugin.key\n      | typeof FilePlugin.key\n      | typeof ImagePlugin.key\n      | typeof VideoPlugin.key;\n  }\n>(({ nodeType, ...rest }, ref) => {\n  const editor = useEditorRef();\n\n  /** Open file picker */\n  const { openFilePicker } = useFilePicker({\n    accept: MEDIA_CONFIG[nodeType].accept,\n    multiple: true,\n    onFilesSelected: ({ plainFiles: updatedFiles }) => {\n      (editor as any).tf.insert.media(updatedFiles);\n    },\n  });\n\n  return (\n    <ToolbarButton ref={ref} onClick={openFilePicker} {...rest}>\n      {MEDIA_CONFIG[nodeType].icon}\n    </ToolbarButton>\n  );\n});\n",
      "path": "plate-ui/media-toolbar-button.tsx",
      "target": "components/plate-ui/media-toolbar-button.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "media-toolbar-button",
  "registryDependencies": [
    "toolbar"
  ],
  "type": "registry:ui"
}