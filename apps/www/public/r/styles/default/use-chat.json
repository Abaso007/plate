{
  "dependencies": [
    "ai",
    "@faker-js/faker"
  ],
  "files": [
    {
      "path": "components/editor/use-chat.ts",
      "content": "'use client';\n\nimport { openai } from '@ai-sdk/openai';\nimport { useChat as useBaseChat } from 'ai/react';\n\nimport { useSettings } from '@/components/editor/settings';\n\nexport const useChat = () => {\n  const { keys, model } = useSettings();\n\n  return useBaseChat({\n    id: 'editor',\n    api: '/api/ai/command',\n    body: {\n      // !!! DEMO ONLY: don't use API keys client-side\n      apiKey: keys.openai,\n      model: openai('gpt-4o'),\n    },\n    fetch: async (input, init) => {\n      const res = await fetch(input, init);\n\n      if (!res.ok) {\n        // Mock the API response. Remove it when you implement the route /api/ai/command\n        await new Promise((resolve) => setTimeout(resolve, 400));\n\n        const stream = fakeStreamText();\n\n        return new Response(stream, {\n          headers: {\n            Connection: 'keep-alive',\n            'Content-Type': 'text/plain',\n          },\n        });\n      }\n\n      return res;\n    },\n  });\n};\n\n// Used for testing. Remove it after implementing useChat api.\nconst fakeStreamText = ({\n  chunkCount = 3,\n  streamProtocol = 'data',\n}: {\n  chunkCount?: number;\n  streamProtocol?: 'data' | 'text';\n} = {}) => {\n  // Create 3 blocks with different lengths\n  const blocks = [\n    [\n      { delay: 100, texts: '' },\n      { delay: 100, texts: 'To' },\n      { delay: 100, texts: ' write' },\n      { delay: 100, texts: ' documents' },\n      { delay: 100, texts: ' using' },\n      { delay: 100, texts: ' Type' },\n      { delay: 100, texts: 'Script' },\n      { delay: 100, texts: ' with' },\n      { delay: 100, texts: ' rich' },\n      { delay: 100, texts: ' text' },\n      { delay: 100, texts: ' features' },\n      { delay: 100, texts: ' like' },\n      { delay: 100, texts: ' block' },\n      { delay: 100, texts: 'quotes' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' links' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' and' },\n      { delay: 100, texts: ' tables' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' you' },\n      { delay: 100, texts: ' can' },\n      { delay: 100, texts: ' use' },\n      { delay: 100, texts: ' libraries' },\n      { delay: 100, texts: ' such' },\n      { delay: 100, texts: ' as' },\n      { delay: 100, texts: ' `' },\n      { delay: 100, texts: 'draft' },\n      { delay: 100, texts: '-js' },\n      { delay: 100, texts: '`' },\n      { delay: 100, texts: ' or' },\n      { delay: 100, texts: ' `' },\n      { delay: 100, texts: 'sl' },\n      { delay: 100, texts: 'ate' },\n      { delay: 100, texts: '`.' },\n      { delay: 100, texts: ' These' },\n      { delay: 100, texts: ' libraries' },\n      { delay: 100, texts: ' allow' },\n      { delay: 100, texts: ' you' },\n      { delay: 100, texts: ' to' },\n      { delay: 100, texts: ' create' },\n      { delay: 100, texts: ' rich' },\n      { delay: 100, texts: ' text' },\n      { delay: 100, texts: ' editors' },\n      { delay: 100, texts: ' with' },\n      { delay: 100, texts: ' customizable' },\n      { delay: 100, texts: ' content' },\n      { delay: 100, texts: '.' },\n      { delay: 100, texts: \" Here's\" },\n      { delay: 100, texts: ' a' },\n      { delay: 100, texts: ' basic' },\n      { delay: 100, texts: ' example' },\n      { delay: 100, texts: ' using' },\n      { delay: 100, texts: ' `' },\n      { delay: 100, texts: 'draft' },\n      { delay: 100, texts: '-js' },\n      { delay: 100, texts: '`' },\n      { delay: 100, texts: ':\\n\\n' },\n      { delay: 100, texts: '```' },\n      { delay: 100, texts: 'typescript' },\n      { delay: 100, texts: '\\n' },\n      { delay: 100, texts: 'import' },\n      { delay: 100, texts: ' React' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' {' },\n      { delay: 100, texts: ' use' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: ' }' },\n      { delay: 100, texts: ' from' },\n      { delay: 100, texts: \" '\" },\n      { delay: 100, texts: 'react' },\n      { delay: 100, texts: \"';\\n\" },\n      { delay: 100, texts: 'import' },\n      { delay: 100, texts: ' {' },\n      { delay: 100, texts: ' Editor' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' Editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' Rich' },\n      { delay: 100, texts: 'Utils' },\n      { delay: 100, texts: ' }' },\n      { delay: 100, texts: ' from' },\n      { delay: 100, texts: \" '\" },\n      { delay: 100, texts: 'draft' },\n      { delay: 100, texts: '-js' },\n      { delay: 100, texts: \"';\\n\" },\n      { delay: 100, texts: 'import' },\n      { delay: 100, texts: \" '\" },\n      { delay: 100, texts: 'draft' },\n      { delay: 100, texts: '-js' },\n      { delay: 100, texts: '/dist' },\n      { delay: 100, texts: '/D' },\n      { delay: 100, texts: 'raft' },\n      { delay: 100, texts: '.css' },\n      { delay: 100, texts: \"';\\n\\n\" },\n      { delay: 100, texts: 'const' },\n      { delay: 100, texts: ' Rich' },\n      { delay: 100, texts: 'Text' },\n      { delay: 100, texts: 'Editor' },\n      { delay: 100, texts: ':' },\n      { delay: 100, texts: ' React' },\n      { delay: 100, texts: '.FC' },\n      { delay: 100, texts: ' =' },\n      { delay: 100, texts: ' ()' },\n      { delay: 100, texts: ' =>' },\n      { delay: 100, texts: ' {\\n' },\n      { delay: 100, texts: ' ' },\n      { delay: 100, texts: ' const' },\n      { delay: 100, texts: ' [' },\n      { delay: 100, texts: 'editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' set' },\n      { delay: 100, texts: 'Editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: ']' },\n      { delay: 100, texts: ' =' },\n      { delay: 100, texts: ' use' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: '(Editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: '.create' },\n      { delay: 100, texts: 'Empty' },\n      { delay: 100, texts: '());\\n\\n' },\n      { delay: 100, texts: ' ' },\n      { delay: 100, texts: ' const' },\n      { delay: 100, texts: ' handle' },\n      { delay: 100, texts: 'Key' },\n      { delay: 100, texts: 'Command' },\n      { delay: 100, texts: ' =' },\n      { delay: 100, texts: ' (' },\n      { delay: 100, texts: 'command' },\n      { delay: 100, texts: ':' },\n      { delay: 100, texts: ' string' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: ':' },\n      { delay: 100, texts: ' Editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: ')' },\n      { delay: 100, texts: ' =>' },\n      { delay: 100, texts: ' {\\n' },\n      { delay: 100, texts: '   ' },\n      { delay: 100, texts: ' const' },\n      { delay: 100, texts: ' new' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: ' =' },\n      { delay: 100, texts: ' Rich' },\n      { delay: 100, texts: 'Utils' },\n      { delay: 100, texts: '.handle' },\n      { delay: 100, texts: 'Key' },\n      { delay: 100, texts: 'Command' },\n      { delay: 100, texts: '(editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' command' },\n      { delay: 100, texts: ');\\n' },\n      { delay: 100, texts: '   ' },\n      { delay: 100, texts: ' if' },\n      { delay: 100, texts: ' (' },\n      { delay: 100, texts: 'new' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: ')' },\n      { delay: 100, texts: ' {\\n' },\n      { delay: 100, texts: '     ' },\n      { delay: 100, texts: ' set' },\n      { delay: 100, texts: 'Editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: '(new' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: ');\\n' },\n      { delay: 100, texts: '     ' },\n      { delay: 100, texts: ' return' },\n      { delay: 100, texts: \" '\" },\n      { delay: 100, texts: 'handled' },\n      { delay: 100, texts: \"';\\n\" },\n      { delay: 100, texts: '   ' },\n      { delay: 100, texts: ' }\\n' },\n      { delay: 100, texts: '   ' },\n      { delay: 100, texts: ' return' },\n      { delay: 100, texts: \" '\" },\n      { delay: 100, texts: 'not' },\n      { delay: 100, texts: '-hand' },\n      { delay: 100, texts: 'led' },\n      { delay: 100, texts: \"';\\n\" },\n      { delay: 100, texts: ' ' },\n      { delay: 100, texts: ' };\\n\\n' },\n      { delay: 100, texts: ' ' },\n      { delay: 100, texts: ' const' },\n      { delay: 100, texts: ' toggle' },\n      { delay: 100, texts: 'Block' },\n      { delay: 100, texts: 'Type' },\n      { delay: 100, texts: ' =' },\n      { delay: 100, texts: ' (' },\n      { delay: 100, texts: 'block' },\n      { delay: 100, texts: 'Type' },\n      { delay: 100, texts: ':' },\n      { delay: 100, texts: ' string' },\n      { delay: 100, texts: ')' },\n      { delay: 100, texts: ' =>' },\n      { delay: 100, texts: ' {\\n' },\n      { delay: 100, texts: '   ' },\n      { delay: 100, texts: ' set' },\n      { delay: 100, texts: 'Editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: '(R' },\n      { delay: 100, texts: 'ich' },\n      { delay: 100, texts: 'Utils' },\n      { delay: 100, texts: '.toggle' },\n      { delay: 100, texts: 'Block' },\n      { delay: 100, texts: 'Type' },\n      { delay: 100, texts: '(editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' block' },\n      { delay: 100, texts: 'Type' },\n      { delay: 100, texts: '));\\n' },\n      { delay: 100, texts: ' ' },\n      { delay: 100, texts: ' };\\n\\n' },\n      { delay: 100, texts: ' ' },\n      { delay: 100, texts: ' const' },\n      { delay: 100, texts: ' toggle' },\n      { delay: 100, texts: 'Inline' },\n      { delay: 100, texts: 'Style' },\n      { delay: 100, texts: ' =' },\n      { delay: 100, texts: ' (' },\n      { delay: 100, texts: 'inline' },\n      { delay: 100, texts: 'Style' },\n      { delay: 100, texts: ':' },\n      { delay: 100, texts: ' string' },\n      { delay: 100, texts: ')' },\n      { delay: 100, texts: ' =>' },\n      { delay: 100, texts: ' {\\n' },\n      { delay: 100, texts: '   ' },\n      { delay: 100, texts: ' set' },\n      { delay: 100, texts: 'Editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: '(R' },\n      { delay: 100, texts: 'ich' },\n      { delay: 100, texts: 'Utils' },\n      { delay: 100, texts: '.toggle' },\n      { delay: 100, texts: 'Inline' },\n      { delay: 100, texts: 'Style' },\n      { delay: 100, texts: '(editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' inline' },\n      { delay: 100, texts: 'Style' },\n      { delay: 100, texts: '));\\n' },\n      { delay: 100, texts: ' ' },\n      { delay: 100, texts: ' };\\n\\n' },\n      { delay: 100, texts: ' ' },\n      { delay: 100, texts: ' return' },\n      { delay: 100, texts: ' (\\n' },\n      { delay: 100, texts: '   ' },\n      { delay: 100, texts: ' <' },\n      { delay: 100, texts: 'div' },\n      { delay: 100, texts: '>\\n' },\n      { delay: 100, texts: '     ' },\n      { delay: 100, texts: ' <' },\n      { delay: 100, texts: 'div' },\n      { delay: 100, texts: '>\\n' },\n      { delay: 100, texts: '       ' },\n      { delay: 100, texts: ' <' },\n      { delay: 100, texts: 'button' },\n      { delay: 100, texts: ' on' },\n      { delay: 100, texts: 'Click' },\n      { delay: 100, texts: '={()' },\n      { delay: 100, texts: ' =>' },\n      { delay: 100, texts: ' toggle' },\n      { delay: 100, texts: 'Block' },\n      { delay: 100, texts: 'Type' },\n      { delay: 100, texts: \"('\" },\n      { delay: 100, texts: 'blockquote' },\n      { delay: 100, texts: \"')\" },\n      { delay: 100, texts: '}>' },\n      { delay: 100, texts: 'Block' },\n      { delay: 100, texts: 'quote' },\n      { delay: 100, texts: '</' },\n      { delay: 100, texts: 'button' },\n      { delay: 100, texts: '>\\n' },\n      { delay: 100, texts: '       ' },\n      { delay: 100, texts: ' <' },\n      { delay: 100, texts: 'button' },\n      { delay: 100, texts: ' on' },\n      { delay: 100, texts: 'Click' },\n      { delay: 100, texts: '={()' },\n      { delay: 100, texts: ' =>' },\n      { delay: 100, texts: ' toggle' },\n      { delay: 100, texts: 'Inline' },\n      { delay: 100, texts: 'Style' },\n      { delay: 100, texts: \"('\" },\n      { delay: 100, texts: 'B' },\n      { delay: 100, texts: 'OLD' },\n      { delay: 100, texts: \"')\" },\n      { delay: 100, texts: '}>' },\n      { delay: 100, texts: 'Bold' },\n      { delay: 100, texts: '</' },\n      { delay: 100, texts: 'button' },\n      { delay: 100, texts: '>\\n' },\n      { delay: 100, texts: '       ' },\n      { delay: 100, texts: ' <' },\n      { delay: 100, texts: 'button' },\n      { delay: 100, texts: ' on' },\n      { delay: 100, texts: 'Click' },\n      { delay: 100, texts: '={()' },\n      { delay: 100, texts: ' =>' },\n      { delay: 100, texts: ' toggle' },\n      { delay: 100, texts: 'Inline' },\n      { delay: 100, texts: 'Style' },\n      { delay: 100, texts: \"('\" },\n      { delay: 100, texts: 'ITAL' },\n      { delay: 100, texts: 'IC' },\n      { delay: 100, texts: \"')\" },\n      { delay: 100, texts: '}>' },\n      { delay: 100, texts: 'Italic' },\n      { delay: 100, texts: '</' },\n      { delay: 100, texts: 'button' },\n      { delay: 100, texts: '>\\n' },\n      { delay: 100, texts: '       ' },\n      { delay: 100, texts: ' <' },\n      { delay: 100, texts: 'button' },\n      { delay: 100, texts: ' on' },\n      { delay: 100, texts: 'Click' },\n      { delay: 100, texts: '={()' },\n      { delay: 100, texts: ' =>' },\n      { delay: 100, texts: ' toggle' },\n      { delay: 100, texts: 'Block' },\n      { delay: 100, texts: 'Type' },\n      { delay: 100, texts: \"('\" },\n      { delay: 100, texts: 'unordered' },\n      { delay: 100, texts: '-list' },\n      { delay: 100, texts: '-item' },\n      { delay: 100, texts: \"')\" },\n      { delay: 100, texts: '}>' },\n      { delay: 100, texts: 'Bullet' },\n      { delay: 100, texts: ' List' },\n      { delay: 100, texts: '</' },\n      { delay: 100, texts: 'button' },\n      { delay: 100, texts: '>\\n' },\n      { delay: 100, texts: '       ' },\n      { delay: 100, texts: ' <' },\n      { delay: 100, texts: 'button' },\n      { delay: 100, texts: ' on' },\n      { delay: 100, texts: 'Click' },\n      { delay: 100, texts: '={()' },\n      { delay: 100, texts: ' =>' },\n      { delay: 100, texts: ' toggle' },\n      { delay: 100, texts: 'Block' },\n      { delay: 100, texts: 'Type' },\n      { delay: 100, texts: \"('\" },\n      { delay: 100, texts: 'ordered' },\n      { delay: 100, texts: '-list' },\n      { delay: 100, texts: '-item' },\n      { delay: 100, texts: \"')\" },\n      { delay: 100, texts: '}>' },\n      { delay: 100, texts: 'Number' },\n      { delay: 100, texts: 'ed' },\n      { delay: 100, texts: ' List' },\n      { delay: 100, texts: '</' },\n      { delay: 100, texts: 'button' },\n      { delay: 100, texts: '>\\n' },\n      { delay: 100, texts: '     ' },\n      { delay: 100, texts: ' </' },\n      { delay: 100, texts: 'div' },\n      { delay: 100, texts: '>\\n' },\n      { delay: 100, texts: '     ' },\n      { delay: 100, texts: ' <' },\n      { delay: 100, texts: 'Editor' },\n      { delay: 100, texts: '\\n' },\n      { delay: 100, texts: '       ' },\n      { delay: 100, texts: ' editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: '={' },\n      { delay: 100, texts: 'editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: '}\\n' },\n      { delay: 100, texts: '       ' },\n      { delay: 100, texts: ' handle' },\n      { delay: 100, texts: 'Key' },\n      { delay: 100, texts: 'Command' },\n      { delay: 100, texts: '={' },\n      { delay: 100, texts: 'handle' },\n      { delay: 100, texts: 'Key' },\n      { delay: 100, texts: 'Command' },\n      { delay: 100, texts: '}\\n' },\n      { delay: 100, texts: '       ' },\n      { delay: 100, texts: ' on' },\n      { delay: 100, texts: 'Change' },\n      { delay: 100, texts: '={' },\n      { delay: 100, texts: 'set' },\n      { delay: 100, texts: 'Editor' },\n      { delay: 100, texts: 'State' },\n      { delay: 100, texts: '}\\n' },\n      { delay: 100, texts: '     ' },\n      { delay: 100, texts: ' />\\n' },\n      { delay: 100, texts: '   ' },\n      { delay: 100, texts: ' </' },\n      { delay: 100, texts: 'div' },\n      { delay: 100, texts: '>\\n' },\n      { delay: 100, texts: ' ' },\n      { delay: 100, texts: ' );\\n' },\n      { delay: 100, texts: '};\\n\\n' },\n      { delay: 100, texts: 'export' },\n      { delay: 100, texts: ' default' },\n      { delay: 100, texts: ' Rich' },\n      { delay: 100, texts: 'Text' },\n      { delay: 100, texts: 'Editor' },\n      { delay: 100, texts: ';\\n' },\n      { delay: 100, texts: '```' },\n      { delay: 100, texts: '`\\n\\n' },\n      { delay: 100, texts: 'This' },\n      { delay: 100, texts: ' example' },\n      { delay: 100, texts: ' sets' },\n      { delay: 100, texts: ' up' },\n      { delay: 100, texts: ' a' },\n      { delay: 100, texts: ' basic' },\n      { delay: 100, texts: ' rich' },\n      { delay: 100, texts: ' text' },\n      { delay: 100, texts: ' editor' },\n      { delay: 100, texts: ' with' },\n      { delay: 100, texts: ' buttons' },\n      { delay: 100, texts: ' to' },\n      { delay: 100, texts: ' apply' },\n      { delay: 100, texts: ' block' },\n      { delay: 100, texts: 'quote' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' bold' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' italic' },\n      { delay: 100, texts: ',' },\n      { delay: 100, texts: ' and' },\n      { delay: 100, texts: ' list' },\n      { delay: 100, texts: ' styles' },\n      { delay: 100, texts: '.' },\n      { delay: 100, texts: ' You' },\n      { delay: 100, texts: ' can' },\n      { delay: 100, texts: ' expand' },\n      { delay: 100, texts: ' this' },\n      { delay: 100, texts: ' by' },\n      { delay: 100, texts: ' adding' },\n      { delay: 100, texts: ' more' },\n      { delay: 100, texts: ' features' },\n      { delay: 100, texts: ' like' },\n      { delay: 100, texts: ' links' },\n      { delay: 100, texts: ' and' },\n      { delay: 100, texts: ' tables' },\n      { delay: 100, texts: ' using' },\n      { delay: 100, texts: ' additional' },\n      { delay: 100, texts: ' plugins' },\n      { delay: 100, texts: ' or' },\n      { delay: 100, texts: ' custom' },\n      { delay: 100, texts: ' components' },\n      { delay: 100, texts: '.' },\n    ],\n  ];\n  const encoder = new TextEncoder();\n\n  return new ReadableStream({\n    async start(controller) {\n      for (let i = 0; i < blocks.length; i++) {\n        const block = blocks[i];\n\n        // Stream the block content\n        for (const chunk of block) {\n          await new Promise((resolve) => setTimeout(resolve, chunk.delay));\n\n          if (streamProtocol === 'text') {\n            controller.enqueue(encoder.encode(chunk.texts));\n          } else {\n            controller.enqueue(\n              encoder.encode(`0:${JSON.stringify(chunk.texts)}\\n`)\n            );\n          }\n        }\n\n        // Add double newline after each block except the last one\n        if (i < blocks.length - 1) {\n          if (streamProtocol === 'text') {\n            controller.enqueue(encoder.encode('\\n\\n'));\n          } else {\n            controller.enqueue(encoder.encode(`0:${JSON.stringify('\\n\\n')}\\n`));\n          }\n        }\n      }\n\n      if (streamProtocol === 'data') {\n        controller.enqueue(\n          `d:{\"finishReason\":\"stop\",\"usage\":{\"promptTokens\":0,\"completionTokens\":${blocks.reduce(\n            (sum, block) => sum + block.length,\n            0\n          )}}}\\n`\n        );\n      }\n\n      controller.close();\n    },\n  });\n};\n",
      "type": "registry:component",
      "target": "components/editor/use-chat.ts"
    }
  ],
  "name": "use-chat",
  "registryDependencies": [],
  "type": "registry:component",
  "$schema": "https://platejs.org/schema/registry-item.json",
  "author": "udecode (https://platejs.org)"
}