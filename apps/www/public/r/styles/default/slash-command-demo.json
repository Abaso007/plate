{
  "doc": {
    "description": "Slash command menu for quick insertion of various content types.",
    "docs": [
      {
        "route": "/docs/slash-command",
        "title": "Slash Command"
      }
    ]
  },
  "files": [
    {
      "content": "import React from 'react';\n\nimport { Plate } from '@udecode/plate-common/react';\n\nimport { editorPlugins } from '@/components/editor/plugins/editor-plugins';\nimport { useCreateEditor } from '@/components/editor/use-create-editor';\nimport { Editor, EditorContainer } from '@/components/plate-ui/editor';\n\nimport { DEMO_VALUES } from './values/demo-values';\n\nexport default function Demo({ id }: { id: string }) {\n  const editor = useCreateEditor({\n    plugins: [...editorPlugins],\n    value: DEMO_VALUES[id],\n  });\n\n  return (\n    <Plate editor={editor}>\n      <EditorContainer variant=\"demo\">\n        <Editor />\n      </EditorContainer>\n    </Plate>\n  );\n}\n",
      "path": "example/demo.tsx",
      "target": "components/demo.tsx",
      "type": "registry:example"
    },
    {
      "content": "'use client';\n\nimport { CalloutPlugin } from '@udecode/plate-callout/react';\nimport { ParagraphPlugin } from '@udecode/plate-common/react';\nimport { DatePlugin } from '@udecode/plate-date/react';\nimport { DocxPlugin } from '@udecode/plate-docx';\nimport { EmojiPlugin } from '@udecode/plate-emoji/react';\nimport {\n  FontBackgroundColorPlugin,\n  FontColorPlugin,\n  FontSizePlugin,\n} from '@udecode/plate-font/react';\nimport { HighlightPlugin } from '@udecode/plate-highlight/react';\nimport { HorizontalRulePlugin } from '@udecode/plate-horizontal-rule/react';\nimport { JuicePlugin } from '@udecode/plate-juice';\nimport { KbdPlugin } from '@udecode/plate-kbd/react';\nimport { ColumnPlugin } from '@udecode/plate-layout/react';\nimport { MarkdownPlugin } from '@udecode/plate-markdown';\nimport {\n  EquationPlugin,\n  InlineEquationPlugin,\n} from '@udecode/plate-math/react';\nimport { SlashPlugin } from '@udecode/plate-slash-command/react';\nimport { TogglePlugin } from '@udecode/plate-toggle/react';\nimport { TrailingBlockPlugin } from '@udecode/plate-trailing-block';\n\nimport { FixedToolbarPlugin } from '@/components/editor/plugins/fixed-toolbar-plugin';\nimport { FloatingToolbarPlugin } from '@/components/editor/plugins/floating-toolbar-plugin';\n\nimport { aiPlugins } from './ai-plugins';\nimport { alignPlugin } from './align-plugin';\nimport { autoformatPlugin } from './autoformat-plugin';\nimport { basicNodesPlugins } from './basic-nodes-plugins';\nimport { blockMenuPlugins } from './block-menu-plugins';\nimport { commentsPlugin } from './comments-plugin';\nimport { cursorOverlayPlugin } from './cursor-overlay-plugin';\nimport { deletePlugins } from './delete-plugins';\nimport { dndPlugins } from './dnd-plugins';\nimport { exitBreakPlugin } from './exit-break-plugin';\nimport { indentListPlugins } from './indent-list-plugins';\nimport { lineHeightPlugin } from './line-height-plugin';\nimport { linkPlugin } from './link-plugin';\nimport { mediaPlugins } from './media-plugins';\nimport { mentionPlugin } from './mention-plugin';\nimport { resetBlockTypePlugin } from './reset-block-type-plugin';\nimport { softBreakPlugin } from './soft-break-plugin';\nimport { tablePlugin } from './table-plugin';\nimport { tocPlugin } from './toc-plugin';\n\nexport const viewPlugins = [\n  ...basicNodesPlugins,\n  HorizontalRulePlugin,\n  linkPlugin,\n  DatePlugin,\n  mentionPlugin,\n  tablePlugin,\n  TogglePlugin,\n  tocPlugin,\n  ...mediaPlugins,\n  InlineEquationPlugin,\n  EquationPlugin,\n  CalloutPlugin,\n  ColumnPlugin,\n\n  // Marks\n  FontColorPlugin,\n  FontBackgroundColorPlugin,\n  FontSizePlugin,\n  HighlightPlugin,\n  KbdPlugin,\n\n  // Block Style\n  alignPlugin,\n  ...indentListPlugins,\n  lineHeightPlugin,\n\n  // Collaboration\n  commentsPlugin,\n] as const;\n\nexport const editorPlugins = [\n  // AI\n  ...aiPlugins,\n\n  // Nodes\n  ...viewPlugins,\n\n  // Functionality\n  SlashPlugin,\n  autoformatPlugin,\n  cursorOverlayPlugin,\n  ...blockMenuPlugins,\n  ...dndPlugins,\n  EmojiPlugin,\n  exitBreakPlugin,\n  resetBlockTypePlugin,\n  ...deletePlugins,\n  softBreakPlugin,\n  TrailingBlockPlugin.configure({ options: { type: ParagraphPlugin.key } }),\n\n  // Deserialization\n  DocxPlugin,\n  MarkdownPlugin.configure({ options: { indentList: true } }),\n  JuicePlugin,\n\n  // UI\n  FixedToolbarPlugin,\n  FloatingToolbarPlugin,\n];\n",
      "path": "components/editor/plugins/editor-plugins.tsx",
      "target": "components/editor-plugins.tsx",
      "type": "registry:example"
    },
    {
      "content": "import { jsx } from '@udecode/plate-test-utils';\n\njsx;\n\nexport const slashCommandValue: any = (\n  <fragment>\n    <hh2>\n      <htext>Slash Command</htext>\n    </hh2>\n    <hp>\n      <htext>\n        The slash menu provides quick access to various formatting options and\n        content types.\n      </htext>\n    </hp>\n    <hp indent={1} listStyleType=\"disc\">\n      <htext>Type '/' anywhere in your document to open the slash menu.</htext>\n    </hp>\n    <hp indent={1} listStyleType=\"disc\">\n      <htext>\n        Start typing to filter options or use arrow keys to navigate.\n      </htext>\n    </hp>\n    <hp indent={1} listStyleType=\"disc\">\n      <htext>Press Enter or click to select an option.</htext>\n    </hp>\n    <hp indent={1} listStyleType=\"disc\">\n      <htext>Press Escape to close the menu without selecting.</htext>\n    </hp>\n    <hp>Available options include:</hp>\n    <hp indent={1} listStyleType=\"disc\">\n      <htext>Headings: Heading 1, Heading 2, Heading 3</htext>\n    </hp>\n    <hp indent={1} listStyleType=\"disc\">\n      <htext>Lists: Bulleted list, Numbered list</htext>\n    </hp>\n    <hp indent={1} listStyleType=\"disc\">\n      <htext>Inline Elements: Date</htext>\n    </hp>\n    {/* <hcallout variant=\"info\" icon=\"ðŸ’¡\">\n      <htext>\n        Use keywords to quickly find options. For example, type '/h1' for\n        Heading 1, '/ul' for Bulleted list, or '/date' for Date insertion.\n      </htext>\n    </hcallout> */}\n  </fragment>\n);\n",
      "path": "example/values/slash-command-value.tsx",
      "target": "components/slash-command-value.tsx",
      "type": "registry:example"
    }
  ],
  "name": "slash-command-demo",
  "registryDependencies": [],
  "type": "registry:example"
}