{
  "doc": {
    "description": "Copy paste from HTML to Slate.",
    "title": "HTML Parser"
  },
  "files": [
    {
      "content": "import React from 'react';\n\nimport { Plate } from '@udecode/plate-common/react';\n\nimport { editorPlugins } from '@/components/editor/plugins/editor-plugins';\nimport { useCreateEditor } from '@/components/editor/use-create-editor';\nimport { Editor, EditorContainer } from '@/components/plate-ui/editor';\n\nimport { DEMO_VALUES } from './values/demo-values';\n\nexport default function Demo({ id }: { id: string }) {\n  const editor = useCreateEditor({\n    plugins: [...editorPlugins],\n    value: DEMO_VALUES[id],\n  });\n\n  return (\n    <Plate editor={editor}>\n      <EditorContainer variant=\"demo\">\n        <Editor />\n      </EditorContainer>\n    </Plate>\n  );\n}\n",
      "path": "example/demo.tsx",
      "target": "components/demo.tsx",
      "type": "registry:example"
    },
    {
      "content": "import { jsx } from '@udecode/plate-test-utils';\n\njsx;\n\nexport const deserializeHtmlValue: any = (\n  <fragment>\n    <hh2>HTML</hh2>\n    <hp>\n      By default, when you paste content into the Slate editor, it will utilize\n      the clipboard's <htext code>'text/plain'</htext>\n      data. While this is suitable for certain scenarios, there are times when\n      you want users to be able to paste content while preserving its\n      formatting. To achieve this, your editor should be capable of handling{' '}\n      <htext code>'text/html'</htext>\n      data.\n    </hp>\n    <hp>\n      To experience the seamless preservation of formatting, simply copy and\n      paste rendered HTML rich text content (not the source code) from another\n      website into this editor. You'll notice that the formatting of the pasted\n      content is maintained.\n    </hp>\n  </fragment>\n);\n",
      "path": "example/values/deserialize-html-value.tsx",
      "target": "components/deserialize-html-value.tsx",
      "type": "registry:example"
    }
  ],
  "name": "deserialize-html",
  "type": "registry:example"
}