{
  "dependencies": [
    "@radix-ui/react-context-menu"
  ],
  "files": [
    {
      "content": "import { useCallback } from 'react';\n\nimport { BlockquotePlugin } from '@udecode/plate-block-quote/react';\nimport { ParagraphPlugin, useEditorPlugin } from '@udecode/plate-core/react';\nimport { HEADING_KEYS } from '@udecode/plate-heading';\nimport { IndentListPlugin } from '@udecode/plate-indent-list/react';\nimport {\n  BLOCK_CONTEXT_MENU_ID,\n  BlockMenuPlugin,\n  BlockSelectionPlugin,\n} from '@udecode/plate-selection/react';\nimport { unsetNodes } from '@udecode/slate';\nimport { focusEditor } from '@udecode/slate-react';\n\nimport {\n  ContextMenu,\n  ContextMenuCheckboxItem,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuTrigger,\n} from './context-menu';\n\nexport const BlockContextMenu = (props: { children: React.ReactNode }) => {\n  const { api, editor } = useEditorPlugin(BlockMenuPlugin);\n\n  const { children } = props;\n\n  const handleTurnInto = useCallback(\n    (type: string) => {\n      editor\n        .getApi(BlockSelectionPlugin)\n        .blockSelection.getNodes()\n        .forEach(([node, path]) => {\n          if (node[IndentListPlugin.key]) {\n            unsetNodes(editor, [IndentListPlugin.key, 'indent'], { at: path });\n          }\n\n          editor.tf.toggle.block({ type }, { at: path });\n        });\n    },\n    [editor]\n  );\n\n  const handleAlign = useCallback(\n    (align: 'center' | 'left' | 'right') => {\n      editor\n        .getTransforms(BlockSelectionPlugin)\n        .blockSelection.setNodes({ align });\n    },\n    [editor]\n  );\n\n  return (\n    <ContextMenu>\n      <ContextMenuTrigger\n        onContextMenu={(event) => {\n          const dataset = (event.target as HTMLElement).dataset;\n\n          const disabled = dataset?.slateEditor === 'true';\n\n          if (disabled) return event.preventDefault();\n\n          api.blockMenu.show(BLOCK_CONTEXT_MENU_ID, {\n            x: event.clientX,\n            y: event.clientY,\n          });\n        }}\n      >\n        {children}\n      </ContextMenuTrigger>\n      <ContextMenuContent className=\"w-64\">\n        <ContextMenuItem inset>Ask AI</ContextMenuItem>\n        <ContextMenuItem\n          onClick={() => {\n            editor\n              .getTransforms(BlockSelectionPlugin)\n              .blockSelection.removeNodes();\n            focusEditor(editor);\n          }}\n          inset\n        >\n          Delete\n        </ContextMenuItem>\n        <ContextMenuItem\n          onClick={() => {\n            editor\n              .getTransforms(BlockSelectionPlugin)\n              .blockSelection.duplicate(\n                editor.getApi(BlockSelectionPlugin).blockSelection.getNodes()\n              );\n          }}\n          inset\n        >\n          Duplicate\n          <ContextMenuShortcut>âŒ˜ + D</ContextMenuShortcut>\n        </ContextMenuItem>\n        <ContextMenuSub>\n          <ContextMenuSubTrigger inset>Turn into</ContextMenuSubTrigger>\n          <ContextMenuSubContent className=\"w-48\">\n            <ContextMenuItem\n              onClick={() => handleTurnInto(ParagraphPlugin.key)}\n            >\n              Paragraph\n            </ContextMenuItem>\n\n            <ContextMenuItem onClick={() => handleTurnInto(HEADING_KEYS.h1)}>\n              Heading 1\n            </ContextMenuItem>\n            <ContextMenuItem onClick={() => handleTurnInto(HEADING_KEYS.h2)}>\n              Heading 2\n            </ContextMenuItem>\n            <ContextMenuItem onClick={() => handleTurnInto(HEADING_KEYS.h3)}>\n              Heading 3\n            </ContextMenuItem>\n            <ContextMenuItem\n              onClick={() => handleTurnInto(BlockquotePlugin.key)}\n            >\n              Blockquote\n            </ContextMenuItem>\n          </ContextMenuSubContent>\n        </ContextMenuSub>\n        <ContextMenuSeparator />\n        <ContextMenuCheckboxItem\n          onClick={() =>\n            editor\n              .getTransforms(BlockSelectionPlugin)\n              .blockSelection.setIndent(1)\n          }\n        >\n          Indent\n        </ContextMenuCheckboxItem>\n        <ContextMenuCheckboxItem\n          onClick={() =>\n            editor\n              .getTransforms(BlockSelectionPlugin)\n              .blockSelection.setIndent(-1)\n          }\n        >\n          Outdent\n        </ContextMenuCheckboxItem>\n        <ContextMenuSub>\n          <ContextMenuSubTrigger inset>Align</ContextMenuSubTrigger>\n          <ContextMenuSubContent className=\"w-48\">\n            <ContextMenuItem onClick={() => handleAlign('left')}>\n              Left\n            </ContextMenuItem>\n            <ContextMenuItem onClick={() => handleAlign('center')}>\n              Center\n            </ContextMenuItem>\n            <ContextMenuItem onClick={() => handleAlign('right')}>\n              Right\n            </ContextMenuItem>\n          </ContextMenuSubContent>\n        </ContextMenuSub>\n      </ContextMenuContent>\n    </ContextMenu>\n  );\n};\n",
      "path": "plate-ui/block-context-menu.tsx",
      "target": "components/plate-ui/block-context-menu.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "block-context-menu",
  "registryDependencies": [
    "calendar",
    "plate-element"
  ],
  "type": "registry:ui"
}