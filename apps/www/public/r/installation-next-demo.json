{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "installation-next-demo",
  "type": "registry:example",
  "dependencies": [
    "@udecode/cn",
    "@udecode/plate-basic-elements",
    "@udecode/plate-basic-marks"
  ],
  "registryDependencies": [
    "https://platejs.org/r/editor",
    "https://platejs.org/r/fixed-toolbar",
    "https://platejs.org/r/mark-toolbar-button",
    "https://platejs.org/r/heading-node",
    "https://platejs.org/r/paragraph-node",
    "https://platejs.org/r/blockquote-node"
  ],
  "files": [
    {
      "path": "src/registry/examples/installation-next-04-value-demo.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\n\nimport type { Value } from '@udecode/plate';\n\nimport { BasicElementsPlugin } from '@udecode/plate-basic-elements/react';\nimport { BasicMarksPlugin } from '@udecode/plate-basic-marks/react';\nimport {\n  type PlateElementProps,\n  type PlateLeafProps,\n  Plate,\n  PlateLeaf,\n  usePlateEditor,\n} from '@udecode/plate/react';\n\nimport { BlockquoteElement } from '@/registry/ui/blockquote-node';\nimport { Editor, EditorContainer } from '@/registry/ui/editor';\nimport { FixedToolbar } from '@/registry/ui/fixed-toolbar';\nimport { HeadingElement } from '@/registry/ui/heading-node';\nimport { MarkToolbarButton } from '@/registry/ui/mark-toolbar-button';\nimport { ParagraphElement } from '@/registry/ui/paragraph-node';\nimport { ToolbarButton } from '@/registry/ui/toolbar';\n\nconst initialValue: Value = [\n  {\n    children: [{ text: 'Title' }],\n    type: 'h3',\n  },\n  {\n    children: [{ text: 'This is a quote.' }],\n    type: 'blockquote',\n  },\n  {\n    children: [\n      { text: 'With some ' },\n      { bold: true, text: 'bold' },\n      { text: ' text for emphasis!' },\n    ],\n    type: 'p',\n  },\n];\n\nexport default function MyEditorPage() {\n  const editor = usePlateEditor({\n    components: {\n      blockquote: BlockquoteElement,\n      p: ParagraphElement,\n      bold: function Bold(props: PlateLeafProps) {\n        return <PlateLeaf {...props} as=\"strong\" />;\n      },\n      h1: function H1(props: PlateElementProps) {\n        return <HeadingElement {...props} variant=\"h1\" />;\n      },\n      h2: function H2(props: PlateElementProps) {\n        return <HeadingElement {...props} variant=\"h2\" />;\n      },\n      h3: function H3(props: PlateElementProps) {\n        return <HeadingElement {...props} variant=\"h3\" />;\n      },\n      italic: function Italic(props: PlateLeafProps) {\n        return <PlateLeaf {...props} as=\"em\" />;\n      },\n      underline: function Underline(props: PlateLeafProps) {\n        return <PlateLeaf {...props} as=\"u\" />;\n      },\n    },\n    plugins: [BasicElementsPlugin, BasicMarksPlugin],\n    value: () => {\n      const savedValue = localStorage.getItem(\n        `nextjs-plate-value-demo-${new Date().toISOString().split('T')[0]}`\n      );\n      if (savedValue) {\n        return JSON.parse(savedValue);\n      }\n      return initialValue;\n    },\n  });\n\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  return (\n    <Plate\n      onChange={({ value }) => {\n        localStorage.setItem(\n          `nextjs-plate-value-demo-${new Date().toISOString().split('T')[0]}`,\n          JSON.stringify(value)\n        );\n      }}\n      editor={editor}\n    >\n      <FixedToolbar className=\"flex justify-start gap-1 rounded-t-lg\">\n        <ToolbarButton onClick={() => editor.tf.toggleBlock('h1')}>\n          H1\n        </ToolbarButton>\n        <ToolbarButton onClick={() => editor.tf.toggleBlock('h2')}>\n          H2\n        </ToolbarButton>\n        <ToolbarButton onClick={() => editor.tf.toggleBlock('h3')}>\n          H3\n        </ToolbarButton>\n\n        <ToolbarButton onClick={() => editor.tf.toggleBlock('blockquote')}>\n          Quote\n        </ToolbarButton>\n\n        <MarkToolbarButton nodeType=\"bold\" tooltip=\"Bold (⌘+B)\">\n          B\n        </MarkToolbarButton>\n        <MarkToolbarButton nodeType=\"italic\" tooltip=\"Italic (⌘+I)\">\n          I\n        </MarkToolbarButton>\n        <MarkToolbarButton nodeType=\"underline\" tooltip=\"Underline (⌘+U)\">\n          U\n        </MarkToolbarButton>\n\n        <div className=\"flex-1\" />\n\n        <ToolbarButton\n          className=\"px-2\"\n          onClick={() => {\n            editor.tf.setValue(initialValue);\n          }}\n        >\n          Reset\n        </ToolbarButton>\n      </FixedToolbar>\n\n      <EditorContainer>\n        <Editor placeholder=\"Type your amazing content here...\" />\n      </EditorContainer>\n    </Plate>\n  );\n}\n",
      "type": "registry:example"
    }
  ]
}