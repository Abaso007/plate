{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comment-node",
  "type": "registry:ui",
  "title": "Comment Leaf",
  "description": "A text component for displaying comments with visual indicators.",
  "dependencies": [
    "@udecode/plate-comments"
  ],
  "registryDependencies": [
    "https://platejs.org/r/highlight-style"
  ],
  "files": [
    {
      "path": "src/registry/ui/comment-node.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\n\nimport type { TCommentText } from '@udecode/plate-comments';\nimport type { PlateLeafProps } from '@udecode/plate/react';\n\nimport { getCommentCount } from '@udecode/plate-comments';\nimport {\n  PlateLeaf,\n  useEditorPlugin,\n  usePluginOption,\n} from '@udecode/plate/react';\n\nimport { cn } from '@/lib/utils';\nimport { commentsPlugin } from '@/registry/components/editor/plugins/comments-plugin';\n\nexport function CommentLeaf(props: PlateLeafProps<TCommentText>) {\n  const { children, leaf } = props;\n\n  const { api, setOption } = useEditorPlugin(commentsPlugin);\n  const hoverId = usePluginOption(commentsPlugin, 'hoverId');\n  const activeId = usePluginOption(commentsPlugin, 'activeId');\n\n  const isOverlapping = getCommentCount(leaf) > 1;\n  const currentId = api.comment.nodeId(leaf);\n  const isActive = activeId === currentId;\n  const isHover = hoverId === currentId;\n\n  return (\n    <PlateLeaf\n      {...props}\n      className={cn(\n        'border-b-2 border-b-highlight/[.36] bg-highlight/[.13] transition-colors duration-200',\n        (isHover || isActive) && 'border-b-highlight bg-highlight/25',\n        isOverlapping && 'border-b-2 border-b-highlight/[.7] bg-highlight/25',\n        (isHover || isActive) &&\n          isOverlapping &&\n          'border-b-highlight bg-highlight/45'\n      )}\n      attributes={{\n        ...props.attributes,\n        onClick: () => setOption('activeId', currentId ?? null),\n        onMouseEnter: () => setOption('hoverId', currentId ?? null),\n        onMouseLeave: () => setOption('hoverId', null),\n      }}\n    >\n      {children}\n    </PlateLeaf>\n  );\n}\n",
      "type": "registry:ui"
    },
    {
      "path": "src/registry/ui/comment-node-static.tsx",
      "content": "import * as React from 'react';\n\nimport type { SlateLeafProps } from '@udecode/plate';\nimport type { TCommentText } from '@udecode/plate-comments';\n\nimport { SlateLeaf } from '@udecode/plate';\n\nexport function CommentLeafStatic(props: SlateLeafProps<TCommentText>) {\n  return (\n    <SlateLeaf\n      {...props}\n      className=\"border-b-2 border-b-highlight/35 bg-highlight/15\"\n    >\n      {props.children}\n    </SlateLeaf>\n  );\n}\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "docs": [
      {
        "route": "/docs/comments"
      },
      {
        "route": "https://pro.platejs.org/docs/components/comment-node"
      }
    ],
    "examples": [
      "comments-demo",
      "comments-pro"
    ]
  }
}